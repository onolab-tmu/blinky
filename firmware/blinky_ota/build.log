[0/1] Re-running CMake...
-- Building ESP-IDF components for target esp32
-- App "blinky_ota" version: 202004_IEEEAccess-5-g24004ca-di
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.newlib-time.ld
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.ld
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.libgcc.ld
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.newlib-data.ld
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.syscalls.ld
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/esp32/ld/esp32.rom.newlib-funcs.ld
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/build/esp-idf/esp32/esp32_out.ld
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32/ld/esp32.project.ld.in
-- Adding linker script /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32/ld/esp32.peripherals.ld
-- Components: EVXAudioRecorder EVXGPIOController EVXLEDController EVXTimer app_trace app_update asio bootloader bootloader_support bt cbor cereal coap console cxx driver efuse esp-tls esp32 esp_adc_cal esp_common esp_eth esp_event esp_gdbstub esp_hid esp_http_client esp_http_server esp_https_ota esp_https_server esp_ipc esp_local_ctrl esp_netif esp_ringbuf esp_rom esp_serial_slave_link esp_system esp_timer esp_websocket_client esp_wifi espcoredump esptool_py expat fatfs freemodbus freertos heap idf_test jsmn json libsodium log lwip main mbedtls mdns mqtt newlib nghttp nvs_flash openssl partition_table perfmon protobuf-c protocomm pthread sdmmc soc spi_flash spiffs tcp_transport tcpip_adapter tiny_dnn tinyusb ulp unity vfs wear_levelling wifi_provisioning wpa_supplicant xtensa
-- Component paths: /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/components/EVXAudioRecorder /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/components/EVXGPIOController /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/components/EVXLEDController /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/components/EVXTimer /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_trace /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_update /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/asio /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/bootloader /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/bootloader_support /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/bt /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/cbor /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/components/cereal /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/console /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/cxx /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp-tls /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32 /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_adc_cal /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_eth /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_gdbstub /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_hid /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_client /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_server /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_https_ota /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_https_server /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ipc /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_local_ctrl /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ringbuf /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_serial_slave_link /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_system /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_websocket_client /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/espcoredump /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esptool_py /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/expat /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freemodbus /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/heap /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/idf_test /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/jsmn /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/json /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/libsodium /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/log /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/main /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mdns /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mqtt /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/newlib /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nghttp /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nvs_flash /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/openssl /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/partition_table /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/perfmon /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protobuf-c /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/pthread /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/sdmmc /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spi_flash /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spiffs /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcp_transport /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/components/tiny_dnn /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tinyusb /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/ulp /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/unity /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/vfs /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wear_levelling /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wifi_provisioning /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa
-- Configuring done
-- Generating done
-- Build files have been written to: /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/build
[1/48] Performing build step for 'bootloader'
ninja: no work to do.
[2/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_ops.cpp.obj
[3/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_item_hash_list.cpp.obj
[4/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_pagemanager.cpp.obj
[5/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_storage.cpp.obj
[6/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_handle_locked.cpp.obj
[7/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_page.cpp.obj
[8/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_handle_simple.cpp.obj
[9/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_cxx_api.cpp.obj
[10/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_api.cpp.obj
[11/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_partition_manager.cpp.obj
[12/46] Building CXX object esp-idf/nvs_flash/CMakeFiles/__idf_nvs_flash.dir/src/nvs_types.cpp.obj
[13/46] Building CXX object esp-idf/cxx/CMakeFiles/__idf_cxx.dir/cxx_exception_stubs.cpp.obj
[14/46] Building CXX object esp-idf/cxx/CMakeFiles/__idf_cxx.dir/cxx_guards.cpp.obj
[15/46] Linking CXX static library esp-idf/cxx/libcxx.a
[16/46] Linking CXX static library esp-idf/nvs_flash/libnvs_flash.a
[17/46] Building CXX object esp-idf/cereal/CMakeFiles/__idf_cereal.dir/cereal.cpp.obj
[18/46] Linking CXX static library esp-idf/cereal/libcereal.a
[19/46] Building CXX object esp-idf/wear_levelling/CMakeFiles/__idf_wear_levelling.dir/crc32.cpp.obj
[20/46] Building CXX object esp-idf/wear_levelling/CMakeFiles/__idf_wear_levelling.dir/WL_Ext_Perf.cpp.obj
[21/46] Building CXX object esp-idf/wear_levelling/CMakeFiles/__idf_wear_levelling.dir/SPI_Flash.cpp.obj
[22/46] Building CXX object esp-idf/wear_levelling/CMakeFiles/__idf_wear_levelling.dir/WL_Ext_Safe.cpp.obj
[23/46] Building CXX object esp-idf/wear_levelling/CMakeFiles/__idf_wear_levelling.dir/Partition.cpp.obj
[24/46] Building CXX object esp-idf/wear_levelling/CMakeFiles/__idf_wear_levelling.dir/wear_levelling.cpp.obj
[25/46] Building CXX object esp-idf/wear_levelling/CMakeFiles/__idf_wear_levelling.dir/WL_Flash.cpp.obj
[26/46] Building CXX object esp-idf/tiny_dnn/CMakeFiles/__idf_tiny_dnn.dir/tiny_dnn.cpp.obj
FAILED: esp-idf/tiny_dnn/CMakeFiles/__idf_tiny_dnn.dir/tiny_dnn.cpp.obj 
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-g++   -Iconfig -I../components/tiny_dnn/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/newlib/platform_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/heap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/log/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps/sntp -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/lwip/src/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include/arch -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/. -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_system/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ringbuf/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/espcoredump/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ipc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/../include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/private_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/vfs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_eth/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_trace/include -mlongcalls -Wno-frame-address   -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wextra -Wno-unused-parameter -Wno-sign-compare -ggdb -Og -std=c++11 -D_GNU_SOURCE -DIDF_VER=\"v4.2\" -DESP_PLATFORM -MD -MT esp-idf/tiny_dnn/CMakeFiles/__idf_tiny_dnn.dir/tiny_dnn.cpp.obj -MF esp-idf/tiny_dnn/CMakeFiles/__idf_tiny_dnn.dir/tiny_dnn.cpp.obj.d -o esp-idf/tiny_dnn/CMakeFiles/__idf_tiny_dnn.dir/tiny_dnn.cpp.obj -c ../components/tiny_dnn/tiny_dnn.cpp
../components/tiny_dnn/tiny_dnn.cpp:1:10: fatal error: tiny_dnn.h: No such file or directory
 #include "tiny_dnn.h"
          ^~~~~~~~~~~~
compilation terminated.
[27/46] Linking CXX static library esp-idf/wear_levelling/libwear_levelling.a
[28/46] Building CXX object esp-idf/EVXAudioRecorder/CMakeFiles/__idf_EVXAudioRecorder.dir/EVXAudioRecorder.cpp.obj
FAILED: esp-idf/EVXAudioRecorder/CMakeFiles/__idf_EVXAudioRecorder.dir/EVXAudioRecorder.cpp.obj 
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-g++   -Iconfig -I../components/EVXAudioRecorder -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/newlib/platform_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/heap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/log/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps/sntp -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/lwip/src/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include/arch -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/. -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_system/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ringbuf/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/espcoredump/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ipc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/../include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/private_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/vfs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_eth/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_trace/include -mlongcalls -Wno-frame-address   -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wextra -Wno-unused-parameter -Wno-sign-compare -ggdb -Og -std=c++11 -D_GNU_SOURCE -DIDF_VER=\"v4.2\" -DESP_PLATFORM -MD -MT esp-idf/EVXAudioRecorder/CMakeFiles/__idf_EVXAudioRecorder.dir/EVXAudioRecorder.cpp.obj -MF esp-idf/EVXAudioRecorder/CMakeFiles/__idf_EVXAudioRecorder.dir/EVXAudioRecorder.cpp.obj.d -o esp-idf/EVXAudioRecorder/CMakeFiles/__idf_EVXAudioRecorder.dir/EVXAudioRecorder.cpp.obj -c ../components/EVXAudioRecorder/EVXAudioRecorder.cpp
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include/hal/i2s_hal.h:28,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include/driver/i2s.h:24,
                 from ../components/EVXAudioRecorder/EVXAudioRecorder.h:11,
                 from ../components/EVXAudioRecorder/EVXAudioRecorder.cpp:6:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h: In function 'void i2s_ll_enable_dma(i2s_dev_t*)':
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: error: 'typeof' was not declared in this scope
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: note: suggested alternative: 'feof'
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
     feof
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:244:5: error: 'lc_conf' was not declared in this scope
     lc_conf.val = 0;
     ^~~~~~~
[29/46] Building CXX object esp-idf/EVXTimer/CMakeFiles/__idf_EVXTimer.dir/EVXTimer.cpp.obj
[30/46] Building CXX object esp-idf/EVXGPIOController/CMakeFiles/__idf_EVXGPIOController.dir/EVXGPIOController.cpp.obj
[31/46] Building CXX object esp-idf/EVXLEDController/CMakeFiles/__idf_EVXLEDController.dir/EVXLEDController.cpp.obj
[32/46] Building CXX object esp-idf/asio/CMakeFiles/__idf_asio.dir/asio/asio/src/asio.cpp.obj
[33/46] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/otohikari.cpp.obj
FAILED: esp-idf/main/CMakeFiles/__idf_main.dir/otohikari.cpp.obj 
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-g++  -DHAVE_CONFIG_H -DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\" -DUNITY_INCLUDE_CONFIG_H -DWITH_POSIX -Iconfig -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/newlib/platform_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/heap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/log/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps/sntp -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/lwip/src/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include/arch -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/. -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_system/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ringbuf/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/espcoredump/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ipc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/../include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/private_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/vfs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_eth/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_trace/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/mbedtls/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/esp_crt_bundle/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/bootloader_support/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_update/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spi_flash/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/include/esp_supplicant -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nvs_flash/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/pthread/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/perfmon/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/asio/asio/asio/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/asio/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/cbor/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/port/include/coap -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/libcoap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/libcoap/include/coap2 -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/console -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nghttp/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nghttp/nghttp2/lib/includes -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp-tls -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_adc_cal/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_gdbstub/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_hid/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcp_transport/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_client/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_server/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_https_ota/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protobuf-c/protobuf-c -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/common -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/security -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/transports -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mdns/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_local_ctrl/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/sdmmc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_serial_slave_link/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_websocket_client/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/expat/expat/expat/lib -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/expat/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wear_levelling/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/diskio -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/vfs -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/src -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freemodbus/common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/idf_test/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/idf_test/include/esp32 -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/jsmn/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/json/cJSON -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/libsodium/libsodium/src/libsodium/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/libsodium/port_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mqtt/esp-mqtt/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/openssl/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spiffs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/ulp/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/unity/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/unity/unity/src -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wifi_provisioning/include -I../components/EVXAudioRecorder -I../components/EVXGPIOController -I../components/EVXLEDController -I../components/EVXTimer -I../components/cereal/include -I../components/tiny_dnn/include -mlongcalls -Wno-frame-address   -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wextra -Wno-unused-parameter -Wno-sign-compare -ggdb -Og -std=c++11 -D_GNU_SOURCE -DIDF_VER=\"v4.2\" -DESP_PLATFORM -MD -MT esp-idf/main/CMakeFiles/__idf_main.dir/otohikari.cpp.obj -MF esp-idf/main/CMakeFiles/__idf_main.dir/otohikari.cpp.obj.d -o esp-idf/main/CMakeFiles/__idf_main.dir/otohikari.cpp.obj -c ../main/otohikari.cpp
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include/hal/i2s_hal.h:28,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include/driver/i2s.h:24,
                 from ../components/EVXAudioRecorder/EVXAudioRecorder.h:11,
                 from ../main/otohikari.cpp:9:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h: In function 'void i2s_ll_enable_dma(i2s_dev_t*)':
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: error: 'typeof' was not declared in this scope
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: note: suggested alternative: 'feof'
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
     feof
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:244:5: error: 'lc_conf' was not declared in this scope
     lc_conf.val = 0;
     ^~~~~~~
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:244:5: note: suggested alternative: 'sysconf'
     lc_conf.val = 0;
     ^~~~~~~
     sysconf
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected ')' before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                   ~^~~~
                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:11: error: expected unqualified-id before 'decltype'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
 decltype(auto) forward_sequence(A&& s);
          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected ')' before 'auto'
 decltype(auto) forward_sequence(A&& s);
         ~^~~~
          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
 decltype(auto) forward_sequence(A&& s);
          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:1: error: expected unqualified-id before 'decltype'
 decltype(auto) forward_sequence(A&& s);
 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:146:13: error: 'enable_if_t' in namespace 'std' does not name a template type
 inline std::enable_if_t<I == sizeof...(T), R> accumulate_impl(
             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:146:8: note: suggested alternative: 'enable_if'
 inline std::enable_if_t<I == sizeof...(T), R> accumulate_impl(
        ^~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:154:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t <
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:154:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t <
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::accumulate(F&&, R, const std::tuple<_Args2 ...>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:18: error: 'accumulate_impl' is not a member of 'xt::detail'
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                  ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:38: error: expected primary-expression before ',' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:41: error: expected primary-expression before ',' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected primary-expression before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected ';' before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
                                            ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected primary-expression before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                             ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected ')' before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                            ~^~~~
                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                             ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:20: error: expected unqualified-id before 'decltype'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected ')' before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                   ~^~~~
                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:11: error: expected unqualified-id before 'decltype'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:244:14: error: 'std::index_sequence' has not been declared
         std::index_sequence<I...> /*seq*/,
              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:244:28: error: expected ',' or '...' before '<' token
         std::index_sequence<I...> /*seq*/,
                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::detail::apply(std::size_t, F&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:246:19: error: 'add_pointer_t' in namespace 'std' does not name a template type
   using FT = std::add_pointer_t<R(F&&, const std::tuple<S...>&)>;
                   ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:246:14: note: suggested alternative: 'add_pointer'
   using FT = std::add_pointer_t<R(F&&, const std::tuple<S...>&)>;
              ^~~
              add_pointer
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:27: error: 'FT' was not declared in this scope
   static const std::array<FT, sizeof...(I)> ar = {
                           ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:27: note: suggested alternative: 'F'
   static const std::array<FT, sizeof...(I)> ar = {
                           ^~
                           F
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:43: error: template argument 1 is invalid
   static const std::array<FT, sizeof...(I)> ar = {
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:249:18: error: invalid types 'const int[std::size_t {aka unsigned int}]' for array subscript
   return ar[index](std::forward<F>(func), s);
                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:249:43: error: 's' was not declared in this scope
   return ar[index](std::forward<F>(func), s);
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::apply(std::size_t, F&&, const std::tuple<_Args2 ...>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:257:32: error: 'make_index_sequence' is not a member of 'std'
                           std::make_index_sequence<sizeof...(S)>(), s);
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:257:66: error: expected primary-expression before ')' token
                           std::make_index_sequence<sizeof...(S)>(), s);
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:337:41: error: 'std::index_sequence' has not been declared
 constexpr R initializer_shape(U t, std::index_sequence<I...>) {
                                         ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:337:55: error: expected ',' or '...' before '<' token
 constexpr R initializer_shape(U t, std::index_sequence<I...>) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'constexpr R xt::shape(T)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:346:13: error: 'make_index_sequence' is not a member of 'std'
     t, std::make_index_sequence<initializer_dimension<decltype(t)>::value>());
             ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:346:76: error: expected primary-expression before ')' token
     t, std::make_index_sequence<initializer_dimension<decltype(t)>::value>());
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: error: 'enable_if_t' is not a member of 'std'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: note: suggested alternative: 'enable_if'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: error: 'enable_if_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: note: suggested alternative: 'enable_if'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:56: error: type/value mismatch at argument 3 in template parameter list for 'template<class R, class A, class E> struct xt::detail::sequence_forwarder'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
                                                        ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:56: note:   expected a type, got '(<expression error> < (! std::is_same<std::array<_Tp, _Nm>, A>::value))'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:61: error: expected unqualified-id before '>' token
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
                                                             ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                 ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected ')' before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                ~^~~~
                 )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                 ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:8: error: expected unqualified-id before 'decltype'
 inline decltype(auto) forward_sequence(A&& s) {
        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:490:16: error: 'common_type_t' in namespace 'std' does not name a template type
 constexpr std::common_type_t<T1, T2> imax(const T1& a, const T2& b) {
                ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:490:11: note: suggested alternative: 'common_type'
 constexpr std::common_type_t<T1, T2> imax(const T1& a, const T2& b) {
           ^~~
           common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:568:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:568:5: note: suggested alternative: 'conditional'
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:573:57: error: wrong number of template arguments (2, should be 3)
                                          underlying_type>::type;
                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/move.h:55,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_pair.h:59,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:64,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/type_traits:92:12: note: provided for 'template<bool <anonymous>, class, class> struct std::conditional'
     struct conditional;
            ^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:573:58: error: expected identifier before '::' token
                                          underlying_type>::type;
                                                          ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:581:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using underlying_type = const std::decay_t<S>;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:581:32: error: expected ';'
   using underlying_type = const std::decay_t<S>;
                                ^~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:584:57: error: wrong number of template arguments (2, should be 3)
                                          underlying_type>::type;
                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/move.h:55,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_pair.h:59,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:64,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/type_traits:92:12: note: provided for 'template<bool <anonymous>, class, class> struct std::conditional'
     struct conditional;
            ^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:584:58: error: expected identifier before '::' token
                                          underlying_type>::type;
                                                          ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:597:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:597:5: note: suggested alternative: 'conditional'
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:600:21: error: 'conditional_t' in namespace 'std' does not name a template type
   using type = std::conditional_t<std::is_lvalue_reference<S>::value,
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:600:16: note: suggested alternative: 'conditional'
   using type = std::conditional_t<std::is_lvalue_reference<S>::value,
                ^~~
                conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:610:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using underlying_type = const std::decay_t<S>;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:610:32: error: expected ';'
   using underlying_type = const std::decay_t<S>;
                                ^~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:611:32: error: 'conditional_t' in namespace 'std' does not name a template type
   using type            = std::conditional_t<std::is_lvalue_reference<S>::value,
                                ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:611:27: note: suggested alternative: 'conditional'
   using type            = std::conditional_t<std::is_lvalue_reference<S>::value,
                           ^~~
                           conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: error: 'remove_reference_t' is not a member of 'std'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: note: suggested alternative: 'remove_reference'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
                                     remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: note: suggested alternative: 'remove_reference'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
                                     remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:56: error: template argument 1 is invalid
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:61: error: 'value' in namespace '::' does not name a type
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                             ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:59: note: suggested alternative: '_glue'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                           ^~
                                                           _glue
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:8: error: 'apply_cv_impl' is not a class template
 struct apply_cv_impl<T, U, true, false> {
        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:638:39: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T, U, false, true> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:643:38: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T, U, true, true> {
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:648:41: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, false, false> {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:653:40: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, true, false> {
                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:658:40: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, false, true> {
                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:663:39: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, true, true> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: error: 'decay_t' is not a member of 'std'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: note: suggested alternative: 'decay'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
                                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: note: suggested alternative: 'decay'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
                                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:65: error: template argument 1 is invalid
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:70: error: '::value' has not been declared
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                      ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:70: note: suggested alternative: '_glue'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                      ^~~~~
                                                                      _glue
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'constexpr xt::detail::forward_type_t<T, M> xt::forward_offset(T&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:733:30: error: 'remove_reference_t' in namespace 'std' does not name a template type
   using cv_value_type = std::remove_reference_t<forward_type>;
                              ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:733:25: note: suggested alternative: 'remove_reference'
   using cv_value_type = std::remove_reference_t<forward_type>;
                         ^~~
                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: error: 'remove_reference_t' is not a member of 'std'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: note: suggested alternative: 'remove_reference'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
                                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: note: suggested alternative: 'remove_reference'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
                                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:61: error: wrong number of template arguments (1, should be 2)
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:674:49: note: provided for 'template<class T, class U> using apply_cv_t = typename xt::apply_cv::type'
 using apply_cv_t = typename apply_cv<T, U>::type;
                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:23: error: 'cv_value_type' does not name a type; did you mean 'complex_value_type'?
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                       ^~~~~~~~~~~~~
                       complex_value_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:36: error: expected '>' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:36: error: expected '(' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                    ^
                                    (
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:37: error: expected primary-expression before '>' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:56: error: 'byte_type' does not name a type
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:65: error: expected '>' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:65: error: expected '(' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                 ^
                                                                 (
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:66: error: expected primary-expression before '>' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:77: error: expected ')' before ';' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                             ^
                                                                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:77: error: expected ')' before ';' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                             ^
                                                                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<!is_complex<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<!is_complex<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:22: error: expected initializer before '<' token
   -> std::enable_if_t<!is_complex<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:34: error: 'enable_if_t' in namespace 'std' does not name a template type
 auto forward_real(T&& v) -> std::enable_if_t<
                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:29: note: suggested alternative: 'enable_if'
 auto forward_real(T&& v) -> std::enable_if_t<
                             ^~~
                             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:45: error: expected initializer before '<' token
 auto forward_real(T&& v) -> std::enable_if_t<
                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<!is_complex<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<!is_complex<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:22: error: expected initializer before '<' token
   -> std::enable_if_t<!is_complex<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:34: error: 'enable_if_t' in namespace 'std' does not name a template type
 auto forward_imag(T&& v) -> std::enable_if_t<
                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:29: note: suggested alternative: 'enable_if'
 auto forward_imag(T&& v) -> std::enable_if_t<
                             ^~~
                             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:45: error: expected initializer before '<' token
 auto forward_imag(T&& v) -> std::enable_if_t<
                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: error: 'remove_cv_t' is not a member of 'std'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:40: error: wrong number of template arguments (1, should be 2)
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                                        ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:41: error: expected unqualified-id before ',' token
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: error: 'remove_cv_t' is not a member of 'std'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:40: error: wrong number of template arguments (1, should be 2)
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                                        ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:41: error: expected unqualified-id before ',' token
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:883:55: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(std::true_type, const TF& tf, const FF&) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:883:55: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:888:56: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(std::false_type, const TF&, const FF& ff) {
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:888:56: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:893:42: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(const TF& tf, const FF& ff) {
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:893:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:21: error: 'enable_if_t' in namespace 'std' does not name a template type
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                     ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:16: note: suggested alternative: 'enable_if'
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                ^~~
                enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:32: error: expected '>' before '<' token
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:29: error: 'enable_if_t' in namespace 'std' does not name a template type
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:24: note: suggested alternative: 'enable_if'
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                        ^~~
                        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:40: error: expected '>' before '<' token
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                                        ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp: In function 'constexpr xt::layout_type xt::detail::compute_layout_impl(xt::layout_type, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:61:21: error: 'underlying_type_t' in namespace 'std' does not name a template type
   using type = std::underlying_type_t<layout_type>;
                     ^~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:61:16: note: suggested alternative: 'underlying_type'
   using type = std::underlying_type_t<layout_type>;
                ^~~
                underlying_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: error: 'type' was not declared in this scope
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: note: suggested alternative: 'wctype'
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
                                  wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:21: error: expected primary-expression before '(' token
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: error: 'type' does not name a type; did you mean 'wctype'?
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
                                  wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:59: error: 'type' does not name a type; did you mean 'wctype'?
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                                           ^~~~
                                                           wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:63:1: error: body of 'constexpr' function 'constexpr xt::layout_type xt::detail::compute_layout_impl(xt::layout_type, xt::layout_type)' not a return-statement
 }
 ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:133:33: error: 'conditional_t' in namespace 'std' does not name a template type
   using xexpression_type = std::conditional_t<is_const, const E, E>;
                                 ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:133:28: note: suggested alternative: 'conditional'
   using xexpression_type = std::conditional_t<is_const, const E, E>;
                            ^~~
                            conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:135:31: error: 'xexpression_type' has not been declared
   using value_type = typename xexpression_type::value_type;
                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:137:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:137:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:140:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:140:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:143:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:144:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:146:31: error: 'xexpression_type' has not been declared
   using shape_type = typename xexpression_type::shape_type;
                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:36: error: 'shape_type' was not declared in this scope
   using index_type = xindex_type_t<shape_type>;
                                    ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:36: note: suggested alternative: 'self_type'
   using index_type = xindex_type_t<shape_type>;
                                    ^~~~~~~~~~
                                    self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:46: error: template argument 1 is invalid
   using index_type = xindex_type_t<shape_type>;
                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:150:36: error: expected ')' before '*' token
   xindexed_stepper(xexpression_type* e,
                   ~                ^
                                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:154:3: error: 'reference' does not name a type
   reference operator*() const;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:156:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:156:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:157:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:157:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:158:14: error: 'size_type' has not been declared
   void reset(size_type dim);
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:159:19: error: 'size_type' has not been declared
   void reset_back(size_type dim);
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:167:3: error: 'xexpression_type' does not name a type
   xexpression_type* p_e;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:168:3: error: 'index_type' does not name a type; did you mean 'xindex_type_t'?
   index_type m_index;
   ^~~~~~~~~~
   xindex_type_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:169:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type m_offset;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:267:36: error: 'trivial_begin' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_begin(C& c) noexcept {
                                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:267:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:272:34: error: 'trivial_end' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_end(C& c) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:272:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:277:42: error: 'trivial_begin' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_begin(const C& c) noexcept {
                                          ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:277:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:282:40: error: 'trivial_end' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_end(const C& c) noexcept {
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:282:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: ISO C++ forbids declaration of 'xindexed_stepper' with no type [-fpermissive]
 inline xindexed_stepper<C, is_const>::xindexed_stepper(xexpression_type* e,
                                                        ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: 'int xt::xindexed_stepper<E, is_const>::xindexed_stepper' is not a static data member of 'class xt::xindexed_stepper<E, is_const>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: template definition of non-template 'int xt::xindexed_stepper<E, is_const>::xindexed_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: 'xexpression_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:74: error: 'e' was not declared in this scope
 inline xindexed_stepper<C, is_const>::xindexed_stepper(xexpression_type* e,
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:461:56: error: 'size_type' was not declared in this scope
                                                        size_type offset,
                                                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:461:56: note: suggested alternative: 'self_type'
                                                        size_type offset,
                                                        ^~~~~~~~~
                                                        self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:462:56: error: expected primary-expression before 'bool'
                                                        bool end) noexcept
                                                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:472:65: error: 'reference' does not name a type
 inline auto xindexed_stepper<C, is_const>::operator*() const -> reference {
                                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: error: variable or field 'step' declared void
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:64: error: 'size_type' was not declared in this scope
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:64: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                                ^~~~~~~~~
                                                                size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: error: variable or field 'step_back' declared void
 inline void xindexed_stepper<C, is_const>::step_back(size_type dim,
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step_back(size_type dim,
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:485:54: error: 'size_type' was not declared in this scope
                                                      size_type n) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:485:54: note: suggested alternative: 'size_t'
                                                      size_type n) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: error: variable or field 'reset' declared void
 inline void xindexed_stepper<C, is_const>::reset(size_type dim) {
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::reset(size_type dim) {
                                                  ^~~~~~~~~
                                                  size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: error: variable or field 'reset_back' declared void
 inline void xindexed_stepper<C, is_const>::reset_back(size_type dim) {
                                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::reset_back(size_type dim) {
                                                       ^~~~~~~~~
                                                       size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'void xt::xindexed_stepper<E, is_const>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:13: error: 'm_index' was not declared in this scope
   std::fill(m_index.begin(), m_index.end(), size_type(0));
             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:45: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
   std::fill(m_index.begin(), m_index.end(), size_type(0));
                                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:45: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'void xt::xindexed_stepper<E, is_const>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:3: error: 'm_index' was not declared in this scope
   m_index = p_e->shape();
   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:13: error: 'p_e' was not declared in this scope
   m_index = p_e->shape();
             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:13: note: suggested alternative: 'pipe'
   m_index = p_e->shape();
             ^~~
             pipe
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'bool xt::xindexed_stepper<E, is_const>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:10: error: 'p_e' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
          ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:10: note: suggested alternative: 'pipe'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
          ^~~
          pipe
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:28: error: 'm_index' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:54: error: 'm_offset' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:54: note: suggested alternative: '_off_t'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
                                                      _off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In constructor 'xt::xiterator<It, S, L>::xiterator(It, xt::xiterator<It, S, L>::shape_param_type, bool)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:17: error: 'forward_sequence' was not declared in this scope
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                 ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:17: note: suggested alternative: 'make_sequence'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                 ^~~~~~~~~~~~~~~~
                 make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:44: error: expected primary-expression before ',' token
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:46: error: expected primary-expression before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                              ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:45: error: expected ':' before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                             ^~~~~~
                                             :
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:46: error: expected primary-expression before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                              ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:579:29: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                    [](const auto& v) { return v - 1; });
                             ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: error: 'decay_t' is not a member of 'std'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: note: suggested alternative: 'decay'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: note: suggested alternative: 'decay'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:53: error: template argument 1 is invalid
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:54: error: template argument 2 is invalid
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                      ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:56: error: expected unqualified-id before '>' token
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: error: 'decay_t' is not a member of 'std'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: note: suggested alternative: 'decay'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: note: suggested alternative: 'decay'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:59: error: template argument 1 is invalid
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:60: error: template argument 2 is invalid
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                            ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:62: error: expected unqualified-id before '>' token
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: error: 'enable_if_t' is not a member of 'std'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: note: suggested alternative: 'enable_if'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
                                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: error: 'enable_if_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: note: suggested alternative: 'enable_if'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
                                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:64: error: type/value mismatch at argument 2 in template parameter list for 'template<class E, class enable> struct xt::detail::xvalue_type_impl'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                                                ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:64: note:   expected a type, got '(<expression error> < xt::is_xexpression<E>::value)'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:69: error: expected unqualified-id before '>' token
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                                                     ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:39:33: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type       = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:39:28: note: suggested alternative: 'decay'
   using value_type       = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:52:32: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type      = std::decay_t<CT>;
                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:52:27: note: suggested alternative: 'decay'
   using value_type      = std::decay_t<CT>;
                           ^~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:53:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using reference       = value_type&;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:54:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_reference = const value_type&;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:54:32: error: expected ';' before 'value_type'
   using const_reference = const value_type&;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:55:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using pointer         = value_type*;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:56:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_pointer   = const value_type*;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:56:32: error: expected ';' before 'value_type'
   using const_pointer   = const value_type*;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:94:34: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using iterator               = value_type*;
                                  ^~~~~~~~~~
                                  xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:95:40: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_iterator         = const value_type*;
                                        ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:95:39: error: expected ';' before 'value_type'
   using const_iterator         = const value_type*;
                                       ^~~~~~~~~~~
                                       ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:96:64: error: type/value mismatch at argument 1 in template parameter list for 'template<class _Iterator> class std::reverse_iterator'
   using reverse_iterator       = std::reverse_iterator<iterator>;
                                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:96:64: note:   expected a type, got 'iterator'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:56: error: 'const_iterator' was not declared in this scope
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:56: note: suggested alternative: 'xconst_iterable'
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                        ^~~~~~~~~~~~~~
                                                        xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:70: error: template argument 1 is invalid
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:113:3: error: 'reference' does not name a type
   reference operator()(Args...) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:114:3: error: 'reference' does not name a type
   reference operator[](const xindex&) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:115:3: error: 'reference' does not name a type
   reference operator[](size_type) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:118:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args...) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:119:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex&) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:120:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:123:3: error: 'reference' does not name a type
   reference element(It, It) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:126:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It, It) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:135:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator begin() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:135:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:137:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator end() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:137:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:140:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator begin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:140:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:142:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator end() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:142:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:144:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator cbegin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:144:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:146:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator cend() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:146:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:149:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator rbegin() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:149:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:151:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator rend() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:151:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:154:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:154:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:156:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:156:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:158:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:158:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:160:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:160:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:191:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator storage_begin() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:191:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:193:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator storage_end() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:193:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:196:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_begin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:196:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:198:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_end() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:198:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:200:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_cbegin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:200:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:202:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_cend() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:202:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:205:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator storage_rbegin() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:205:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:207:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator storage_rend() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:207:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:210:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator storage_rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:210:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:212:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator storage_rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:212:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:214:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator storage_crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:214:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:216:3: error: 'const_reverse_iterator' does not name a type; did you mean 'const_broadcast_iterator'?
   const_reverse_iterator storage_crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   const_broadcast_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:216:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:234:3: error: 'reference' does not name a type
   reference data_element(size_type i) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:235:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference data_element(size_type i) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:260:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:260:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:262:31: error: 'container_type' has not been declared
   using value_type = typename container_type::value_type;
                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:263:27: error: 'conditional_t' in namespace 'std' does not name a template type
   using reference  = std::conditional_t<is_const,
                           ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:263:22: note: suggested alternative: 'conditional'
   using reference  = std::conditional_t<is_const,
                      ^~~
                      conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:266:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:266:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:269:36: error: 'container_type' has not been declared
   using size_type       = typename container_type::size_type;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:270:36: error: 'container_type' has not been declared
   using difference_type = typename container_type::difference_type;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:272:33: error: expected ')' before '*' token
   xscalar_stepper(container_type* c) noexcept;
                  ~              ^
                                 )
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:274:3: error: 'reference' does not name a type
   reference operator*() const noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:276:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1) noexcept;
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:276:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1) noexcept;
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:277:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1) noexcept;
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:277:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1) noexcept;
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:278:14: error: 'size_type' has not been declared
   void reset(size_type dim) noexcept;
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:279:19: error: 'size_type' has not been declared
   void reset_back(size_type dim) noexcept;
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:287:3: error: 'container_type' does not name a type; did you mean 'xvalue_type'?
   container_type* p_c;
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:307:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:307:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:309:31: error: 'container_type' has not been declared
   using value_type = typename container_type::value_type;
                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:310:27: error: 'conditional_t' in namespace 'std' does not name a template type
   using reference  = std::conditional_t<is_const,
                           ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:310:22: note: suggested alternative: 'conditional'
   using reference  = std::conditional_t<is_const,
                      ^~~
                      conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:313:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:313:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:316:38: error: 'container_type' has not been declared
   using difference_type   = typename container_type::difference_type;
                                      ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:319:42: error: expected ')' before '*' token
   explicit xdummy_iterator(container_type* c) noexcept;
                           ~              ^
                                          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:324:3: error: 'reference' does not name a type
   reference operator*() const noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:329:3: error: 'container_type' does not name a type; did you mean 'xvalue_type'?
   container_type* p_c;
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:399:58: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator()(Args...) noexcept -> reference {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:404:64: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator[](const xindex&) noexcept -> reference {
                                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:409:60: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator[](size_type) noexcept -> reference {
                                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:415:64: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::operator()(Args...) const noexcept -> const_reference {
                                                                ^~~~~~~~~~~~~~~
                                                                xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:421:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:427:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:433:54: error: 'reference' does not name a type
 inline auto xscalar<CT>::element(It, It) noexcept -> reference {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:439:60: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::element(It, It) const noexcept -> const_reference {
                                                            ^~~~~~~~~~~~~~~
                                                            xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:457:46: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::begin() noexcept -> iterator {
                                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:457:46: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:463:44: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::end() noexcept -> iterator {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:463:44: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:469:52: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::begin() const noexcept -> const_iterator {
                                                    ^~~~~~~~~~~~~~
                                                    xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:469:52: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:475:50: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::end() const noexcept -> const_iterator {
                                                  ^~~~~~~~~~~~~~
                                                  xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:475:50: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:481:53: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::cbegin() const noexcept -> const_iterator {
                                                     ^~~~~~~~~~~~~~
                                                     xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:481:53: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:487:51: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::cend() const noexcept -> const_iterator {
                                                   ^~~~~~~~~~~~~~
                                                   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:487:51: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:493:47: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::rbegin() noexcept -> reverse_iterator {
                                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:493:47: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:499:45: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::rend() noexcept -> reverse_iterator {
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:499:45: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:505:53: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
 inline auto xscalar<CT>::rbegin() const noexcept -> const_reverse_iterator {
                                                     ^~~~~~~~~~~~~~~~~~~~~~
                                                     const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:505:53: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:511:51: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
 inline auto xscalar<CT>::rend() const noexcept -> const_reverse_iterator {
                                                   ^~~~~~~~~~~~~~~~~~~~~~
                                                   const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:511:51: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:517:54: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
 inline auto xscalar<CT>::crbegin() const noexcept -> const_reverse_iterator {
                                                      ^~~~~~~~~~~~~~~~~~~~~~
                                                      const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:517:54: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:523:52: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
 inline auto xscalar<CT>::crend() const noexcept -> const_reverse_iterator {
                                                    ^~~~~~~~~~~~~~~~~~~~~~
                                                    const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:523:52: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:617:54: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::storage_begin() noexcept -> iterator {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:617:54: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:623:52: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::storage_end() noexcept -> iterator {
                                                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:623:52: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:629:60: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_begin() const noexcept -> const_iterator {
                                                            ^~~~~~~~~~~~~~
                                                            xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:629:60: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:635:58: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_end() const noexcept -> const_iterator {
                                                          ^~~~~~~~~~~~~~
                                                          xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:635:58: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:641:61: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_cbegin() const noexcept -> const_iterator {
                                                             ^~~~~~~~~~~~~~
                                                             xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:641:61: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:647:59: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_cend() const noexcept -> const_iterator {
                                                           ^~~~~~~~~~~~~~
                                                           xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:647:59: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:653:55: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::storage_rbegin() noexcept -> reverse_iterator {
                                                       ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:653:55: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:659:53: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::storage_rend() noexcept -> reverse_iterator {
                                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:659:53: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:666:6: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:666:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:673:6: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:673:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:680:6: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:680:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:687:6: error: 'const_reverse_iterator' does not name a type; did you mean 'const_layout_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      const_layout_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:687:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:739:62: error: 'reference' does not name a type
 inline auto xscalar<CT>::data_element(size_type) noexcept -> reference {
                                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:745:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: ISO C++ forbids declaration of 'xscalar_stepper' with no type [-fpermissive]
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: 'int xt::xscalar_stepper<is_const, CT>::xscalar_stepper' is not a static data member of 'class xt::xscalar_stepper<is_const, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: template definition of non-template 'int xt::xscalar_stepper<is_const, CT>::xscalar_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: 'container_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: note: suggested alternative: 'xvalue_type'
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:19: error: 'c' was not declared in this scope
   container_type* c) noexcept
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:770:6: error: 'reference' does not name a type
   -> reference {
      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: error: variable or field 'step' declared void
 inline void xscalar_stepper<is_const, CT>::step(size_type /*dim*/,
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::step(size_type /*dim*/,
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:776:49: error: 'size_type' was not declared in this scope
                                                 size_type /*n*/) noexcept {}
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:776:49: note: suggested alternative: 'size_t'
                                                 size_type /*n*/) noexcept {}
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: error: variable or field 'step_back' declared void
 inline void xscalar_stepper<is_const, CT>::step_back(size_type /*dim*/,
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::step_back(size_type /*dim*/,
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:780:54: error: 'size_type' was not declared in this scope
                                                      size_type /*n*/) noexcept {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:780:54: note: suggested alternative: 'size_t'
                                                      size_type /*n*/) noexcept {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:67: error: variable or field 'reset' declared void
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:50: error: 'size_type' was not declared in this scope
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:50: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                  ^~~~~~~~~
                                                  size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:20: error: variable or field 'reset_back' declared void
   size_type /*dim*/) noexcept {}
                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:3: error: 'size_type' was not declared in this scope
   size_type /*dim*/) noexcept {}
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:3: note: suggested alternative: 'size_t'
   size_type /*dim*/) noexcept {}
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'void xt::xscalar_stepper<is_const, CT>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:792:3: error: 'p_c' was not declared in this scope
   p_c = p_c->stepper_begin(p_c->shap()).pc;
   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:792:3: note: suggested alternative: 'or_c'
   p_c = p_c->stepper_begin(p_c->shap()).pc;
   ^~~
   or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'void xt::xscalar_stepper<is_const, CT>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:797:3: error: 'p_c' was not declared in this scope
   p_c = p_c->stepper_end(p_c->shape(), l).p_c;
   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:797:3: note: suggested alternative: 'or_c'
   p_c = p_c->stepper_end(p_c->shape(), l).p_c;
   ^~~
   or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'bool xt::xscalar_stepper<is_const, CT>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:803:11: error: 'p_c' was not declared in this scope
   return (p_c == rhs.p_c);
           ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:803:11: note: suggested alternative: 'or_c'
   return (p_c == rhs.p_c);
           ^~~
           or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: ISO C++ forbids declaration of 'xdummy_iterator' with no type [-fpermissive]
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: 'int xt::xdummy_iterator<is_const, CT>::xdummy_iterator' is not a static data member of 'class xt::xdummy_iterator<is_const, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: template definition of non-template 'int xt::xdummy_iterator<is_const, CT>::xdummy_iterator'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: 'container_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: note: suggested alternative: 'xvalue_type'
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:19: error: 'c' was not declared in this scope
   container_type* c) noexcept
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:842:6: error: 'reference' does not name a type
   -> reference {
      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'bool xt::xdummy_iterator<is_const, CT>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:849:10: error: 'p_c' was not declared in this scope
   return p_c == rhs.p_c;
          ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:849:10: note: suggested alternative: 'or_c'
   return p_c == rhs.p_c;
          ^~~
          or_c
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:22:44: error: 'compute_size' function uses 'auto' type specifier without trailing return type
 auto compute_size(const shape_type& shape) noexcept;
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:22:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: In function 'It xt::strided_data_end(const C&, It, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:76:32: error: 'decay_t' in namespace 'std' does not name a template type
   using strides_type    = std::decay_t<decltype(c.strides())>;
                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:76:27: note: suggested alternative: 'decay'
   using strides_type    = std::decay_t<decltype(c.strides())>;
                           ^~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:84:41: error: 'strides_type' has not been declared
       std::max(leading_stride, typename strides_type::value_type(1));
                                         ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:94:51: error: 'compute_size' function uses 'auto' type specifier without trailing return type
 inline auto compute_size(const shape_type& shape) noexcept {
                                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:94:51: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: In function 'auto xt::compute_size(const shape_type&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:95:26: error: 'decay_t' in namespace 'std' does not name a template type
   using size_type = std::decay_t<typename shape_type::value_type>;
                          ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:95:21: note: suggested alternative: 'decay'
   using size_type = std::decay_t<typename shape_type::value_type>;
                     ^~~
                     decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:96:56: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
   return std::accumulate(shape.cbegin(), shape.cend(), size_type(1),
                                                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:42: error: 'size_type' was not declared in this scope
                          std::multiplies<size_type>());
                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:42: note: suggested alternative: 'shape_type'
                          std::multiplies<size_type>());
                                          ^~~~~~~~~
                                          shape_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:51: error: template argument 1 is invalid
                          std::multiplies<size_type>());
                                                   ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:37:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<typename Args::size_type...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:37:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<typename Args::size_type...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:54:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<typename Args::difference_type...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:54:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<typename Args::difference_type...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:71:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<xvalue_type_t<Args>...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:71:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<xvalue_type_t<Args>...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:35: error: 'decay_t' in namespace 'std' does not name a template type
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:35: note: suggested alternative: 'decay'
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                   ^~~~~~~
                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:42: error: expected template-argument before '<' token
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:42: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:61: error: template argument 1 is invalid
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: error: 'decay_t' is not a member of 'std'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: note: suggested alternative: 'decay'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
                                                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: note: suggested alternative: 'decay'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
                                                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:69: error: template argument 1 is invalid
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: error: 'decay_t' is not a member of 'std'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: note: suggested alternative: 'decay'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
                                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: note: suggested alternative: 'decay'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
                                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:75: error: template argument 1 is invalid
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:25: error: 'decay_t' is not a member of 'std'
     compute_layout(std::decay_t<CT>::static_layout...);
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:25: note: suggested alternative: 'decay'
     compute_layout(std::decay_t<CT>::static_layout...);
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:35: error: expected primary-expression before '>' token
     compute_layout(std::decay_t<CT>::static_layout...);
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:38: error: '::static_layout' has not been declared
     compute_layout(std::decay_t<CT>::static_layout...);
                                      ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:38: note: suggested alternative: 'static_assert'
     compute_layout(std::decay_t<CT>::static_layout...);
                                      ^~~~~~~~~~~~~
                                      static_assert
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: error: 'decay_t' is not a member of 'std'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: note: suggested alternative: 'decay'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: note: suggested alternative: 'decay'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:26: error: template argument 1 is invalid
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:29: error: expected ';' at end of member declaration
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                             ^~~~~~~~~~~~~~~~~
                                              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:46: error: expected unqualified-id before '...' token
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                                              ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:178:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:179:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:187:30: error: 'size_type' has not been declared
   const_reference operator[](size_type i) const;
                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:230:32: error: 'size_type' has not been declared
   const_reference data_element(size_type i) const;
                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:234:32: error: 'std::index_sequence' has not been declared
   layout_type layout_impl(std::index_sequence<I...>) const noexcept;
                                ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:234:46: error: expected ',' or '...' before '<' token
   layout_type layout_impl(std::index_sequence<I...>) const noexcept;
                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:237:36: error: 'std::index_sequence' has not been declared
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:237:50: error: expected ',' or '...' before '<' token
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:240:44: error: 'std::index_sequence' has not been declared
   const_reference element_access_impl(std::index_sequence<I...>,
                                            ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:240:58: error: expected ',' or '...' before '<' token
   const_reference element_access_impl(std::index_sequence<I...>,
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:245:42: error: 'std::index_sequence' has not been declared
   const_reference data_element_impl(std::index_sequence<I...>,
                                          ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:245:56: error: expected ',' or '...' before '<' token
   const_reference data_element_impl(std::index_sequence<I...>,
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:249:46: error: 'std::index_sequence' has not been declared
   const_stepper build_stepper(Func&& f, std::index_sequence<I...>) const
                                              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:249:60: error: expected ',' or '...' before '<' token
   const_stepper build_stepper(Func&& f, std::index_sequence<I...>) const
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:254:46: error: 'std::index_sequence' has not been declared
                                         std::index_sequence<I...>) const
                                              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:254:60: error: expected ',' or '...' before '<' token
                                         std::index_sequence<I...>) const
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:257:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type compute_dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:331:29: error: 'std::index_sequence' has not been declared
   reference deref_impl(std::index_sequence<I...>) const;
                             ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:331:43: error: expected ',' or '...' before '<' token
   reference deref_impl(std::index_sequence<I...>) const;
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:48: error: template argument 1 is invalid
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:50: error: expected parameter pack before '...'
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                  ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:53: error: template argument 1 is invalid
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:381:29: error: 'std::index_sequence' has not been declared
   reference deref_impl(std::index_sequence<I...>) const;
                             ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:381:43: error: expected ',' or '...' before '<' token
   reference deref_impl(std::index_sequence<I...>) const;
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:28: error: 'decay_t' in namespace 'std' does not name a template type
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:28: note: suggested alternative: 'decay'
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                            ^~~~~~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:35: error: expected template-argument before '<' token
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:35: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:57: error: template argument 1 is invalid
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In constructor 'xt::xfunction<F, R, CT>::xfunction(Func&&, CT ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:414:42: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
     m_shape(make_sequence<shape_type>(0, size_type(1))),
                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:426:62: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xfunction<F, R, CT...>::size() const noexcept -> size_type {
                                                              ^~~~~~~~~
                                                              self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:434:67: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xfunction<F, R, CT...>::dimension() const noexcept -> size_type {
                                                                   ^~~~~~~~~
                                                                   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'const shape_type& xt::xfunction<F, R, CT>::shape() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:445:41: error: there are no arguments to 'compute_dimension' that depend on a template parameter, so a declaration of 'compute_dimension' must be available [-fpermissive]
     m_shape = make_sequence<shape_type>(compute_dimension(), size_type(1));
                                         ^~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:445:62: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
     m_shape = make_sequence<shape_type>(compute_dimension(), size_type(1));
                                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::layout_type xt::xfunction<F, R, CT>::layout() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:457:27: error: 'make_index_sequence' is not a member of 'std'
   return layout_impl(std::make_index_sequence<sizeof...(CT)>());
                           ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:457:62: error: expected primary-expression before ')' token
   return layout_impl(std::make_index_sequence<sizeof...(CT)>());
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_reference xt::xfunction<F, R, CT>::operator()(Args ...) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:481:27: error: 'make_index_sequence' is not a member of 'std'
   return access_impl(std::make_index_sequence<sizeof...(CT)>(),
                           ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:481:62: error: expected primary-expression before ')' token
   return access_impl(std::make_index_sequence<sizeof...(CT)>(),
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:482:34: error: 'size_type' does not name a type; did you mean 'self_type'?
                      static_cast<size_type>(args)...);
                                  ^~~~~~~~~
                                  self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: error: declaration of 'operator[]' as non-function
 inline auto xfunction<F, R, CT...>::operator[](size_type i) const
                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: note: suggested alternative: 'size_t'
 inline auto xfunction<F, R, CT...>::operator[](size_type i) const
                                                ^~~~~~~~~
                                                size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_reference xt::xfunction<F, R, CT>::element(It, It) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:509:35: error: 'make_index_sequence' is not a member of 'std'
   return element_access_impl(std::make_index_sequence<sizeof...(CT)>(), first,
                                   ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:509:70: error: expected primary-expression before ')' token
   return element_access_impl(std::make_index_sequence<sizeof...(CT)>(), first,
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'bool xt::xfunction<F, R, CT>::broadcast_shape(S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:527:32: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [&shape](bool b, auto&& e) {
                                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:528:14: error: request for member 'broadcast_shape' in 'e', which is of non-class type 'int'
     return e.broadcast_shape(shape) && b;
              ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'bool xt::xfunction<F, R, CT>::is_trivial_broadcast(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:542:34: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [&strides](bool b, auto&& e) {
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:543:19: error: request for member 'is_trivial_broadcast' in 'e', which is of non-class type 'int'
     return b && e.is_trivial_broadcast(strides);
                   ^~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_storage_iterator xt::xfunction<F, R, CT>::storage_cbegin() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:567:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](const auto& e) noexcept { return detail::trivial_begin(e); };
                     ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In instantiation of 'constexpr auto xt::detail::trivial_begin(const C&) [with C = int]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:567:71:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:278:12: error: request for member 'storage_begin' in 'c', which is of non-class type 'const int'
   return c.storage_begin();
          ~~^~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:568:33: error: 'make_index_sequence' is not a member of 'std'
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                 ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:568:68: error: expected primary-expression before ')' token
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_storage_iterator xt::xfunction<F, R, CT>::storage_cend() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:575:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](const auto& e) noexcept { return detail::trivial_end(e); };
                     ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In instantiation of 'constexpr auto xt::detail::trivial_end(const C&) [with C = int]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:575:69:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:283:12: error: request for member 'storage_end' in 'c', which is of non-class type 'const int'
   return c.storage_end();
          ~~^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:576:33: error: 'make_index_sequence' is not a member of 'std'
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                 ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:576:68: error: expected primary-expression before ')' token
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:611:27: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [&shape](const auto& e) noexcept { return e.stepper_begin(shape); };
                           ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:611:56: error: request for member 'stepper_begin' in 'e', which is of non-class type 'const int'
   auto f = [&shape](const auto& e) noexcept { return e.stepper_begin(shape); };
                                                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:612:32: error: 'make_index_sequence' is not a member of 'std'
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:612:67: error: expected primary-expression before ')' token
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:620:31: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [&shape, l ](const auto& e) noexcept {
                               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:621:14: error: request for member 'stepper_end' in 'e', which is of non-class type 'const int'
     return e.stepper_end(shape, l);
              ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:623:32: error: 'make_index_sequence' is not a member of 'std'
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:623:67: error: expected primary-expression before ')' token
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::data_element(size_type i) const
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: 'auto xt::xfunction<F, R, CT>::data_element' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::data_element'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: note: suggested alternative: 'self_type'
 inline auto xfunction<F, R, CT...>::data_element(size_type i) const
                                                  ^~~~~~~~~
                                                  self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const noexcept {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: 'xt::layout_type xt::xfunction<F, R, CT>::layout_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: template definition of non-template 'xt::layout_type xt::xfunction<F, R, CT>::layout_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::access_impl(std::index_sequence<I...>,
                                                      ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: 'auto xt::xfunction<F, R, CT>::access_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:642:53: error: expected primary-expression before '...' token
                                                 Args... args) const
                                                     ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>, It first, It last) const -> const_reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: 'auto xt::xfunction<F, R, CT>::element_access_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::element_access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:33: error: expected primary-expression before 'first'
   std::index_sequence<I...>, It first, It last) const -> const_reference {
                                 ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:43: error: expected primary-expression before 'last'
   std::index_sequence<I...>, It first, It last) const -> const_reference {
                                           ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::data_element_impl(std::index_sequence<I...>,
                                                            ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: 'auto xt::xfunction<F, R, CT>::data_element_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::data_element_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:657:55: error: 'size_type' was not declared in this scope
                                                       size_type i) const
                                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:657:55: note: suggested alternative: 'self_type'
                                                       size_type i) const
                                                       ^~~~~~~~~
                                                       self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:665:18: error: 'std::index_sequence' has not been declared
   Func&& f, std::index_sequence<I...>) const noexcept -> const_stepper {
                  ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:665:32: error: expected ',' or '...' before '<' token
   Func&& f, std::index_sequence<I...>) const noexcept -> const_stepper {
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:672:18: error: 'std::index_sequence' has not been declared
   Func&& f, std::index_sequence<I...>) const noexcept
                  ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:672:32: error: expected ',' or '...' before '<' token
   Func&& f, std::index_sequence<I...>) const noexcept
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:679:6: error: 'size_type' does not name a type; did you mean 'self_type'?
   -> size_type {
      ^~~~~~~~~
      self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::self_type& xt::xfunction_iterator<F, R, CT>::operator++()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:698:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { ++it; };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::self_type& xt::xfunction_iterator<F, R, CT>::operator--()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:712:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { return --it; };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::reference xt::xfunction_iterator<F, R, CT>::operator*() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:726:26: error: 'make_index_sequence' is not a member of 'std'
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                          ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:726:61: error: expected primary-expression before ')' token
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const -> reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: 'auto xt::xfunction_iterator<F, R, CT>::deref_impl' is not a static data member of 'class xt::xfunction_iterator<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: template definition of non-template 'auto xt::xfunction_iterator<F, R, CT>::deref_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::step(xt::xfunction_stepper<F, R, CT>::size_type, xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:765:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim, n](auto& it) { it.step(dim, n); };
                     ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:765:36: error: request for member 'step' in 'it', which is of non-class type 'int'
   auto f = [dim, n](auto& it) { it.step(dim, n); };
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::step_back(xt::xfunction_stepper<F, R, CT>::size_type, xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:772:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim, n](auto& it) { it.step_back(dim, n); };
                     ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:772:36: error: request for member 'step_back' in 'it', which is of non-class type 'int'
   auto f = [dim, n](auto& it) { it.step_back(dim, n); };
                                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::reset(xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:778:18: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim](auto& it) { it.reset(dim); };
                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:778:33: error: request for member 'reset' in 'it', which is of non-class type 'int'
   auto f = [dim](auto& it) { it.reset(dim); };
                                 ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::reset_back(xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:784:18: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim](auto& it) { it.reset_back(dim); };
                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:784:33: error: request for member 'reset_back' in 'it', which is of non-class type 'int'
   auto f = [dim](auto& it) { it.reset_back(dim); };
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:790:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { it.to_begin(); };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:790:30: error: request for member 'to_begin' in 'it', which is of non-class type 'int'
   auto f = [](auto& it) { it.to_begin(); };
                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:796:16: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [l](auto& it) { it.to_end(l); };
                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:796:31: error: request for member 'to_end' in 'it', which is of non-class type 'int'
   auto f = [l](auto& it) { it.to_end(l); };
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_stepper<F, R, CT>::reference xt::xfunction_stepper<F, R, CT>::operator*() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:802:26: error: 'make_index_sequence' is not a member of 'std'
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                          ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:802:61: error: expected primary-expression before ')' token
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const -> reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: 'auto xt::xfunction_stepper<F, R, CT>::deref_impl' is not a static data member of 'class xt::xfunction_stepper<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: template definition of non-template 'auto xt::xfunction_stepper<F, R, CT>::deref_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: 'index_sequence' is not a member of 'std'
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:46:38: error: 'make_xfunction' function uses 'auto' type specifier without trailing return type
 inline auto make_xfunction(E&&... e) noexcept {
                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:46:38: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'auto xt::detail::make_xfunction(E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: error: 'decay_t' is not a member of 'std'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:60: error: template argument 1 is invalid
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:61: error: expected parameter pack before '...'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:61: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:48:33: error: 'functor_type' has not been declared
   using result_type  = typename functor_type::result_type;
                                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:26: error: 'functor_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:26: note: suggested alternative: 'forward_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
                          forward_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:40: error: 'result_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:40: note: suggested alternative: 'layout_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
                                        layout_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:75: error: template argument 1 is invalid
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:75: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: error: 'decay_t' is not a member of 'std'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: note: suggested alternative: 'decay'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
                                          decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: note: suggested alternative: 'decay'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
                                          decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:51: error: template argument 1 is invalid
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:52: error: expected parameter pack before '...'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                    ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:52: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:55: error: wrong number of template arguments (1, should be at least 2)
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                       ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:85:7: note: provided for 'template<class F, class R, class ... CT> class xt::xfunction'
 class xfunction;
       ^~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:70:17: error: 'enable_if_t' in namespace 'std' does not name a template type
   typename std::enable_if_t<has_xexpression<std::decay_t<E>...>::value,
                 ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:70:17: note: suggested alternative: 'enable_if'
   typename std::enable_if_t<has_xexpression<std::decay_t<E>...>::value,
                 ^~~~~~~~~~~
                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<detail::identity, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<detail::identity, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<detail::identity, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::negate, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::negate, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::negate, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::plus, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::plus, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::plus, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::minus, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::minus, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::minus, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::divides, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::divides, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::divides, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_not, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_not, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_not, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::less, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::less, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::less, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::greater, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::greater, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::greater, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::any(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:466:22: error: 'decay_t' in namespace 'std' does not name a template type
   using xtype = std::decay_t<E>;
                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:466:17: note: suggested alternative: 'decay'
   using xtype = std::decay_t<E>;
                 ^~~
                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:467:7: error: 'xtype' has not been declared
   if (xtype::static_layout == layout_type::row_major ||
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:468:7: error: 'xtype' has not been declared
       xtype::static_layout == layout_type::column_major) {
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::any(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::all(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:490:22: error: 'decay_t' in namespace 'std' does not name a template type
   using xtype = std::decay_t<E>;
                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:490:17: note: suggested alternative: 'decay'
   using xtype = std::decay_t<E>;
                 ^~~
                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:491:7: error: 'xtype' has not been declared
   if (xtype::static_layout == layout_type::row_major ||
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:492:7: error: 'xtype' has not been declared
       xtype::static_layout == layout_type::column_major) {
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::all(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:32:35: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 auto broadcast(E&& e, const S& s) noexcept;
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:32:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:39:40: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 auto broadcast(E&& e, const I (&s)[L]) noexcept;
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:39:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:51:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:51:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:53:61: error: template argument 1 is invalid
     promote_shape_t<typename xexpression_type::shape_type, X>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:54:34: error: 'xexpression_type' has not been declared
   using const_stepper = typename xexpression_type::const_stepper;
                                  ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:55:25: error: 'const_stepper' does not name a type; did you mean 'constexpr'?
   using stepper       = const_stepper;
                         ^~~~~~~~~~~~~
                         constexpr
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:76:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:76:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:78:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:79:36: error: 'xexpression_type' has not been declared
   using reference       = typename xexpression_type::reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:80:36: error: 'xexpression_type' has not been declared
   using const_reference = typename xexpression_type::const_reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:81:36: error: 'xexpression_type' has not been declared
   using pointer         = typename xexpression_type::pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:82:36: error: 'xexpression_type' has not been declared
   using const_pointer   = typename xexpression_type::const_pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:83:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:84:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:93:48: error: 'xexpression_type' has not been declared
   static constexpr layout_type static_layout = xexpression_type::static_layout;
                                                ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:101:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:102:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:107:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:108:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:109:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:112:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:145:42: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 inline auto broadcast(E&& e, const S& s) noexcept {
                                          ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:145:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In function 'auto xt::broadcast(E&&, const S&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:45: error: 'forward_sequence' was not declared in this scope
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:45: note: suggested alternative: 'make_sequence'
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
                                             make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:24: error: expected primary-expression before '(' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:72: error: expected primary-expression before '>' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:161:47: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 inline auto broadcast(E&& e, const I (&s)[L]) noexcept {
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:161:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In function 'auto xt::broadcast(E&&, const I (&)[L])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:45: error: 'forward_sequence' was not declared in this scope
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:45: note: suggested alternative: 'make_sequence'
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
                                             make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:24: error: expected primary-expression before '(' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:72: error: expected primary-expression before '>' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:199:57: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xbroadcast<CT, X>::size() const noexcept -> size_type {
                                                         ^~~~~~~~~
                                                         self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:207:62: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xbroadcast<CT, X>::dimension() const noexcept -> size_type {
                                                              ^~~~~~~~~
                                                              self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:244:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:259:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: error: declaration of 'operator[]' as non-function
 inline auto xbroadcast<CT, X>::operator[](size_type i) const
                                           ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: note: suggested alternative: 'size_t'
 inline auto xbroadcast<CT, X>::operator[](size_type i) const
                                           ^~~~~~~~~
                                           size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:279:62: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xbroadcast<CT, X>::element(It, It last) const -> const_reference {
                                                              ^~~~~~~~~~~~~~~
                                                              xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In member function 'bool xt::xbroadcast<CT, X>::is_trivial_broadcast(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:308:10: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   return dimension() == m_e.dimension() &&
          ^~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:25,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:268:63: error: 'make_xgenerator' function uses 'auto' type specifier without trailing return type
 inline auto make_xgenerator(Functor&& f, const I (&shape)[L]) noexcept {
                                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:268:63: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: In function 'auto xt::detail::make_xgenerator(Functor&&, const I (&)[L])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:41: error: 'forward_sequence' was not declared in this scope
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                         ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:41: note: suggested alternative: 'make_sequence'
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                         ^~~~~~~~~~~~~~~~
                                         make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:14: error: expected primary-expression before '(' token
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:68: error: expected primary-expression before '>' token
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:276:53: error: 'make_xgenerator' function uses 'auto' type specifier without trailing return type
 inline auto make_xgenerator(Functor&& f, S&& shape) noexcept {
                                                     ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:276:53: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: In function 'auto xt::detail::make_xgenerator(Functor&&, S&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: error: 'decay_t' is not a member of 'std'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: note: suggested alternative: 'decay'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
                                                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: note: suggested alternative: 'decay'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
                                                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:68: error: template argument 3 is invalid
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                                    ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:42:27: error: 'ones' function uses 'auto' type specifier without trailing return type
 inline auto ones(S shape) noexcept {
                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:42:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:53:39: error: 'ones' function uses 'auto' type specifier without trailing return type
 inline auto ones(const I (&shape)[L]) noexcept {
                                       ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:53:39: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:67:28: error: 'zeros' function uses 'auto' type specifier without trailing return type
 inline auto zeros(S shape) noexcept {
                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:67:28: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:78:40: error: 'zeros' function uses 'auto' type specifier without trailing return type
 inline auto zeros(const I (&shape)[L]) noexcept {
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:78:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:175:65: error: 'eye' function uses 'auto' type specifier without trailing return type
 inline auto eye(const std::vector<std::size_t>& shape, int k = 0) {
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:175:65: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:190:41: error: 'eye' function uses 'auto' type specifier without trailing return type
 inline auto eye(std::size_t n, int k = 0) {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:190:41: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:204:49: error: 'arange' function uses 'auto' type specifier without trailing return type
 inline auto arange(T start, T stop, T step = 1) noexcept {
                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:204:49: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:219:28: error: 'arange' function uses 'auto' type specifier without trailing return type
 inline auto arange(T stop) noexcept {
                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:219:28: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:236:54: error: 'linspace' function uses 'auto' type specifier without trailing return type
                      bool endpoint           = true) noexcept {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:236:54: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:259:44: error: 'logspace' function uses 'auto' type specifier without trailing return type
                      bool endpoint = true) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:259:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:270:10: error: 'common_type_t' in namespace 'std' does not name a template type
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:270:5: note: suggested alternative: 'common_type'
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
     ^~~
     common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:276:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:282:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:288:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(xindex idx) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:317:10: error: 'common_type_t' in namespace 'std' does not name a template type
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:317:5: note: suggested alternative: 'common_type'
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
     ^~~
     common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:323:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:329:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:335:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(xindex idx) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:349:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:349:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:350:37: error: 'xexpression_type' has not been declared
   using size_type        = typename xexpression_type::size_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:351:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:354:29: error: 'size_type' has not been declared
   repeat_impl(CTA&& source, size_type axis)
                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:358:3: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   value_type operator()(Args... args) const {
   ^~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:365:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:371:3: error: 'size_type' does not name a type; did you mean 'size_t'?
   size_type m_axis;
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In constructor 'xt::detail::repeat_impl<CT>::repeat_impl(CTA&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:355:44: error: class 'xt::detail::repeat_impl<CT>' does not have any field named 'm_axis'
     : m_source(std::forward<CTA>(source)), m_axis(axis) {}
                                            ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:380:35: error: 'xtuple' function uses 'auto' type specifier without trailing return type
 inline auto xtuple(Types&&... args) {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:380:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:401:68: error: 'concatenate' function uses 'auto' type specifier without trailing return type
 inline auto concatenate(std::tuple<CT...>&& t, std::size_t axis = 0) {
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:401:68: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::concatenate(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:52: error: 'decay_t' in namespace 'std' does not name a template type
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:52: note: suggested alternative: 'decay'
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:59: error: expected template-argument before '<' token
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:78: error: template argument 1 is invalid
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:403:3: error: 'shape_type' was not declared in this scope
   shape_type new_shape = forward_sequence<shape_type>(std::get<0>(t).shape());
   ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:403:3: note: suggested alternative: 'xvalue_type'
   shape_type new_shape = forward_sequence<shape_type>(std::get<0>(t).shape());
   ^~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:404:52: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto shape_at_axis   = [&axis](std::size_t prev, auto& arr) -> std::size_t {
                                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:405:23: error: request for member 'shape' in 'arr', which is of non-class type 'int'
     return prev + arr.shape()[axis];
                       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::concatenate(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:407:3: error: 'new_shape' was not declared in this scope
   new_shape[axis] +=
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:407:3: note: suggested alternative: 'check_shape'
   new_shape[axis] +=
   ^~~~~~~~~
   check_shape
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:454:62: error: 'stack' function uses 'auto' type specifier without trailing return type
 inline auto stack(std::tuple<CT...>&& t, std::size_t axis = 0) {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:454:62: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::stack(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:52: error: 'decay_t' in namespace 'std' does not name a template type
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:52: note: suggested alternative: 'decay'
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:59: error: expected template-argument before '<' token
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:78: error: template argument 1 is invalid
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:5: error: 'forward_sequence' was not declared in this scope
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:5: note: suggested alternative: 'make_sequence'
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
     ^~~~~~~~~~~~~~~~
     make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:22: error: 'shape_type' was not declared in this scope
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
                      ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:22: note: suggested alternative: 'xvalue_type'
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
                      ^~~~~~~~~~
                      xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:32: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:32: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:55: error: expected primary-expression before '&&' token
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                       ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:62: error: expression list treated as compound expression in initializer [-fpermissive]
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:13: warning: variable templates only available with -std=c++14 or -std=gnu++14
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
             ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:63: error: expected ';' before 'noexcept'
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                               ^~~~~~~~~
                                                               ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:490:32: error: 'meshgrid' function uses 'auto' type specifier without trailing return type
 inline auto meshgrid(E&&... e) noexcept {
                                ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:490:32: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::meshgrid(E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:31: error: missing template arguments before '(' token
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:37: error: 'make_index_sequence' is not a member of 'std'
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                                     ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:71: error: expected primary-expression before ')' token
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:499:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:499:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:500:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:510:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:540:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:540:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:541:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:547:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:566:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:566:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:567:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:568:37: error: 'xexpression_type' has not been declared
   using size_type        = typename xexpression_type::size_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:577:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:584:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:592:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(It begin, It end) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:600:9: error: 'size_type' does not name a type; did you mean 'size_t'?
   const size_type m_axis;
         ^~~~~~~~~
         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:601:9: error: 'size_type' does not name a type; did you mean 'size_t'?
   const size_type m_shape_at_axis;
         ^~~~~~~~~
         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In constructor 'xt::detail::flip_impl<CT>::flip_impl(CTA&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:573:7: error: class 'xt::detail::flip_impl<CT>' does not have any field named 'm_axis'
       m_axis(axis),
       ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:7: error: class 'xt::detail::flip_impl<CT>' does not have any field named 'm_shape_at_axis'
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
       ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:40: error: 'm_axis' was not declared in this scope
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
                                        ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:40: note: suggested alternative: 'axis'
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
                                        ^~~~~~
                                        axis
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:607:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:607:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:608:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:616:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It end) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:671:44: error: 'diagonal' function uses 'auto' type specifier without trailing return type
                      std::size_t axis_2 = 1) {
                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:671:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::diagonal(E&&, int, std::size_t, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:19: error: 'decay_t' in namespace 'std' does not name a template type
     typename std::decay_t<E>::shape_type>::type;
                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:19: note: suggested alternative: 'decay'
     typename std::decay_t<E>::shape_type>::type;
                   ^~~~~~~
                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:26: error: expected template-argument before '<' token
     typename std::decay_t<E>::shape_type>::type;
                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:26: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:41: error: template argument 1 is invalid
     typename std::decay_t<E>::shape_type>::type;
                                         ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:682:34: error: 'shape_type' was not declared in this scope
   auto ret_shape = make_sequence<shape_type>(dimension - 1, 0);
                                  ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:682:34: note: suggested alternative: 'xvalue_type'
   auto ret_shape = make_sequence<shape_type>(dimension - 1, 0);
                                  ^~~~~~~~~~
                                  xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:720:36: error: 'diag' function uses 'auto' type specifier without trailing return type
 inline auto diag(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:720:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:741:43: error: 'flip' function uses 'auto' type specifier without trailing return type
 inline auto flip(E&& arr, std::size_t axis) {
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:741:43: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:760:36: error: 'tril' function uses 'auto' type specifier without trailing return type
 inline auto tril(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:760:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:782:36: error: 'triu' function uses 'auto' type specifier without trailing return type
 inline auto triu(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:782:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:37:37: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e, X&& axes) noexcept;
                                     ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:37:37: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:40:27: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e) noexcept;
                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:40:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:47:47: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e, const I (&axes)[N]) noexcept;
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:47:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:65:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:65:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:68:35: error: wrong number of template arguments (1, should be 2)
                                  X>::type;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:55:8: note: provided for 'template<class ST, class X> struct xt::xreducer_shape_type'
 struct xreducer_shape_type;
        ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:67:14: error: expected nested-name-specifier
     typename xreducer_shape_type<typename xexpression_type::shape_type,
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  X>::type;
                                  ~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:93:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:93:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:96:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:97:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using reference       = value_type;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:98:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using const_reference = value_type;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:99:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using pointer         = value_type*;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:100:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_pointer   = const value_type*;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:100:32: error: expected ';' before 'value_type'
   using const_pointer   = const value_type*;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:102:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:103:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:118:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:119:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:124:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:125:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:126:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:129:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It first, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:169:44: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e, X&& axes) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:169:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:176:34: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:176:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:193:54: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e, const I (&axes)[N]) noexcept {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:193:54: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In function 'auto xt::reduce(F&&, E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:49: error: 'decay_t' in namespace 'std' does not name a template type
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:49: note: suggested alternative: 'decay'
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                 ^~~~~~~
                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:56: error: expected template-argument before '<' token
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:56: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:73: error: wrong number of template arguments (1, should be 2)
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:57: error: 'axes_type' was not declared in this scope
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:57: note: suggested alternative: 'decltype'
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                         ^~~~~~~~~
                                                         decltype
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:66: error: template argument 3 is invalid
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:197:23: error: 'forward_sequence' was not declared in this scope
                       forward_sequence<axes_type>(axes));
                       ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:197:23: note: suggested alternative: 'make_sequence'
                       forward_sequence<axes_type>(axes));
                       ^~~~~~~~~~~~~~~~
                       make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: error: 'decay_t' is not a member of 'std'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: note: suggested alternative: 'decay'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: note: suggested alternative: 'decay'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:49: error: template argument 2 is invalid
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:343:58: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xreducer<F, CT, X>::size() const noexcept -> size_type {
                                                          ^~~~~~~~~
                                                          self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:351:63: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xreducer<F, CT, X>::dimension() const noexcept -> size_type {
                                                               ^~~~~~~~~
                                                               self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:387:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:404:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: error: declaration of 'operator[]' as non-function
 inline auto xreducer<F, CT, X>::operator[](size_type i) const
                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: note: suggested alternative: 'size_t'
 inline auto xreducer<F, CT, X>::operator[](size_type i) const
                                            ^~~~~~~~~
                                            size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:425:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In member function 'xt::xreducer<F, CT, X>::const_stepper xt::xreducer<F, CT, X>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:467:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:467:3: note: suggested alternative: 'self_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:468:31: error: 'offset' was not declared in this scope
   return const_stepper(*this, offset);
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:468:31: note: suggested alternative: 'off_t'
   return const_stepper(*this, offset);
                               ^~~~~~
                               off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In member function 'xt::xreducer<F, CT, X>::const_stepper xt::xreducer<F, CT, X>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:475:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:475:3: note: suggested alternative: 'self_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:476:31: error: 'offset' was not declared in this scope
   return const_stepper(*this, offset, true, l);
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:476:31: note: suggested alternative: 'off_t'
   return const_stepper(*this, offset, true, l);
                               ^~~~~~
                               off_t
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:36: note: suggested alternative: 'xfunction_type'
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:60: error: expected initializer before '<' token
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fabs_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fabs_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fabs_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:387:35: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:387:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:389:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:393:25: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:393:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:395:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:406:45: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:406:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:408:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:423:35: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:423:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:425:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:429:25: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:429:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:431:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:442:45: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:442:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:444:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:470:16: error: 'enable_if_t' in namespace 'std' does not name a template type
 constexpr std::enable_if_t<std::is_signed<T>::value, T> sign_impl(T x) {
                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:470:11: note: suggested alternative: 'enable_if'
 constexpr std::enable_if_t<std::is_signed<T>::value, T> sign_impl(T x) {
           ^~~
           enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:476:13: error: 'enable_if_t' in namespace 'std' does not name a template type
 inline std::enable_if_t<xt::detail::is_complex<T>::value, T> sign_impl(T x) {
             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:476:8: note: suggested alternative: 'enable_if'
 inline std::enable_if_t<xt::detail::is_complex<T>::value, T> sign_impl(T x) {
        ^~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:482:16: error: 'enable_if_t' in namespace 'std' does not name a template type
 constexpr std::enable_if_t<std::is_unsigned<T>::value, T> sign_impl(T x) {
                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:482:11: note: suggested alternative: 'enable_if'
 constexpr std::enable_if_t<std::is_unsigned<T>::value, T> sign_impl(T x) {
           ^~~
           enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In member function 'constexpr T xt::math::sign_fun<T>::operator()(const T&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:492:61: error: 'sign_impl' is not a member of 'xt::math::detail'
   constexpr T operator()(const T& x) const { return detail::sign_impl(x); }
                                                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sign_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sign_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sign_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:36: note: suggested alternative: 'xfunction_type'
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:60: error: expected initializer before '<' token
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::exp2_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::exp2_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::exp2_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::expm1_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::expm1_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::expm1_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:36: note: suggested alternative: 'xfunction_type'
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:60: error: expected initializer before '<' token
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log10_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log10_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log10_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log2_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log2_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log2_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log1p_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log1p_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log1p_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:36: note: suggested alternative: 'xfunction_type'
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:60: error: expected initializer before '<' token
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:36: note: suggested alternative: 'xfunction_type'
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:60: error: expected initializer before '<' token
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:36: note: suggested alternative: 'xfunction_type'
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:60: error: expected initializer before '<' token
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::asin_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::asin_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::asin_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::acos_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::acos_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::acos_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atan_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atan_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atan_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sinh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sinh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sinh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::cosh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::cosh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::cosh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::tanh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::tanh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::tanh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::asinh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::asinh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::asinh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::acosh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::acosh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::acosh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atanh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atanh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atanh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:36: note: suggested alternative: 'xfunction_type'
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:60: error: expected initializer before '<' token
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::erfc_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::erfc_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::erfc_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::ceil_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::ceil_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::ceil_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::floor_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::floor_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::floor_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::trunc_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::trunc_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::trunc_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::round_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::round_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::round_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::rint_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::rint_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::rint_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isinf_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isinf_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isinf_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isnan_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isnan_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isnan_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:40: error: 'std::index_sequence' has not been declared
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:54: error: expected ',' or '...' before '<' token
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:61: error: 'get_functor' function uses 'auto' type specifier without trailing return type
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:61: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1138:65: error: 'make_xfunction' function uses 'auto' type specifier without trailing return type
 inline auto make_xfunction(std::tuple<A...>&& f_args, E&&... e) noexcept {
                                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1138:65: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::detail::make_xfunction(std::tuple<_Args2 ...>&&, E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: error: 'decay_t' is not a member of 'std'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:60: error: template argument 1 is invalid
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:61: error: expected parameter pack before '...'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:61: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1140:33: error: 'functor_type' has not been declared
   using result_type  = typename functor_type::result_type;
                                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:26: error: 'functor_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:26: note: suggested alternative: 'xfunction_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
                          xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:40: error: 'result_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:40: note: suggested alternative: 'layout_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
                                        layout_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:75: error: template argument 1 is invalid
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:75: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1144:36: error: 'make_index_sequence' is not a member of 'std'
                               std::make_index_sequence<sizeof...(A)>{});
                                    ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1144:69: error: expected primary-expression before '{' token
                               std::make_index_sequence<sizeof...(A)>{});
                                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1189:45: error: 'isclose' function uses 'auto' type specifier without trailing return type
                     bool equal_nan = false) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1189:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1212:43: error: 'allclose' function uses 'auto' type specifier without trailing return type
                      double atol = 1e-08) noexcept {
                                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1212:43: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1236:34: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e, X&& axes) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1236:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1238:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1242:24: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e) noexcept {
                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1242:24: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1244:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1255:44: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e, const I (&axes)[N]) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1255:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1257:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1272:35: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1272:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1274:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1278:25: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1278:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1280:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1291:45: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1291:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1293:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1308:35: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1308:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1309:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1309:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1316:25: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1316:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1317:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1317:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1332:45: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1332:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1333:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1333:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:180:37: error: 'conditional_t' in namespace 'std' does not name a template type
   using select_iterator_impl = std::conditional_t<L == static_layout, It1, It2>;
                                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:180:32: note: suggested alternative: 'conditional'
   using select_iterator_impl = std::conditional_t<L == static_layout, It1, It2>;
                                ^~~
                                conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:184:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L, storage_iterator, layout_iterator<L>>;
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:187:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L, const_storage_iterator, const_layout_iterator<L>>;
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:190:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L,
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:195:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L,
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:199:34: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   using iterator               = select_iterator<DL>;
                                  ^~~~~~~~~~~~~~~
                                  get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:200:34: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   using const_iterator         = select_const_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~
                                  xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:201:34: error: 'select_reverse_iterator' does not name a type; did you mean 'storage_iterator'?
   using reverse_iterator       = select_reverse_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
                                  storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:202:34: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   using const_reverse_iterator = select_const_reverse_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:205:3: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   select_iterator<L> begin() noexcept;
   ^~~~~~~~~~~~~~~
   get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:207:3: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   select_iterator<L> end() noexcept;
   ^~~~~~~~~~~~~~~
   get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:210:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> begin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:212:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> end() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:214:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> cbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:216:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> cend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:219:3: error: 'select_reverse_iterator' does not name a type; did you mean 'storage_iterator'?
   select_reverse_iterator<L> rbegin() noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~
   storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:221:3: error: 'select_reverse_iterator' does not name a type; did you mean 'storage_iterator'?
   select_reverse_iterator<L> rend() noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~
   storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:224:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:226:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:228:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:230:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:662:48: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
 inline auto xcontainer<D>::begin() noexcept -> select_iterator<L> {
                                                ^~~~~~~~~~~~~~~
                                                get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:662:63: error: expected initializer before '<' token
 inline auto xcontainer<D>::begin() noexcept -> select_iterator<L> {
                                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:671:46: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
 inline auto xcontainer<D>::end() noexcept -> select_iterator<L> {
                                              ^~~~~~~~~~~~~~~
                                              get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:671:61: error: expected initializer before '<' token
 inline auto xcontainer<D>::end() noexcept -> select_iterator<L> {
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:680:54: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::begin() const noexcept -> select_const_iterator<L> {
                                                      ^~~~~~~~~~~~~~~~~~~~~
                                                      xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:680:75: error: expected initializer before '<' token
 inline auto xcontainer<D>::begin() const noexcept -> select_const_iterator<L> {
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:686:52: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::end() const noexcept -> select_const_iterator<L> {
                                                    ^~~~~~~~~~~~~~~~~~~~~
                                                    xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:686:73: error: expected initializer before '<' token
 inline auto xcontainer<D>::end() const noexcept -> select_const_iterator<L> {
                                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:692:55: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::cbegin() const noexcept -> select_const_iterator<L> {
                                                       ^~~~~~~~~~~~~~~~~~~~~
                                                       xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:692:76: error: expected initializer before '<' token
 inline auto xcontainer<D>::cbegin() const noexcept -> select_const_iterator<L> {
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:701:53: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::cend() const noexcept -> select_const_iterator<L> {
                                                     ^~~~~~~~~~~~~~~~~~~~~
                                                     xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:701:74: error: expected initializer before '<' token
 inline auto xcontainer<D>::cend() const noexcept -> select_const_iterator<L> {
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:710:49: error: 'select_reverse_iterator' does not name a type; did you mean 'storage_iterator'?
 inline auto xcontainer<D>::rbegin() noexcept -> select_reverse_iterator<L> {
                                                 ^~~~~~~~~~~~~~~~~~~~~~~
                                                 storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:710:72: error: expected initializer before '<' token
 inline auto xcontainer<D>::rbegin() noexcept -> select_reverse_iterator<L> {
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:719:47: error: 'select_reverse_iterator' does not name a type; did you mean 'storage_iterator'?
 inline auto xcontainer<D>::rend() noexcept -> select_reverse_iterator<L> {
                                               ^~~~~~~~~~~~~~~~~~~~~~~
                                               storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:719:70: error: expected initializer before '<' token
 inline auto xcontainer<D>::rend() noexcept -> select_reverse_iterator<L> {
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:729:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:729:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:736:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:736:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:743:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:743:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:753:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:753:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: In member function 'void xt::xstrided_container<D>::reshape(const S&, bool)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:15: error: 'forward_sequence' was not declared in this scope
     m_shape = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:15: note: suggested alternative: 'make_sequence'
     m_shape = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
               make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:42: error: expected primary-expression before '>' token
     m_shape = forward_sequence<shape_type>(shape);
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: In member function 'void xt::xstrided_container<D>::reshape(const S&, const strides_type&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:15: error: 'forward_sequence' was not declared in this scope
   m_shape   = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:15: note: suggested alternative: 'make_sequence'
   m_shape   = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
               make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:42: error: expected primary-expression before '>' token
   m_shape   = forward_sequence<shape_type>(shape);
                                          ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:15,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xassign.hpp: In function 'void xt::scalar_computed_assign(xt::xexpression<E>&, const E2&, F&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xassign.hpp:163:33: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                  [e2, &f](const auto& v) { return f(v, e2); });
                                 ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator+=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:237:67: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::plus<>());
                                                                   ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:167:12: note: provided for 'template<class _Tp> struct std::plus'
     struct plus : public binary_function<_Tp, _Tp, _Tp>
            ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator-=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:249:68: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::minus<>());
                                                                    ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:177:12: note: provided for 'template<class _Tp> struct std::minus'
     struct minus : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator*=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:261:73: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::multiplies<>());
                                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:187:12: note: provided for 'template<class _Tp> struct std::multiplies'
     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator/=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:273:70: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::divides<>());
                                                                      ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:197:12: note: provided for 'template<class _Tp> struct std::divides'
     struct divides : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::xview_semantic<D>::derived_type& xt::xview_semantic<D>::scalar_computed_assign(const E&, F&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:540:32: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                  [e, &f](const auto& v) { return f(v, e); });
                                ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp: In static member function 'static xt::xarray_container<EC, L, SC> xt::xarray_container<EC, L, SC>::from_shape(S&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:22: error: 'forward_sequence' was not declared in this scope
   shape_type shape = forward_sequence<shape_type>(s);
                      ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:22: note: suggested alternative: 'make_sequence'
   shape_type shape = forward_sequence<shape_type>(s);
                      ^~~~~~~~~~~~~~~~
                      make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:49: error: expected primary-expression before '>' token
   shape_type shape = forward_sequence<shape_type>(s);
                                                 ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:27:19: error: 'xnone' function uses 'auto' type specifier without trailing return type
 inline auto xnone() { return placeholders::xtuph(); }
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:27:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:18: error: 'enable_if_t' in namespace 'std' does not name a template type
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:13: note: suggested alternative: 'enable_if'
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
             ^~~
             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:29: error: expected '>' before '<' token
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:93:41: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(T min_val, T max_val) noexcept {
                                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:93:41: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: In function 'auto xt::range(T, T)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:94:19: error: 'make_unsigned_t' in namespace 'std' does not name a template type
   using UT = std::make_unsigned_t<T>;
                   ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:94:14: note: suggested alternative: 'make_unsigned'
   using UT = std::make_unsigned_t<T>;
              ^~~
              make_unsigned
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:17: error: 'UT' was not declared in this scope
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                 ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:17: note: suggested alternative: 'T'
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                 ^~
                 T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:19: error: template argument 1 is invalid
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:33: error: 'UT' does not name a type; did you mean 'T'?
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                                 ^~
                                 T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:59: error: 'UT' does not name a type; did you mean 'T'?
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                                                           ^~
                                                           T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:18: error: 'enable_if_t' in namespace 'std' does not name a template type
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:13: note: suggested alternative: 'enable_if'
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
             ^~~
             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:29: error: expected '>' before '<' token
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:132:49: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(T min_val, T max_val, T step) noexcept {
                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:132:49: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:167:19: error: 'all' function uses 'auto' type specifier without trailing return type
 inline auto all() noexcept { return xall_tag(); }
                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:167:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:193:23: error: 'newaxis' function uses 'auto' type specifier without trailing return type
 inline auto newaxis() noexcept { return xnewaxis_tag(); }
                       ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:193:23: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:205:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:205:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:214:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:214:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:223:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:223:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:234:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:234:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:243:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:243:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:252:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:252:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:267:39: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(A min_val, B max_val) {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:267:39: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:273:47: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(A min_val, B max_val, C step) {
                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:273:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:287:46: error: 'get_size' function uses 'auto' type specifier without trailing return type
 inline auto get_size(const xslice<S>& slice) noexcept {
                                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:287:46: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:301:47: error: 'step_size' function uses 'auto' type specifier without trailing return type
 inline auto step_size(const xslice<S>& slice) noexcept {
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:301:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:48: error: 'value' function uses 'auto' type specifier without trailing return type
 inline auto value(const xslice<S>& slice, I i) noexcept {
                                                ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:48: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:327:59: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t /*index*/) {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:327:59: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:332:71: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
 inline auto get_slice_implementation(E& e, xall_tag, std::size_t index) {
                                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:332:71: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:339:59: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t /*index*/) {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:339:59: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:346:55: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t index) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:346:55: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: error: 'remove_reference_t' is not a member of 'std'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: note: suggested alternative: 'remove_reference'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
                                                remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: note: suggested alternative: 'remove_reference'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
                                                remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:67: error: template argument 2 is invalid
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:69: error: expected identifier before '>' token
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                                     ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:56:61: error: 'get_slice_value' function uses 'auto' type specifier without trailing return type
 inline auto get_slice_value(const xslice<S>& slice, It& it) noexcept {
                                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:56:61: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_count_impl<T, S>::count(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: error: 'remove_reference_t' is not a member of 'std'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: note: suggested alternative: 'remove_reference'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
                                        remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: note: suggested alternative: 'remove_reference'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
                                        remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:59: error: template argument 1 is invalid
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:64: error: '::value' has not been declared
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                                                ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:64: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_count_impl<T, S>::count(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: error: 'remove_reference_t' is not a member of 'std'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: note: suggested alternative: 'remove_reference'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: note: suggested alternative: 'remove_reference'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:53: error: template argument 1 is invalid
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:58: error: '::value' has not been declared
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                                          ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:58: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_skip_impl<T, S>::count_impl(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: error: 'remove_reference_t' is not a member of 'std'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: note: suggested alternative: 'remove_reference'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
                                       remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: note: suggested alternative: 'remove_reference'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
                                       remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:58: error: template argument 1 is invalid
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:63: error: '::value' has not been declared
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                                               ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:63: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_skip_impl<T, S>::count_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: error: 'remove_reference_t' is not a member of 'std'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: note: suggested alternative: 'remove_reference'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: note: suggested alternative: 'remove_reference'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:53: error: template argument 1 is invalid
     return std::is_integral<std::remove_reference_t<T>>::value
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:58: error: '::value' has not been declared
     return std::is_integral<std::remove_reference_t<T>>::value
                                                          ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:58: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_skip_impl<T, S>::count_impl(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: error: 'remove_reference_t' is not a member of 'std'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: note: suggested alternative: 'remove_reference'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
                                 remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: note: suggested alternative: 'remove_reference'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
                                 remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:52: error: template argument 1 is invalid
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:57: error: '::value' has not been declared
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                                         ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:57: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_skip_impl<T, S>::count_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: error: 'remove_reference_t' is not a member of 'std'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: note: suggested alternative: 'remove_reference'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
                            remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: note: suggested alternative: 'remove_reference'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
                            remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:47: error: template argument 1 is invalid
     return is_newaxis<std::remove_reference_t<T>>::value
                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:52: error: '::value' has not been declared
     return is_newaxis<std::remove_reference_t<T>>::value
                                                    ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:52: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:34:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:34:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:50: error: 'xexpression_type' was not declared in this scope
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                  ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:50: note: suggested alternative: 'xexpression'
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                  ^~~~~~~~~~~~~~~~
                                                  xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:72: error: template argument 1 is invalid
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:46:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:46:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:49:35: error: template argument 1 is invalid
                               S...>::type;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:48:14: error: expected nested-name-specifier
     typename xview_shape_type<typename xexpression_type::shape_type,
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               S...>::type;
                               ~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: error: 'remove_reference_t' is not a member of 'std'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: note: suggested alternative: 'remove_reference'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
                                      remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: note: suggested alternative: 'remove_reference'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
                                      remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:57: error: template argument 1 is invalid
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                                         ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:59: error: wrong number of template arguments (1, should be at least 2)
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                                           ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:39:7: note: provided for 'template<bool is_const, class CT, class ... S> class xt::xview_stepper'
 class xview_stepper;
       ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: error: 'remove_cv_t' is not a member of 'std'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: note: suggested alternative: 'remove_cv'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
                                                  remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: note: suggested alternative: 'remove_cv'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
                                                  remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:64: error: template argument 2 is invalid
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:74:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:74:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:77:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:78:36: error: 'xexpression_type' has not been declared
   using reference       = typename xexpression_type::reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:79:36: error: 'xexpression_type' has not been declared
   using const_reference = typename xexpression_type::const_reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:80:36: error: 'xexpression_type' has not been declared
   using pointer         = typename xexpression_type::pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:81:36: error: 'xexpression_type' has not been declared
   using const_pointer   = typename xexpression_type::const_pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:82:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:83:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:112:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:114:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:120:3: error: 'reference' does not name a type
   reference operator()(Args... args);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:121:3: error: 'reference' does not name a type
   reference operator[](const xindex& index);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:122:3: error: 'reference' does not name a type
   reference operator[](size_type i);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:124:3: error: 'reference' does not name a type
   reference element(It first, It last);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:127:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:128:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:129:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:131:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It first, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:149:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:150:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value,
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:150:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value,
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:154:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:155:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value,
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:155:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value,
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:159:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:160:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, const value_type*>
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:160:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, const value_type*>
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:163:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:164:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, value_type*> raw_data();
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:164:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, value_type*> raw_data();
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:166:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:167:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t>
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:167:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t>
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:170:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type underlying_size(size_type dim) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:185:3: error: 'reference' does not name a type
   reference access_impl(std::index_sequence<I...>, Args... args);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:188:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:191:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<lesser_condition<I>::value, size_type> index(
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:191:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<lesser_condition<I>::value, size_type> index(
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:195:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<!lesser_condition<I>::value, size_type> index(
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:195:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<!lesser_condition<I>::value, size_type> index(
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type, class T>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type, class T>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type, class T>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:199:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type sliced_access(const xslice<T>& slice) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I,
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I,
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I,
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:205:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type sliced_access(const xslice<T>& slice, Arg arg, Args... args) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:18: error: 'T' was not declared in this scope
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:21: error: 'size_type' was not declared in this scope
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:21: note: suggested alternative: 'slice_type'
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                     ^~~~~~~~~
                     slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:30: error: template argument 1 is invalid
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:30: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:52: error: 'T' does not name a type
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:64: error: 'Args' has not been declared
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                                                                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:223:31: error: 'view' function uses 'auto' type specifier without trailing return type
 auto view(E&& e, S&&... slices);
                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:223:31: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:250:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xview<CT, S...>, xview<CT, S...>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:250:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xview<CT, S...>, xview<CT, S...>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:39: error: 'view_type' was not declared in this scope
   using substepper_type = get_stepper<view_type>;
                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:39: note: suggested alternative: 'iswctype'
   using substepper_type = get_stepper<view_type>;
                                       ^~~~~~~~~
                                       iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:48: error: template argument 1 is invalid
   using substepper_type = get_stepper<view_type>;
                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:253:36: error: 'substepper_type' has not been declared
   using value_type      = typename substepper_type::value_type;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:254:36: error: 'substepper_type' has not been declared
   using reference       = typename substepper_type::reference;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:255:36: error: 'substepper_type' has not been declared
   using pointer         = typename substepper_type::pointer;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:256:36: error: 'substepper_type' has not been declared
   using difference_type = typename substepper_type::difference_type;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:257:36: error: 'view_type' has not been declared
   using size_type       = typename view_type::size_type;
                                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:259:31: error: 'substepper_type' has not been declared
   using shape_type = typename substepper_type::shape_type;
                               ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:262:26: error: expected ')' before '*' token
   xview_stepper(view_type* view,
                ~         ^
                          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:267:3: error: 'reference' does not name a type
   reference operator*() const;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:269:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:269:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:270:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:270:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:271:14: error: 'size_type' has not been declared
   void reset(size_type dim);
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:272:19: error: 'size_type' has not been declared
   void reset_back(size_type dim);
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:280:25: error: 'size_type' has not been declared
   bool is_newaxis_slice(size_type index) const noexcept;
                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:284:20: error: 'size_type' has not been declared
   void common_step(size_type dim, size_type n, F f);
                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:284:35: error: 'size_type' has not been declared
   void common_step(size_type dim, size_type n, F f);
                                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:287:21: error: 'size_type' has not been declared
   void common_reset(size_type dim, F f);
                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:289:3: error: 'view_type' does not name a type; did you mean 'iswctype'?
   view_type* p_view;
   ^~~~~~~~~
   iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:290:3: error: 'substepper_type' does not name a type; did you mean 'stepper_tools'?
   substepper_type m_it;
   ^~~~~~~~~~~~~~~
   stepper_tools
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:291:3: error: 'size_type' does not name a type; did you mean 'size_t'?
   size_type m_offset;
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In constructor 'xt::xview<CT, S>::xview(CTA&&, FSL&&, SL&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:340:24: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [](const auto& s) noexcept { return get_size(s); };
                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i != dimension(); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:8: note: suggested alternative: 'slice_type'
   for (size_type i = 0; i != dimension(); ++i) {
        ^~~~~~~~~
        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i != dimension(); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:30: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   for (size_type i = 0; i != dimension(); ++i) {
                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:342:14: error: expected ';' before 'index'
     size_type index = integral_skip<S...>(i);
              ^~~~~~
              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:343:23: error: 'index' was not declared in this scope
     m_shape[i]      = index < sizeof...(S)
                       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:343:23: note: suggested alternative: 'xindex'
     m_shape[i]      = index < sizeof...(S)
                       ^~~~~
                       xindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::self_type& xt::xview<CT, S>::operator=(const xt::xexpression<E>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:366:51: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   bool cond = (e.derived_cast().shape().size() == dimension()) &&
                                                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:394:55: error: 'size_type' does not name a type; did you mean 'slice_type'?
 inline auto xview<CT, S...>::size() const noexcept -> size_type {
                                                       ^~~~~~~~~
                                                       slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:402:60: error: 'size_type' does not name a type; did you mean 'slice_type'?
 inline auto xview<CT, S...>::dimension() const noexcept -> size_type {
                                                            ^~~~~~~~~
                                                            slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:443:58: error: 'reference' does not name a type
 inline auto xview<CT, S...>::operator()(Args... args) -> reference {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:457:65: error: 'reference' does not name a type
 inline auto xview<CT, S...>::operator[](const xindex& index) -> reference {
                                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: error: declaration of 'operator[]' as non-function
 inline auto xview<CT, S...>::operator[](size_type i) -> reference {
                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: note: suggested alternative: 'size_t'
 inline auto xview<CT, S...>::operator[](size_type i) -> reference {
                                         ^~~~~~~~~
                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:468:60: error: 'reference' does not name a type
 inline auto xview<CT, S...>::element(It first, It last) -> reference {
                                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:485:64: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xview<CT, S...>::operator()(Args... args) const -> const_reference {
                                                                ^~~~~~~~~~~~~~~
                                                                xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:500:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: error: declaration of 'operator[]' as non-function
 inline auto xview<CT, S...>::operator[](size_type i) const -> const_reference {
                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: note: suggested alternative: 'size_t'
 inline auto xview<CT, S...>::operator[](size_type i) const -> const_reference {
                                         ^~~~~~~~~
                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:512:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::underlying_size(size_type dim) const -> size_type {
                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: 'auto xt::xview<CT, S>::underlying_size' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: template definition of non-template 'auto xt::xview<CT, S>::underlying_size'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: note: suggested alternative: 'slice_type'
 inline auto xview<CT, S...>::underlying_size(size_type dim) const -> size_type {
                                              ^~~~~~~~~
                                              slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: 'auto xt::xview<CT, S>::access_impl' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: template definition of non-template 'auto xt::xview<CT, S>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:62: error: 'I' was not declared in this scope
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:632:42: error: 'Args' was not declared in this scope
                                          Args... args) -> reference {
                                          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: 'auto xt::xview<CT, S>::access_impl' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: template definition of non-template 'auto xt::xview<CT, S>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:62: error: 'I' was not declared in this scope
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:639:42: error: 'Args' was not declared in this scope
                                          Args... args) const
                                          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::index(Args... args) const
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: 'auto xt::xview<CT, S>::index' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: template definition of non-template 'auto xt::xview<CT, S>::index'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: 'Args' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::index(Args... args) const
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: 'auto xt::xview<CT, S>::index' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: template definition of non-template 'auto xt::xview<CT, S>::index'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: 'Args' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class T>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class T>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class T>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:662:57: error: 'T' was not declared in this scope
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice) const
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:662:58: error: template argument 1 is invalid
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice) const
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:663:6: error: 'size_type' does not name a type; did you mean 'slice_type'?
   -> size_type {
      ^~~~~~~~~
      slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I,
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I,
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I,
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:672:57: error: 'T' was not declared in this scope
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice,
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:672:58: error: template argument 1 is invalid
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice,
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:673:44: error: 'Arg' has not been declared
                                            Arg arg,
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:44: error: 'Args' has not been declared
                                            Args... args) const -> size_type {
                                            ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:52: error: expansion pattern 'int' contains no argument packs
                                            Args... args) const -> size_type {
                                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:67: error: 'size_type' does not name a type; did you mean 'slice_type'?
                                            Args... args) const -> size_type {
                                                                   ^~~~~~~~~
                                                                   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:682:50: error: 'T' does not name a type
 inline auto xview<CT, S...>::sliced_access(const T& squeeze, Args...) const
                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:682:62: error: 'Args' has not been declared
 inline auto xview<CT, S...>::sliced_access(const T& squeeze, Args...) const
                                                              ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:21: error: 'T' was not declared in this scope
   -> disable_xslice<T, size_type> {
                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:24: error: 'size_type' was not declared in this scope
   -> disable_xslice<T, size_type> {
                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:24: note: suggested alternative: 'slice_type'
   -> disable_xslice<T, size_type> {
                        ^~~~~~~~~
                        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:33: error: template argument 1 is invalid
   -> disable_xslice<T, size_type> {
                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:33: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::base_index_type xt::xview<CT, S>::make_index(It, It) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:692:5: error: parse error in template argument list
     make_sequence<typename xexpression_type::shape_type>(m_e.dimension(), 0);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:693:31: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func1 = [&first](const auto& s) { return get_slice_value(s, first); };
                               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:694:25: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func2 = [](const auto& s) { return xt::value(s, 0); };
                         ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i != m_e.dimension(); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:8: note: suggested alternative: 'slice_type'
   for (size_type i = 0; i != m_e.dimension(); ++i) {
        ^~~~~~~~~
        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i != m_e.dimension(); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:696:14: error: expected ';' before 'k'
     size_type k = newaxis_skip<S...>(i);
              ^~
              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:697:25: error: 'k' was not declared in this scope
     std::advance(first, k - i);
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'std::size_t xt::detail::get_underlying_shape_index(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:35: error: 'get_slice_type' was not declared in this scope
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:35: note: suggested alternative: 'get_slice_value'
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                   ^~~~~~~~~~~~~~
                                   get_slice_value
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:14: error: parse error in template argument list
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:12: error: parameter packs not expanded with '...':
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:12: note:         'S'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:55: error: expected ';' before '...' token
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                                       ^~~
                                                       ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:55: error: expected primary-expression before '...' token
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                                       ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:40: error: 'std::index_sequence' has not been declared
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:54: error: expected ',' or '...' before '<' token
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:75: error: 'make_view_impl' function uses 'auto' type specifier without trailing return type
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:75: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'auto xt::detail::make_view_impl(E&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:41: error: 'get_slice_type' was not declared in this scope
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                         ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:41: note: suggested alternative: 'get_slice_value'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                         ^~~~~~~~~~~~~~
                                         get_slice_value
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:61: error: 'decay_t' is not a member of 'std'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:61: note: suggested alternative: 'decay'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                             ^~~~~~~
                                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:70: error: template argument 2 is invalid
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:724:41: error: 'slices' was not declared in this scope
                      e, std::forward<S>(slices),
                                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:724:41: note: suggested alternative: 'xslice'
                      e, std::forward<S>(slices),
                                         ^~~~~~
                                         xslice
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: error: 'decay_t' is not a member of 'std'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: note: suggested alternative: 'decay'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: note: suggested alternative: 'decay'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:22: error: parse error in template argument list
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:67: error: expected primary-expression before '...' token
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                                   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:738:38: error: 'view' function uses 'auto' type specifier without trailing return type
 inline auto view(E&& e, S&&... slices) {
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:738:38: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'auto xt::view(E&&, S&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:740:38: error: 'make_index_sequence' is not a member of 'std'
                                 std::make_index_sequence<sizeof...(S)>(),
                                      ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:740:72: error: expected primary-expression before ')' token
                                 std::make_index_sequence<sizeof...(S)>(),
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::stepper xt::xview<CT, S>::stepper_begin(const ST&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:751:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:751:3: note: suggested alternative: 'slice_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:752:56: error: 'offset' was not declared in this scope
   return stepper(this, m_e.stepper_begin(m_e.shape()), offset);
                                                        ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:752:56: note: suggested alternative: 'off_t'
   return stepper(this, m_e.stepper_begin(m_e.shape()), offset);
                                                        ^~~~~~
                                                        off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::stepper xt::xview<CT, S>::stepper_end(const ST&, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:759:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:759:3: note: suggested alternative: 'slice_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:760:57: error: 'offset' was not declared in this scope
   return stepper(this, m_e.stepper_end(m_e.shape(), l), offset, true);
                                                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:760:57: note: suggested alternative: 'off_t'
   return stepper(this, m_e.stepper_end(m_e.shape(), l), offset, true);
                                                         ^~~~~~
                                                         off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::const_stepper xt::xview<CT, S>::stepper_begin(const ST&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:767:3: error: 'size_type' was not declared in this scope
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:767:3: note: suggested alternative: 'slice_type'
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:768:9: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   const xexpression_type& e = m_e;
         ^~~~~~~~~~~~~~~~
         xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:30: error: 'e' was not declared in this scope
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:60: error: 'offset' was not declared in this scope
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                                                            ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:60: note: suggested alternative: 'off_t'
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                                                            ^~~~~~
                                                            off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::const_stepper xt::xview<CT, S>::stepper_end(const ST&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:776:3: error: 'size_type' was not declared in this scope
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:776:3: note: suggested alternative: 'slice_type'
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:777:9: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   const xexpression_type& e = m_e;
         ^~~~~~~~~~~~~~~~
         xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:30: error: 'e' was not declared in this scope
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:61: error: 'offset' was not declared in this scope
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                                                             ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:61: note: suggested alternative: 'off_t'
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                                                             ^~~~~~
                                                             off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: ISO C++ forbids declaration of 'xview_stepper' with no type [-fpermissive]
 inline xview_stepper<is_const, CT, S...>::xview_stepper(view_type* view,
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: 'int xt::xview_stepper<is_const, CT, S>::xview_stepper' is not a static data member of 'class xt::xview_stepper<is_const, CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: template definition of non-template 'int xt::xview_stepper<is_const, CT, S>::xview_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: 'view_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: note: suggested alternative: 'iswctype'
 inline xview_stepper<is_const, CT, S...>::xview_stepper(view_type* view,
                                                         ^~~~~~~~~
                                                         iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:787:57: error: 'substepper_type' was not declared in this scope
                                                         substepper_type it,
                                                         ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:787:57: note: suggested alternative: 'stepper_tools'
                                                         substepper_type it,
                                                         ^~~~~~~~~~~~~~~
                                                         stepper_tools
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:788:57: error: 'size_type' was not declared in this scope
                                                         size_type offset,
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:788:57: note: suggested alternative: 'size_t'
                                                         size_type offset,
                                                         ^~~~~~~~~
                                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:789:57: error: expected primary-expression before 'bool'
                                                         bool end)
                                                         ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:806:69: error: 'reference' does not name a type
 inline auto xview_stepper<is_const, CT, S...>::operator*() const -> reference {
                                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: error: variable or field 'step' declared void
 inline void xview_stepper<is_const, CT, S...>::step(size_type dim,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::step(size_type dim,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:812:53: error: 'size_type' was not declared in this scope
                                                     size_type n) {
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:812:53: note: suggested alternative: 'size_t'
                                                     size_type n) {
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: error: variable or field 'step_back' declared void
 inline void xview_stepper<is_const, CT, S...>::step_back(size_type dim,
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::step_back(size_type dim,
                                                          ^~~~~~~~~
                                                          size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:821:58: error: 'size_type' was not declared in this scope
                                                          size_type n) {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:821:58: note: suggested alternative: 'size_t'
                                                          size_type n) {
                                                          ^~~~~~~~~
                                                          size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: error: variable or field 'reset' declared void
 inline void xview_stepper<is_const, CT, S...>::reset(size_type dim) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::reset(size_type dim) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: error: variable or field 'reset_back' declared void
 inline void xview_stepper<is_const, CT, S...>::reset_back(size_type dim) {
                                                           ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::reset_back(size_type dim) {
                                                           ^~~~~~~~~
                                                           size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:846:3: error: 'm_it' was not declared in this scope
   m_it.to_begin();
   ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:846:3: note: suggested alternative: 'u_int'
   m_it.to_begin();
   ^~~~
   u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:851:3: error: 'm_it' was not declared in this scope
   m_it.to_end(l);
   ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:851:3: note: suggested alternative: 'u_int'
   m_it.to_end(l);
   ^~~~
   u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'bool xt::xview_stepper<is_const, CT, S>::equal(const xt::xview_stepper<is_const, CT, S>&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:10: error: 'p_view' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
          ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:10: note: suggested alternative: 'view'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
          ^~~~~~
          view
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:34: error: 'm_it' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:34: note: suggested alternative: 'u_int'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                  ^~~~
                                  u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:54: error: 'm_offset' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:54: note: suggested alternative: '_off_t'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
                                                      _off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   size_type index) const noexcept {
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: 'bool xt::xview_stepper<is_const, CT, S>::is_newaxis_slice' is not a static data member of 'class xt::xview_stepper<is_const, CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: template definition of non-template 'bool xt::xview_stepper<is_const, CT, S>::is_newaxis_slice'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: note: suggested alternative: 'size_t'
   size_type index) const noexcept {
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_end_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:871:24: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [](const auto& s) { return xt::value(s, get_size(s) - 1); };
                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i < sizeof...(S); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:8: note: suggested alternative: 'size_t'
   for (size_type i = 0; i < sizeof...(S); ++i) {
        ^~~~~~~~~
        size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i < sizeof...(S); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:874:16: error: expected ';' before 's'
       size_type s     = apply<size_type>(i, func, p_view->slices());
                ^~
                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:875:16: error: expected ';' before 'index'
       size_type index = i - newaxis_count_before<S...>(i);
                ^~~~~~
                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:7: error: 's' was not declared in this scope
       s               = p_view->underlying_size(index) - 1 - s;
       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:25: error: 'p_view' was not declared in this scope
       s               = p_view->underlying_size(index) - 1 - s;
                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:25: note: suggested alternative: 'view'
       s               = p_view->underlying_size(index) - 1 - s;
                         ^~~~~~
                         view
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:49: error: 'index' was not declared in this scope
       s               = p_view->underlying_size(index) - 1 - s;
                                                 ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:49: note: suggested alternative: 'xindex'
       s               = p_view->underlying_size(index) - 1 - s;
                                                 ^~~~~
                                                 xindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:877:7: error: 'm_it' was not declared in this scope
       m_it.step_back(index, s);
       ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:877:7: note: suggested alternative: 'u_int'
       m_it.step_back(index, s);
       ^~~~
       u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: error: variable or field 'common_step' declared void
 void xview_stepper<is_const, CT, S...>::common_step(size_type dim,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: note: suggested alternative: 'size_t'
 void xview_stepper<is_const, CT, S...>::common_step(size_type dim,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:885:53: error: 'size_type' was not declared in this scope
                                                     size_type n,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:885:53: note: suggested alternative: 'size_t'
                                                     size_type n,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:886:55: error: expected primary-expression before 'f'
                                                     F f) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: error: variable or field 'common_reset' declared void
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: note: suggested alternative: 'size_t'
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:71: error: expected primary-expression before 'f'
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                                       ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In substitution of 'template<class S> using const_closure_t = typename xt::const_closure::type [with S = float]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:134:34:   required from 'struct xt::const_xclosure<float, void>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:163:64:   required from 'auto xt::broadcast(E&&, const I (&)[L]) [with E = float; I = unsigned int; unsigned int L = 2]'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:79:19:   required from 'auto xt::zeros(const I (&)[L]) [with T = float; I = unsigned int; unsigned int L = 2]'
../components/tiny_dnn/include/tiny_dnn/util/util.h:418:74:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:588:56: error: no type named 'type' in 'struct xt::const_closure<float>'
 using const_closure_t = typename const_closure<S>::type;
                                                        ^
In file included from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/util/util.h: In function 'xt::xarray<float> tiny_dnn::to_xtensor(const tensor_t&)':
../components/tiny_dnn/include/tiny_dnn/util/util.h:418:50: error: conversion from 'void' to non-scalar type 'xt::xarray<float>' {aka 'xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >'} requested
   xt::xarray<float_t> result = xt::zeros<float_t>({t.size(), t[0].size()});
                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h: At global scope:
../components/tiny_dnn/include/tiny_dnn/util/util.h:437:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<std::is_same<T, typename ValType::value_type>::value>;
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h:437:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<std::is_same<T, typename ValType::value_type>::value>;
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/util/util.h:440:24: error: 'value_type_is' does not name a type
 using value_is_float = value_type_is<ValType, float>;
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h:443:25: error: 'value_type_is' does not name a type
 using value_is_double = value_type_is<ValType, double>;
                         ^~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:14,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:107:22: error: 'shape' function uses 'auto' type specifier without trailing return type
   const auto shape() const { return storage_.shape(); }
                      ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:107:22: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:113:20: error: 'dim' function uses 'auto' type specifier without trailing return type
   const auto dim() const { return storage_.dimension(); }
                    ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:113:20: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:119:3: warning: type qualifiers ignored on function return type [-Wignored-qualifiers]
   const size_t size() const { return storage_.size(); }
   ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:145:19: error: 'host_begin' function uses 'auto' type specifier without trailing return type
   auto host_begin() { return storage_.begin(); }
                   ^
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:145:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:147:27: error: 'host_begin' function uses 'auto' type specifier without trailing return type
   const auto host_begin() const { return storage_.cbegin(); }
                           ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:147:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:149:17: error: 'host_end' function uses 'auto' type specifier without trailing return type
   auto host_end() { return storage_.end(); }
                 ^
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:149:17: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:151:25: error: 'host_end' function uses 'auto' type specifier without trailing return type
   const auto host_end() const { return storage_.cend(); }
                         ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:151:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: error: 'make_unsigned_t' is not a member of 'std'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: note: suggested alternative: 'make_unsigned'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
                                                  make_unsigned
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: error: 'make_unsigned_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: note: suggested alternative: 'make_unsigned'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
                                                  make_unsigned
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:66: error: template argument 1 is invalid
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                  ^~~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:72: error: template argument 2 is invalid
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                        ^~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:74: error: expected parameter pack before '...'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                          ^~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:74: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:77: error: expected unqualified-id before '>' token
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                             ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/layers/cells.h:11,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:35,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h: In member function 'void tiny_dnn::rnn_cell::set_params(size_t, size_t, bool)':
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:32: error: 'make_unique' is not a member of 'std'
     params_.activation_ = std::make_unique<tanh_layer>(tanh_layer());
                                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:32: note: 'std::make_unique' is only available from C++14 onwards
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:54: error: expected primary-expression before '>' token
     params_.activation_ = std::make_unique<tanh_layer>(tanh_layer());
                                                      ^
In file included from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:43,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h: In member function 'virtual void tiny_dnn::l2_normalization_layer::back_propagation(const std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, const std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&)':
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:109:15: warning: unused variable 'prev_delta' [-Wunused-variable]
     tensor_t &prev_delta     = *in_grad[0];
               ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:110:15: warning: unused variable 'curr_delta' [-Wunused-variable]
     tensor_t &curr_delta     = *out_grad[0];
               ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:112:18: warning: unused variable 'num_samples' [-Wunused-variable]
     const size_t num_samples = curr_out.size();
                  ^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp: In instantiation of 'xt::xarray_container<EC, L, SC>::xarray_container(xt::nested_initializer_list_t<typename xt::xstrided_container<xt::xarray_container<EC, L, SC> >::value_type, 1>) [with EC = xt::uvector<float, std::allocator<float> >; xt::layout_type L = (xt::layout_type)1; SC = std::vector<unsigned int>; xt::nested_initializer_list_t<typename xt::xstrided_container<xt::xarray_container<EC, L, SC> >::value_type, 1> = std::initializer_list<float>]':
../components/tiny_dnn/include/tiny_dnn/util/util.h:417:55:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:323:18: error: no matching function for call to 'xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >::begin<row_major>()'
     : nested_copy(this->template begin<layout_type::row_major>(), t);
       ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:233:28: note: candidate: 'template<class S, xt::layout_type L> xt::xcontainer<D>::broadcast_iterator<S, L> xt::xcontainer<D>::begin(const S&) [with S = S; xt::layout_type L = L; D = xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >]'
   broadcast_iterator<S, L> begin(const S& shape) noexcept;
                            ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:233:28: note:   template argument deduction/substitution failed:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:238:34: note: candidate: 'template<class S, xt::layout_type L> xt::xcontainer<D>::const_broadcast_iterator<S, L> xt::xcontainer<D>::begin(const S&) const [with S = S; xt::layout_type L = L; D = xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >]'
   const_broadcast_iterator<S, L> begin(const S& shape) const noexcept;
                                  ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:238:34: note:   template argument deduction/substitution failed:
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/external/rapidjson/document.h: In instantiation of 'void rapidjson::GenericValue<Encoding, Allocator>::SetObjectRaw(rapidjson::GenericValue<Encoding, Allocator>::Member*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]':
../components/cereal/include/cereal/external/rapidjson/document.h:789:3:   required from 'void rapidjson::GenericDocument<Encoding, Allocator>::EndObject(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]'
../components/cereal/include/cereal/external/rapidjson/reader.h:276:4:   required from 'void rapidjson::GenericReader<Encoding, Allocator>::ParseObject(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/reader.h:248:38:   required from 'bool rapidjson::GenericReader<Encoding, Allocator>::Parse(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/document.h:712:3:   required from 'rapidjson::GenericDocument<Encoding, Allocator>& rapidjson::GenericDocument<Encoding, Allocator>::ParseStream(Stream&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/archives/json.hpp:412:49:   required from here
../components/cereal/include/cereal/external/rapidjson/document.h:645:9: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'struct rapidjson::GenericValue<rapidjson::UTF8<> >::Member' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Werror=class-memaccess]
   memcpy(data_.o.members, members, count * sizeof(Member));
   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/external/rapidjson/document.h:33:9: note: 'struct rapidjson::GenericValue<rapidjson::UTF8<> >::Member' declared here
  struct Member {
         ^~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/external/rapidjson/document.h: In instantiation of 'void rapidjson::GenericValue<Encoding, Allocator>::SetArrayRaw(rapidjson::GenericValue<Encoding, Allocator>*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]':
../components/cereal/include/cereal/external/rapidjson/document.h:796:3:   required from 'void rapidjson::GenericDocument<Encoding, Allocator>::EndArray(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]'
../components/cereal/include/cereal/external/rapidjson/reader.h:318:4:   required from 'void rapidjson::GenericReader<Encoding, Allocator>::ParseArray(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/reader.h:249:37:   required from 'bool rapidjson::GenericReader<Encoding, Allocator>::Parse(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/document.h:712:3:   required from 'rapidjson::GenericDocument<Encoding, Allocator>& rapidjson::GenericDocument<Encoding, Allocator>::ParseStream(Stream&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/archives/json.hpp:412:49:   required from here
../components/cereal/include/cereal/external/rapidjson/document.h:637:9: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class rapidjson::GenericValue<rapidjson::UTF8<> >' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Werror=class-memaccess]
   memcpy(data_.a.elements, values, count * sizeof(GenericValue));
   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/external/rapidjson/document.h:30:7: note: 'class rapidjson::GenericValue<rapidjson::UTF8<> >' declared here
 class GenericValue {
       ^~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::elu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::leaky_relu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::relu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::sigmoid_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softmax_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softplus_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softsign_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::tanh_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::tanh_p1m2_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12:
../components/cereal/include/cereal/archives/json.hpp: In member function 'void cereal::JSONOutputArchive::finishNode()':
../components/cereal/include/cereal/archives/json.hpp:201:34: warning: this statement may fall through [-Wimplicit-fallthrough=]
             itsWriter.StartArray();
                                  ^
../components/cereal/include/cereal/archives/json.hpp:202:11: note: here
           case NodeType::InArray:
           ^~~~
../components/cereal/include/cereal/archives/json.hpp:206:35: warning: this statement may fall through [-Wimplicit-fallthrough=]
             itsWriter.StartObject();
                                   ^
../components/cereal/include/cereal/archives/json.hpp:207:11: note: here
           case NodeType::InObject:
           ^~~~
../main/otohikari.cpp: At global scope:
../main/otohikari.cpp:86:13: warning: 'void main_process()' defined but not used [-Wunused-function]
 static void main_process()
             ^~~~~~~~~~~~
../main/otohikari.cpp:63:13: warning: 'void download_process()' defined but not used [-Wunused-function]
 static void download_process()
             ^~~~~~~~~~~~~~~~
../main/otohikari.cpp:50:13: warning: 'void server_connected()' defined but not used [-Wunused-function]
 static void server_connected()
             ^~~~~~~~~~~~~~~~
../main/otohikari.cpp:39:13: warning: 'void wifi_connected()' defined but not used [-Wunused-function]
 static void wifi_connected()
             ^~~~~~~~~~~~~~
cc1plus: some warnings being treated as errors
[34/46] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/ota.cpp.obj
FAILED: esp-idf/main/CMakeFiles/__idf_main.dir/ota.cpp.obj 
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-g++  -DHAVE_CONFIG_H -DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\" -DUNITY_INCLUDE_CONFIG_H -DWITH_POSIX -Iconfig -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/newlib/platform_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/heap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/log/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps/sntp -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/lwip/src/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include/arch -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/. -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_system/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ringbuf/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/espcoredump/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ipc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/../include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/private_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/vfs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_eth/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_trace/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/mbedtls/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/esp_crt_bundle/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/bootloader_support/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_update/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spi_flash/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/include/esp_supplicant -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nvs_flash/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/pthread/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/perfmon/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/asio/asio/asio/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/asio/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/cbor/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/port/include/coap -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/libcoap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/libcoap/include/coap2 -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/console -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nghttp/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nghttp/nghttp2/lib/includes -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp-tls -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_adc_cal/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_gdbstub/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_hid/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcp_transport/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_client/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_server/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_https_ota/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protobuf-c/protobuf-c -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/common -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/security -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/transports -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mdns/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_local_ctrl/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/sdmmc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_serial_slave_link/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_websocket_client/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/expat/expat/expat/lib -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/expat/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wear_levelling/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/diskio -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/vfs -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/src -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freemodbus/common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/idf_test/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/idf_test/include/esp32 -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/jsmn/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/json/cJSON -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/libsodium/libsodium/src/libsodium/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/libsodium/port_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mqtt/esp-mqtt/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/openssl/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spiffs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/ulp/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/unity/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/unity/unity/src -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wifi_provisioning/include -I../components/EVXAudioRecorder -I../components/EVXGPIOController -I../components/EVXLEDController -I../components/EVXTimer -I../components/cereal/include -I../components/tiny_dnn/include -mlongcalls -Wno-frame-address   -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wextra -Wno-unused-parameter -Wno-sign-compare -ggdb -Og -std=c++11 -D_GNU_SOURCE -DIDF_VER=\"v4.2\" -DESP_PLATFORM -MD -MT esp-idf/main/CMakeFiles/__idf_main.dir/ota.cpp.obj -MF esp-idf/main/CMakeFiles/__idf_main.dir/ota.cpp.obj.d -o esp-idf/main/CMakeFiles/__idf_main.dir/ota.cpp.obj -c ../main/ota.cpp
In file included from ../main/ota.cpp:10:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_loop.h:2:2: warning: #warning "esp_event_loop.h is deprecated, please include esp_event.h instead" [-Wcpp]
 #warning "esp_event_loop.h is deprecated, please include esp_event.h instead"
  ^~~~~~~
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include/hal/i2s_hal.h:28,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include/driver/i2s.h:24,
                 from ../components/EVXAudioRecorder/EVXAudioRecorder.h:11,
                 from ../main/otohikari.cpp:9,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h: In function 'void i2s_ll_enable_dma(i2s_dev_t*)':
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: error: 'typeof' was not declared in this scope
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: note: suggested alternative: 'feof'
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
     feof
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:244:5: error: 'lc_conf' was not declared in this scope
     lc_conf.val = 0;
     ^~~~~~~
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:244:5: note: suggested alternative: 'lconv'
     lc_conf.val = 0;
     ^~~~~~~
     lconv
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected ')' before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                   ~^~~~
                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:11: error: expected unqualified-id before 'decltype'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
 decltype(auto) forward_sequence(A&& s);
          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected ')' before 'auto'
 decltype(auto) forward_sequence(A&& s);
         ~^~~~
          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
 decltype(auto) forward_sequence(A&& s);
          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:1: error: expected unqualified-id before 'decltype'
 decltype(auto) forward_sequence(A&& s);
 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:146:13: error: 'enable_if_t' in namespace 'std' does not name a template type
 inline std::enable_if_t<I == sizeof...(T), R> accumulate_impl(
             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:146:8: note: suggested alternative: 'enable_if'
 inline std::enable_if_t<I == sizeof...(T), R> accumulate_impl(
        ^~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:154:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t <
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:154:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t <
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::accumulate(F&&, R, const std::tuple<_Args2 ...>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:18: error: 'accumulate_impl' is not a member of 'xt::detail'
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                  ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:38: error: expected primary-expression before ',' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:41: error: expected primary-expression before ',' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected primary-expression before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected ';' before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
                                            ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected primary-expression before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                             ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected ')' before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                            ~^~~~
                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                             ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:20: error: expected unqualified-id before 'decltype'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected ')' before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                   ~^~~~
                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:11: error: expected unqualified-id before 'decltype'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:244:14: error: 'std::index_sequence' has not been declared
         std::index_sequence<I...> /*seq*/,
              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:244:28: error: expected ',' or '...' before '<' token
         std::index_sequence<I...> /*seq*/,
                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::detail::apply(std::size_t, F&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:246:19: error: 'add_pointer_t' in namespace 'std' does not name a template type
   using FT = std::add_pointer_t<R(F&&, const std::tuple<S...>&)>;
                   ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:246:14: note: suggested alternative: 'add_pointer'
   using FT = std::add_pointer_t<R(F&&, const std::tuple<S...>&)>;
              ^~~
              add_pointer
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:27: error: 'FT' was not declared in this scope
   static const std::array<FT, sizeof...(I)> ar = {
                           ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:27: note: suggested alternative: 'F'
   static const std::array<FT, sizeof...(I)> ar = {
                           ^~
                           F
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:43: error: template argument 1 is invalid
   static const std::array<FT, sizeof...(I)> ar = {
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:249:18: error: invalid types 'const int[std::size_t {aka unsigned int}]' for array subscript
   return ar[index](std::forward<F>(func), s);
                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:249:43: error: 's' was not declared in this scope
   return ar[index](std::forward<F>(func), s);
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::apply(std::size_t, F&&, const std::tuple<_Args2 ...>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:257:32: error: 'make_index_sequence' is not a member of 'std'
                           std::make_index_sequence<sizeof...(S)>(), s);
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:257:66: error: expected primary-expression before ')' token
                           std::make_index_sequence<sizeof...(S)>(), s);
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:337:41: error: 'std::index_sequence' has not been declared
 constexpr R initializer_shape(U t, std::index_sequence<I...>) {
                                         ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:337:55: error: expected ',' or '...' before '<' token
 constexpr R initializer_shape(U t, std::index_sequence<I...>) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'constexpr R xt::shape(T)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:346:13: error: 'make_index_sequence' is not a member of 'std'
     t, std::make_index_sequence<initializer_dimension<decltype(t)>::value>());
             ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:346:76: error: expected primary-expression before ')' token
     t, std::make_index_sequence<initializer_dimension<decltype(t)>::value>());
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: error: 'enable_if_t' is not a member of 'std'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: note: suggested alternative: 'enable_if'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: error: 'enable_if_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: note: suggested alternative: 'enable_if'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:56: error: type/value mismatch at argument 3 in template parameter list for 'template<class R, class A, class E> struct xt::detail::sequence_forwarder'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
                                                        ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:56: note:   expected a type, got '(<expression error> < (! std::is_same<std::array<_Tp, _Nm>, A>::value))'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:61: error: expected unqualified-id before '>' token
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
                                                             ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                 ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected ')' before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                ~^~~~
                 )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                 ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:8: error: expected unqualified-id before 'decltype'
 inline decltype(auto) forward_sequence(A&& s) {
        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:490:16: error: 'common_type_t' in namespace 'std' does not name a template type
 constexpr std::common_type_t<T1, T2> imax(const T1& a, const T2& b) {
                ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:490:11: note: suggested alternative: 'common_type'
 constexpr std::common_type_t<T1, T2> imax(const T1& a, const T2& b) {
           ^~~
           common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:568:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:568:5: note: suggested alternative: 'conditional'
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:573:57: error: wrong number of template arguments (2, should be 3)
                                          underlying_type>::type;
                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/move.h:55,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_pair.h:59,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:64,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/type_traits:92:12: note: provided for 'template<bool <anonymous>, class, class> struct std::conditional'
     struct conditional;
            ^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:573:58: error: expected identifier before '::' token
                                          underlying_type>::type;
                                                          ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:581:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using underlying_type = const std::decay_t<S>;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:581:32: error: expected ';'
   using underlying_type = const std::decay_t<S>;
                                ^~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:584:57: error: wrong number of template arguments (2, should be 3)
                                          underlying_type>::type;
                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/move.h:55,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_pair.h:59,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:64,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/type_traits:92:12: note: provided for 'template<bool <anonymous>, class, class> struct std::conditional'
     struct conditional;
            ^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:584:58: error: expected identifier before '::' token
                                          underlying_type>::type;
                                                          ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:597:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:597:5: note: suggested alternative: 'conditional'
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:600:21: error: 'conditional_t' in namespace 'std' does not name a template type
   using type = std::conditional_t<std::is_lvalue_reference<S>::value,
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:600:16: note: suggested alternative: 'conditional'
   using type = std::conditional_t<std::is_lvalue_reference<S>::value,
                ^~~
                conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:610:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using underlying_type = const std::decay_t<S>;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:610:32: error: expected ';'
   using underlying_type = const std::decay_t<S>;
                                ^~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:611:32: error: 'conditional_t' in namespace 'std' does not name a template type
   using type            = std::conditional_t<std::is_lvalue_reference<S>::value,
                                ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:611:27: note: suggested alternative: 'conditional'
   using type            = std::conditional_t<std::is_lvalue_reference<S>::value,
                           ^~~
                           conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: error: 'remove_reference_t' is not a member of 'std'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: note: suggested alternative: 'remove_reference'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
                                     remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: note: suggested alternative: 'remove_reference'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
                                     remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:56: error: template argument 1 is invalid
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:61: error: 'value' in namespace '::' does not name a type
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                             ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:59: note: suggested alternative: '_glue'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                           ^~
                                                           _glue
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:8: error: 'apply_cv_impl' is not a class template
 struct apply_cv_impl<T, U, true, false> {
        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:638:39: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T, U, false, true> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:643:38: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T, U, true, true> {
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:648:41: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, false, false> {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:653:40: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, true, false> {
                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:658:40: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, false, true> {
                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:663:39: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, true, true> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: error: 'decay_t' is not a member of 'std'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: note: suggested alternative: 'decay'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
                                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: note: suggested alternative: 'decay'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
                                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:65: error: template argument 1 is invalid
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:70: error: '::value' has not been declared
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                      ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:70: note: suggested alternative: '_glue'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                      ^~~~~
                                                                      _glue
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'constexpr xt::detail::forward_type_t<T, M> xt::forward_offset(T&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:733:30: error: 'remove_reference_t' in namespace 'std' does not name a template type
   using cv_value_type = std::remove_reference_t<forward_type>;
                              ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:733:25: note: suggested alternative: 'remove_reference'
   using cv_value_type = std::remove_reference_t<forward_type>;
                         ^~~
                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: error: 'remove_reference_t' is not a member of 'std'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: note: suggested alternative: 'remove_reference'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
                                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: note: suggested alternative: 'remove_reference'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
                                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:61: error: wrong number of template arguments (1, should be 2)
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:674:49: note: provided for 'template<class T, class U> using apply_cv_t = typename xt::apply_cv::type'
 using apply_cv_t = typename apply_cv<T, U>::type;
                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:23: error: 'cv_value_type' does not name a type; did you mean 'complex_value_type'?
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                       ^~~~~~~~~~~~~
                       complex_value_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:36: error: expected '>' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:36: error: expected '(' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                    ^
                                    (
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:37: error: expected primary-expression before '>' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:56: error: 'byte_type' does not name a type; did you mean 'pbuf_type'?
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                        ^~~~~~~~~
                                                        pbuf_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:65: error: expected '>' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:65: error: expected '(' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                 ^
                                                                 (
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:66: error: expected primary-expression before '>' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:77: error: expected ')' before ';' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                             ^
                                                                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:77: error: expected ')' before ';' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                             ^
                                                                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<!is_complex<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<!is_complex<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:22: error: expected initializer before '<' token
   -> std::enable_if_t<!is_complex<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:34: error: 'enable_if_t' in namespace 'std' does not name a template type
 auto forward_real(T&& v) -> std::enable_if_t<
                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:29: note: suggested alternative: 'enable_if'
 auto forward_real(T&& v) -> std::enable_if_t<
                             ^~~
                             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:45: error: expected initializer before '<' token
 auto forward_real(T&& v) -> std::enable_if_t<
                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<!is_complex<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<!is_complex<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:22: error: expected initializer before '<' token
   -> std::enable_if_t<!is_complex<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:34: error: 'enable_if_t' in namespace 'std' does not name a template type
 auto forward_imag(T&& v) -> std::enable_if_t<
                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:29: note: suggested alternative: 'enable_if'
 auto forward_imag(T&& v) -> std::enable_if_t<
                             ^~~
                             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:45: error: expected initializer before '<' token
 auto forward_imag(T&& v) -> std::enable_if_t<
                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: error: 'remove_cv_t' is not a member of 'std'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:40: error: wrong number of template arguments (1, should be 2)
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                                        ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:41: error: expected unqualified-id before ',' token
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: error: 'remove_cv_t' is not a member of 'std'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:40: error: wrong number of template arguments (1, should be 2)
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                                        ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:41: error: expected unqualified-id before ',' token
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:883:55: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(std::true_type, const TF& tf, const FF&) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:883:55: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:888:56: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(std::false_type, const TF&, const FF& ff) {
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:888:56: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:893:42: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(const TF& tf, const FF& ff) {
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:893:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:21: error: 'enable_if_t' in namespace 'std' does not name a template type
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                     ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:16: note: suggested alternative: 'enable_if'
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                ^~~
                enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:32: error: expected '>' before '<' token
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:29: error: 'enable_if_t' in namespace 'std' does not name a template type
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:24: note: suggested alternative: 'enable_if'
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                        ^~~
                        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:40: error: expected '>' before '<' token
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                                        ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp: In function 'constexpr xt::layout_type xt::detail::compute_layout_impl(xt::layout_type, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:61:21: error: 'underlying_type_t' in namespace 'std' does not name a template type
   using type = std::underlying_type_t<layout_type>;
                     ^~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:61:16: note: suggested alternative: 'underlying_type'
   using type = std::underlying_type_t<layout_type>;
                ^~~
                underlying_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: error: 'type' was not declared in this scope
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: note: suggested alternative: 'wctype'
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
                                  wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:21: error: expected primary-expression before '(' token
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: error: 'type' does not name a type; did you mean 'wctype'?
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
                                  wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:59: error: 'type' does not name a type; did you mean 'wctype'?
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                                           ^~~~
                                                           wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:63:1: error: body of 'constexpr' function 'constexpr xt::layout_type xt::detail::compute_layout_impl(xt::layout_type, xt::layout_type)' not a return-statement
 }
 ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:133:33: error: 'conditional_t' in namespace 'std' does not name a template type
   using xexpression_type = std::conditional_t<is_const, const E, E>;
                                 ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:133:28: note: suggested alternative: 'conditional'
   using xexpression_type = std::conditional_t<is_const, const E, E>;
                            ^~~
                            conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:135:31: error: 'xexpression_type' has not been declared
   using value_type = typename xexpression_type::value_type;
                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:137:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:137:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:140:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:140:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:143:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:144:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:146:31: error: 'xexpression_type' has not been declared
   using shape_type = typename xexpression_type::shape_type;
                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:36: error: 'shape_type' was not declared in this scope
   using index_type = xindex_type_t<shape_type>;
                                    ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:36: note: suggested alternative: 'self_type'
   using index_type = xindex_type_t<shape_type>;
                                    ^~~~~~~~~~
                                    self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:46: error: template argument 1 is invalid
   using index_type = xindex_type_t<shape_type>;
                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:150:36: error: expected ')' before '*' token
   xindexed_stepper(xexpression_type* e,
                   ~                ^
                                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:154:3: error: 'reference' does not name a type
   reference operator*() const;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:156:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:156:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:157:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:157:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:158:14: error: 'size_type' has not been declared
   void reset(size_type dim);
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:159:19: error: 'size_type' has not been declared
   void reset_back(size_type dim);
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:167:3: error: 'xexpression_type' does not name a type
   xexpression_type* p_e;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:168:3: error: 'index_type' does not name a type; did you mean 'xindex_type_t'?
   index_type m_index;
   ^~~~~~~~~~
   xindex_type_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:169:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type m_offset;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:267:36: error: 'trivial_begin' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_begin(C& c) noexcept {
                                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:267:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:272:34: error: 'trivial_end' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_end(C& c) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:272:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:277:42: error: 'trivial_begin' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_begin(const C& c) noexcept {
                                          ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:277:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:282:40: error: 'trivial_end' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_end(const C& c) noexcept {
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:282:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: ISO C++ forbids declaration of 'xindexed_stepper' with no type [-fpermissive]
 inline xindexed_stepper<C, is_const>::xindexed_stepper(xexpression_type* e,
                                                        ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: 'int xt::xindexed_stepper<E, is_const>::xindexed_stepper' is not a static data member of 'class xt::xindexed_stepper<E, is_const>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: template definition of non-template 'int xt::xindexed_stepper<E, is_const>::xindexed_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: 'xexpression_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:74: error: 'e' was not declared in this scope
 inline xindexed_stepper<C, is_const>::xindexed_stepper(xexpression_type* e,
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:461:56: error: 'size_type' was not declared in this scope
                                                        size_type offset,
                                                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:461:56: note: suggested alternative: 'self_type'
                                                        size_type offset,
                                                        ^~~~~~~~~
                                                        self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:462:56: error: expected primary-expression before 'bool'
                                                        bool end) noexcept
                                                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:472:65: error: 'reference' does not name a type
 inline auto xindexed_stepper<C, is_const>::operator*() const -> reference {
                                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: error: variable or field 'step' declared void
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:64: error: 'size_type' was not declared in this scope
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:64: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                                ^~~~~~~~~
                                                                size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: error: variable or field 'step_back' declared void
 inline void xindexed_stepper<C, is_const>::step_back(size_type dim,
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step_back(size_type dim,
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:485:54: error: 'size_type' was not declared in this scope
                                                      size_type n) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:485:54: note: suggested alternative: 'size_t'
                                                      size_type n) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: error: variable or field 'reset' declared void
 inline void xindexed_stepper<C, is_const>::reset(size_type dim) {
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::reset(size_type dim) {
                                                  ^~~~~~~~~
                                                  size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: error: variable or field 'reset_back' declared void
 inline void xindexed_stepper<C, is_const>::reset_back(size_type dim) {
                                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::reset_back(size_type dim) {
                                                       ^~~~~~~~~
                                                       size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'void xt::xindexed_stepper<E, is_const>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:13: error: 'm_index' was not declared in this scope
   std::fill(m_index.begin(), m_index.end(), size_type(0));
             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:13: note: suggested alternative: 'rindex'
   std::fill(m_index.begin(), m_index.end(), size_type(0));
             ^~~~~~~
             rindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:45: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
   std::fill(m_index.begin(), m_index.end(), size_type(0));
                                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:45: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'void xt::xindexed_stepper<E, is_const>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:3: error: 'm_index' was not declared in this scope
   m_index = p_e->shape();
   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:3: note: suggested alternative: 'rindex'
   m_index = p_e->shape();
   ^~~~~~~
   rindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:13: error: 'p_e' was not declared in this scope
   m_index = p_e->shape();
             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:13: note: suggested alternative: 'pipe'
   m_index = p_e->shape();
             ^~~
             pipe
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'bool xt::xindexed_stepper<E, is_const>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:10: error: 'p_e' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
          ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:10: note: suggested alternative: 'pipe'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
          ^~~
          pipe
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:28: error: 'm_index' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:28: note: suggested alternative: 'rindex'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                            ^~~~~~~
                            rindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:54: error: 'm_offset' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:54: note: suggested alternative: '_off_t'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
                                                      _off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In constructor 'xt::xiterator<It, S, L>::xiterator(It, xt::xiterator<It, S, L>::shape_param_type, bool)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:17: error: 'forward_sequence' was not declared in this scope
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                 ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:17: note: suggested alternative: 'make_sequence'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                 ^~~~~~~~~~~~~~~~
                 make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:44: error: expected primary-expression before ',' token
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:46: error: expected primary-expression before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                              ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:45: error: expected ':' before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                             ^~~~~~
                                             :
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:46: error: expected primary-expression before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                              ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:579:29: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                    [](const auto& v) { return v - 1; });
                             ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: error: 'decay_t' is not a member of 'std'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: note: suggested alternative: 'decay'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: note: suggested alternative: 'decay'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:53: error: template argument 1 is invalid
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:54: error: template argument 2 is invalid
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                      ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:56: error: expected unqualified-id before '>' token
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: error: 'decay_t' is not a member of 'std'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: note: suggested alternative: 'decay'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: note: suggested alternative: 'decay'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:59: error: template argument 1 is invalid
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:60: error: template argument 2 is invalid
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                            ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:62: error: expected unqualified-id before '>' token
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: error: 'enable_if_t' is not a member of 'std'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: note: suggested alternative: 'enable_if'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
                                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: error: 'enable_if_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: note: suggested alternative: 'enable_if'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
                                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:64: error: type/value mismatch at argument 2 in template parameter list for 'template<class E, class enable> struct xt::detail::xvalue_type_impl'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                                                ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:64: note:   expected a type, got '(<expression error> < xt::is_xexpression<E>::value)'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:69: error: expected unqualified-id before '>' token
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                                                     ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:39:33: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type       = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:39:28: note: suggested alternative: 'decay'
   using value_type       = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:52:32: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type      = std::decay_t<CT>;
                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:52:27: note: suggested alternative: 'decay'
   using value_type      = std::decay_t<CT>;
                           ^~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:53:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using reference       = value_type&;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:54:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_reference = const value_type&;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:54:32: error: expected ';' before 'value_type'
   using const_reference = const value_type&;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:55:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using pointer         = value_type*;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:56:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_pointer   = const value_type*;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:56:32: error: expected ';' before 'value_type'
   using const_pointer   = const value_type*;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:94:34: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using iterator               = value_type*;
                                  ^~~~~~~~~~
                                  xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:95:40: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_iterator         = const value_type*;
                                        ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:95:39: error: expected ';' before 'value_type'
   using const_iterator         = const value_type*;
                                       ^~~~~~~~~~~
                                       ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:96:64: error: type/value mismatch at argument 1 in template parameter list for 'template<class _Iterator> class std::reverse_iterator'
   using reverse_iterator       = std::reverse_iterator<iterator>;
                                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:96:64: note:   expected a type, got 'iterator'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:56: error: 'const_iterator' was not declared in this scope
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:56: note: suggested alternative: 'xconst_iterable'
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                        ^~~~~~~~~~~~~~
                                                        xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:70: error: template argument 1 is invalid
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:113:3: error: 'reference' does not name a type
   reference operator()(Args...) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:114:3: error: 'reference' does not name a type
   reference operator[](const xindex&) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:115:3: error: 'reference' does not name a type
   reference operator[](size_type) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:118:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args...) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:119:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex&) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:120:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:123:3: error: 'reference' does not name a type
   reference element(It, It) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:126:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It, It) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:135:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator begin() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:135:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:137:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator end() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:137:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:140:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator begin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:140:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:142:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator end() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:142:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:144:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator cbegin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:144:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:146:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator cend() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:146:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:149:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator rbegin() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:149:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:151:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator rend() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:151:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:154:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:154:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:156:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:156:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:158:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:158:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:160:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:160:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:191:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator storage_begin() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:191:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:193:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator storage_end() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:193:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:196:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_begin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:196:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:198:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_end() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:198:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:200:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_cbegin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:200:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:202:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_cend() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:202:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:205:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator storage_rbegin() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:205:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:207:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator storage_rend() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:207:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:210:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:210:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:212:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:212:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:214:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:214:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:216:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:216:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:234:3: error: 'reference' does not name a type
   reference data_element(size_type i) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:235:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference data_element(size_type i) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:260:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:260:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:262:31: error: 'container_type' has not been declared
   using value_type = typename container_type::value_type;
                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:263:27: error: 'conditional_t' in namespace 'std' does not name a template type
   using reference  = std::conditional_t<is_const,
                           ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:263:22: note: suggested alternative: 'conditional'
   using reference  = std::conditional_t<is_const,
                      ^~~
                      conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:266:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:266:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:269:36: error: 'container_type' has not been declared
   using size_type       = typename container_type::size_type;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:270:36: error: 'container_type' has not been declared
   using difference_type = typename container_type::difference_type;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:272:33: error: expected ')' before '*' token
   xscalar_stepper(container_type* c) noexcept;
                  ~              ^
                                 )
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:274:3: error: 'reference' does not name a type
   reference operator*() const noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:276:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1) noexcept;
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:276:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1) noexcept;
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:277:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1) noexcept;
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:277:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1) noexcept;
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:278:14: error: 'size_type' has not been declared
   void reset(size_type dim) noexcept;
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:279:19: error: 'size_type' has not been declared
   void reset_back(size_type dim) noexcept;
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:287:3: error: 'container_type' does not name a type; did you mean 'xvalue_type'?
   container_type* p_c;
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:307:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:307:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:309:31: error: 'container_type' has not been declared
   using value_type = typename container_type::value_type;
                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:310:27: error: 'conditional_t' in namespace 'std' does not name a template type
   using reference  = std::conditional_t<is_const,
                           ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:310:22: note: suggested alternative: 'conditional'
   using reference  = std::conditional_t<is_const,
                      ^~~
                      conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:313:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:313:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:316:38: error: 'container_type' has not been declared
   using difference_type   = typename container_type::difference_type;
                                      ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:319:42: error: expected ')' before '*' token
   explicit xdummy_iterator(container_type* c) noexcept;
                           ~              ^
                                          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:324:3: error: 'reference' does not name a type
   reference operator*() const noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:329:3: error: 'container_type' does not name a type; did you mean 'xvalue_type'?
   container_type* p_c;
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:399:58: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator()(Args...) noexcept -> reference {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:404:64: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator[](const xindex&) noexcept -> reference {
                                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:409:60: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator[](size_type) noexcept -> reference {
                                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:415:64: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::operator()(Args...) const noexcept -> const_reference {
                                                                ^~~~~~~~~~~~~~~
                                                                xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:421:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:427:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:433:54: error: 'reference' does not name a type
 inline auto xscalar<CT>::element(It, It) noexcept -> reference {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:439:60: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::element(It, It) const noexcept -> const_reference {
                                                            ^~~~~~~~~~~~~~~
                                                            xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:457:46: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::begin() noexcept -> iterator {
                                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:457:46: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:463:44: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::end() noexcept -> iterator {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:463:44: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:469:52: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::begin() const noexcept -> const_iterator {
                                                    ^~~~~~~~~~~~~~
                                                    xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:469:52: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:475:50: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::end() const noexcept -> const_iterator {
                                                  ^~~~~~~~~~~~~~
                                                  xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:475:50: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:481:53: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::cbegin() const noexcept -> const_iterator {
                                                     ^~~~~~~~~~~~~~
                                                     xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:481:53: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:487:51: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::cend() const noexcept -> const_iterator {
                                                   ^~~~~~~~~~~~~~
                                                   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:487:51: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:493:47: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::rbegin() noexcept -> reverse_iterator {
                                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:493:47: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:499:45: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::rend() noexcept -> reverse_iterator {
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:499:45: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:505:53: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::rbegin() const noexcept -> const_reverse_iterator {
                                                     ^~~~~~~~~~~~~~~~~~~~~~
                                                     nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:505:53: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:511:51: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::rend() const noexcept -> const_reverse_iterator {
                                                   ^~~~~~~~~~~~~~~~~~~~~~
                                                   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:511:51: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:517:54: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::crbegin() const noexcept -> const_reverse_iterator {
                                                      ^~~~~~~~~~~~~~~~~~~~~~
                                                      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:517:54: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:523:52: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::crend() const noexcept -> const_reverse_iterator {
                                                    ^~~~~~~~~~~~~~~~~~~~~~
                                                    nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:523:52: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:617:54: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::storage_begin() noexcept -> iterator {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:617:54: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:623:52: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::storage_end() noexcept -> iterator {
                                                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:623:52: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:629:60: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_begin() const noexcept -> const_iterator {
                                                            ^~~~~~~~~~~~~~
                                                            xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:629:60: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:635:58: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_end() const noexcept -> const_iterator {
                                                          ^~~~~~~~~~~~~~
                                                          xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:635:58: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:641:61: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_cbegin() const noexcept -> const_iterator {
                                                             ^~~~~~~~~~~~~~
                                                             xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:641:61: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:647:59: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_cend() const noexcept -> const_iterator {
                                                           ^~~~~~~~~~~~~~
                                                           xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:647:59: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:653:55: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::storage_rbegin() noexcept -> reverse_iterator {
                                                       ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:653:55: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:659:53: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::storage_rend() noexcept -> reverse_iterator {
                                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:659:53: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:666:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:666:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:673:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:673:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:680:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:680:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:687:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:687:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:739:62: error: 'reference' does not name a type
 inline auto xscalar<CT>::data_element(size_type) noexcept -> reference {
                                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:745:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: ISO C++ forbids declaration of 'xscalar_stepper' with no type [-fpermissive]
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: 'int xt::xscalar_stepper<is_const, CT>::xscalar_stepper' is not a static data member of 'class xt::xscalar_stepper<is_const, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: template definition of non-template 'int xt::xscalar_stepper<is_const, CT>::xscalar_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: 'container_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: note: suggested alternative: 'xvalue_type'
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:19: error: 'c' was not declared in this scope
   container_type* c) noexcept
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:770:6: error: 'reference' does not name a type
   -> reference {
      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: error: variable or field 'step' declared void
 inline void xscalar_stepper<is_const, CT>::step(size_type /*dim*/,
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::step(size_type /*dim*/,
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:776:49: error: 'size_type' was not declared in this scope
                                                 size_type /*n*/) noexcept {}
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:776:49: note: suggested alternative: 'size_t'
                                                 size_type /*n*/) noexcept {}
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: error: variable or field 'step_back' declared void
 inline void xscalar_stepper<is_const, CT>::step_back(size_type /*dim*/,
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::step_back(size_type /*dim*/,
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:780:54: error: 'size_type' was not declared in this scope
                                                      size_type /*n*/) noexcept {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:780:54: note: suggested alternative: 'size_t'
                                                      size_type /*n*/) noexcept {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:67: error: variable or field 'reset' declared void
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:50: error: 'size_type' was not declared in this scope
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:50: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                  ^~~~~~~~~
                                                  size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:20: error: variable or field 'reset_back' declared void
   size_type /*dim*/) noexcept {}
                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:3: error: 'size_type' was not declared in this scope
   size_type /*dim*/) noexcept {}
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:3: note: suggested alternative: 'size_t'
   size_type /*dim*/) noexcept {}
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'void xt::xscalar_stepper<is_const, CT>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:792:3: error: 'p_c' was not declared in this scope
   p_c = p_c->stepper_begin(p_c->shap()).pc;
   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:792:3: note: suggested alternative: 'or_c'
   p_c = p_c->stepper_begin(p_c->shap()).pc;
   ^~~
   or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'void xt::xscalar_stepper<is_const, CT>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:797:3: error: 'p_c' was not declared in this scope
   p_c = p_c->stepper_end(p_c->shape(), l).p_c;
   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:797:3: note: suggested alternative: 'or_c'
   p_c = p_c->stepper_end(p_c->shape(), l).p_c;
   ^~~
   or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'bool xt::xscalar_stepper<is_const, CT>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:803:11: error: 'p_c' was not declared in this scope
   return (p_c == rhs.p_c);
           ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:803:11: note: suggested alternative: 'or_c'
   return (p_c == rhs.p_c);
           ^~~
           or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: ISO C++ forbids declaration of 'xdummy_iterator' with no type [-fpermissive]
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: 'int xt::xdummy_iterator<is_const, CT>::xdummy_iterator' is not a static data member of 'class xt::xdummy_iterator<is_const, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: template definition of non-template 'int xt::xdummy_iterator<is_const, CT>::xdummy_iterator'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: 'container_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: note: suggested alternative: 'xvalue_type'
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:19: error: 'c' was not declared in this scope
   container_type* c) noexcept
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:842:6: error: 'reference' does not name a type
   -> reference {
      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'bool xt::xdummy_iterator<is_const, CT>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:849:10: error: 'p_c' was not declared in this scope
   return p_c == rhs.p_c;
          ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:849:10: note: suggested alternative: 'or_c'
   return p_c == rhs.p_c;
          ^~~
          or_c
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:22:44: error: 'compute_size' function uses 'auto' type specifier without trailing return type
 auto compute_size(const shape_type& shape) noexcept;
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:22:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: In function 'It xt::strided_data_end(const C&, It, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:76:32: error: 'decay_t' in namespace 'std' does not name a template type
   using strides_type    = std::decay_t<decltype(c.strides())>;
                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:76:27: note: suggested alternative: 'decay'
   using strides_type    = std::decay_t<decltype(c.strides())>;
                           ^~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:84:41: error: 'strides_type' has not been declared
       std::max(leading_stride, typename strides_type::value_type(1));
                                         ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:94:51: error: 'compute_size' function uses 'auto' type specifier without trailing return type
 inline auto compute_size(const shape_type& shape) noexcept {
                                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:94:51: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: In function 'auto xt::compute_size(const shape_type&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:95:26: error: 'decay_t' in namespace 'std' does not name a template type
   using size_type = std::decay_t<typename shape_type::value_type>;
                          ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:95:21: note: suggested alternative: 'decay'
   using size_type = std::decay_t<typename shape_type::value_type>;
                     ^~~
                     decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:96:56: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
   return std::accumulate(shape.cbegin(), shape.cend(), size_type(1),
                                                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:42: error: 'size_type' was not declared in this scope
                          std::multiplies<size_type>());
                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:42: note: suggested alternative: 'shape_type'
                          std::multiplies<size_type>());
                                          ^~~~~~~~~
                                          shape_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:51: error: template argument 1 is invalid
                          std::multiplies<size_type>());
                                                   ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:37:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<typename Args::size_type...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:37:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<typename Args::size_type...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:54:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<typename Args::difference_type...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:54:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<typename Args::difference_type...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:71:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<xvalue_type_t<Args>...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:71:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<xvalue_type_t<Args>...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:35: error: 'decay_t' in namespace 'std' does not name a template type
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:35: note: suggested alternative: 'decay'
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                   ^~~~~~~
                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:42: error: expected template-argument before '<' token
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:42: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:61: error: template argument 1 is invalid
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: error: 'decay_t' is not a member of 'std'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: note: suggested alternative: 'decay'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
                                                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: note: suggested alternative: 'decay'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
                                                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:69: error: template argument 1 is invalid
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: error: 'decay_t' is not a member of 'std'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: note: suggested alternative: 'decay'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
                                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: note: suggested alternative: 'decay'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
                                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:75: error: template argument 1 is invalid
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:25: error: 'decay_t' is not a member of 'std'
     compute_layout(std::decay_t<CT>::static_layout...);
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:25: note: suggested alternative: 'decay'
     compute_layout(std::decay_t<CT>::static_layout...);
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:35: error: expected primary-expression before '>' token
     compute_layout(std::decay_t<CT>::static_layout...);
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:38: error: '::static_layout' has not been declared
     compute_layout(std::decay_t<CT>::static_layout...);
                                      ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:38: note: suggested alternative: 'static_assert'
     compute_layout(std::decay_t<CT>::static_layout...);
                                      ^~~~~~~~~~~~~
                                      static_assert
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: error: 'decay_t' is not a member of 'std'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: note: suggested alternative: 'decay'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: note: suggested alternative: 'decay'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:26: error: template argument 1 is invalid
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:29: error: expected ';' at end of member declaration
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                             ^~~~~~~~~~~~~~~~~
                                              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:46: error: expected unqualified-id before '...' token
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                                              ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:178:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:179:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:187:30: error: 'size_type' has not been declared
   const_reference operator[](size_type i) const;
                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:230:32: error: 'size_type' has not been declared
   const_reference data_element(size_type i) const;
                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:234:32: error: 'std::index_sequence' has not been declared
   layout_type layout_impl(std::index_sequence<I...>) const noexcept;
                                ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:234:46: error: expected ',' or '...' before '<' token
   layout_type layout_impl(std::index_sequence<I...>) const noexcept;
                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:237:36: error: 'std::index_sequence' has not been declared
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:237:50: error: expected ',' or '...' before '<' token
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:240:44: error: 'std::index_sequence' has not been declared
   const_reference element_access_impl(std::index_sequence<I...>,
                                            ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:240:58: error: expected ',' or '...' before '<' token
   const_reference element_access_impl(std::index_sequence<I...>,
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:245:42: error: 'std::index_sequence' has not been declared
   const_reference data_element_impl(std::index_sequence<I...>,
                                          ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:245:56: error: expected ',' or '...' before '<' token
   const_reference data_element_impl(std::index_sequence<I...>,
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:249:46: error: 'std::index_sequence' has not been declared
   const_stepper build_stepper(Func&& f, std::index_sequence<I...>) const
                                              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:249:60: error: expected ',' or '...' before '<' token
   const_stepper build_stepper(Func&& f, std::index_sequence<I...>) const
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:254:46: error: 'std::index_sequence' has not been declared
                                         std::index_sequence<I...>) const
                                              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:254:60: error: expected ',' or '...' before '<' token
                                         std::index_sequence<I...>) const
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:257:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type compute_dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:331:29: error: 'std::index_sequence' has not been declared
   reference deref_impl(std::index_sequence<I...>) const;
                             ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:331:43: error: expected ',' or '...' before '<' token
   reference deref_impl(std::index_sequence<I...>) const;
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:48: error: template argument 1 is invalid
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:50: error: expected parameter pack before '...'
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                  ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:53: error: template argument 1 is invalid
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:381:29: error: 'std::index_sequence' has not been declared
   reference deref_impl(std::index_sequence<I...>) const;
                             ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:381:43: error: expected ',' or '...' before '<' token
   reference deref_impl(std::index_sequence<I...>) const;
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:28: error: 'decay_t' in namespace 'std' does not name a template type
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:28: note: suggested alternative: 'decay'
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                            ^~~~~~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:35: error: expected template-argument before '<' token
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:35: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:57: error: template argument 1 is invalid
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In constructor 'xt::xfunction<F, R, CT>::xfunction(Func&&, CT ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:414:42: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
     m_shape(make_sequence<shape_type>(0, size_type(1))),
                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:426:62: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xfunction<F, R, CT...>::size() const noexcept -> size_type {
                                                              ^~~~~~~~~
                                                              self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:434:67: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xfunction<F, R, CT...>::dimension() const noexcept -> size_type {
                                                                   ^~~~~~~~~
                                                                   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'const shape_type& xt::xfunction<F, R, CT>::shape() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:445:41: error: there are no arguments to 'compute_dimension' that depend on a template parameter, so a declaration of 'compute_dimension' must be available [-fpermissive]
     m_shape = make_sequence<shape_type>(compute_dimension(), size_type(1));
                                         ^~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:445:62: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
     m_shape = make_sequence<shape_type>(compute_dimension(), size_type(1));
                                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::layout_type xt::xfunction<F, R, CT>::layout() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:457:27: error: 'make_index_sequence' is not a member of 'std'
   return layout_impl(std::make_index_sequence<sizeof...(CT)>());
                           ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:457:62: error: expected primary-expression before ')' token
   return layout_impl(std::make_index_sequence<sizeof...(CT)>());
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_reference xt::xfunction<F, R, CT>::operator()(Args ...) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:481:27: error: 'make_index_sequence' is not a member of 'std'
   return access_impl(std::make_index_sequence<sizeof...(CT)>(),
                           ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:481:62: error: expected primary-expression before ')' token
   return access_impl(std::make_index_sequence<sizeof...(CT)>(),
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:482:34: error: 'size_type' does not name a type; did you mean 'self_type'?
                      static_cast<size_type>(args)...);
                                  ^~~~~~~~~
                                  self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: error: declaration of 'operator[]' as non-function
 inline auto xfunction<F, R, CT...>::operator[](size_type i) const
                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: note: suggested alternative: 'size_t'
 inline auto xfunction<F, R, CT...>::operator[](size_type i) const
                                                ^~~~~~~~~
                                                size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_reference xt::xfunction<F, R, CT>::element(It, It) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:509:35: error: 'make_index_sequence' is not a member of 'std'
   return element_access_impl(std::make_index_sequence<sizeof...(CT)>(), first,
                                   ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:509:70: error: expected primary-expression before ')' token
   return element_access_impl(std::make_index_sequence<sizeof...(CT)>(), first,
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'bool xt::xfunction<F, R, CT>::broadcast_shape(S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:527:32: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [&shape](bool b, auto&& e) {
                                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:528:14: error: request for member 'broadcast_shape' in 'e', which is of non-class type 'int'
     return e.broadcast_shape(shape) && b;
              ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'bool xt::xfunction<F, R, CT>::is_trivial_broadcast(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:542:34: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [&strides](bool b, auto&& e) {
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:543:19: error: request for member 'is_trivial_broadcast' in 'e', which is of non-class type 'int'
     return b && e.is_trivial_broadcast(strides);
                   ^~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_storage_iterator xt::xfunction<F, R, CT>::storage_cbegin() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:567:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](const auto& e) noexcept { return detail::trivial_begin(e); };
                     ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In instantiation of 'constexpr auto xt::detail::trivial_begin(const C&) [with C = int]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:567:71:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:278:12: error: request for member 'storage_begin' in 'c', which is of non-class type 'const int'
   return c.storage_begin();
          ~~^~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:568:33: error: 'make_index_sequence' is not a member of 'std'
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                 ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:568:68: error: expected primary-expression before ')' token
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_storage_iterator xt::xfunction<F, R, CT>::storage_cend() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:575:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](const auto& e) noexcept { return detail::trivial_end(e); };
                     ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In instantiation of 'constexpr auto xt::detail::trivial_end(const C&) [with C = int]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:575:69:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:283:12: error: request for member 'storage_end' in 'c', which is of non-class type 'const int'
   return c.storage_end();
          ~~^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:576:33: error: 'make_index_sequence' is not a member of 'std'
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                 ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:576:68: error: expected primary-expression before ')' token
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:611:27: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [&shape](const auto& e) noexcept { return e.stepper_begin(shape); };
                           ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:611:56: error: request for member 'stepper_begin' in 'e', which is of non-class type 'const int'
   auto f = [&shape](const auto& e) noexcept { return e.stepper_begin(shape); };
                                                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:612:32: error: 'make_index_sequence' is not a member of 'std'
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:612:67: error: expected primary-expression before ')' token
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:620:31: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [&shape, l ](const auto& e) noexcept {
                               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:621:14: error: request for member 'stepper_end' in 'e', which is of non-class type 'const int'
     return e.stepper_end(shape, l);
              ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:623:32: error: 'make_index_sequence' is not a member of 'std'
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:623:67: error: expected primary-expression before ')' token
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::data_element(size_type i) const
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: 'auto xt::xfunction<F, R, CT>::data_element' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::data_element'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: note: suggested alternative: 'self_type'
 inline auto xfunction<F, R, CT...>::data_element(size_type i) const
                                                  ^~~~~~~~~
                                                  self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const noexcept {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: 'xt::layout_type xt::xfunction<F, R, CT>::layout_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: template definition of non-template 'xt::layout_type xt::xfunction<F, R, CT>::layout_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::access_impl(std::index_sequence<I...>,
                                                      ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: 'auto xt::xfunction<F, R, CT>::access_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:642:53: error: expected primary-expression before '...' token
                                                 Args... args) const
                                                     ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>, It first, It last) const -> const_reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: 'auto xt::xfunction<F, R, CT>::element_access_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::element_access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:33: error: expected primary-expression before 'first'
   std::index_sequence<I...>, It first, It last) const -> const_reference {
                                 ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:43: error: expected primary-expression before 'last'
   std::index_sequence<I...>, It first, It last) const -> const_reference {
                                           ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::data_element_impl(std::index_sequence<I...>,
                                                            ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: 'auto xt::xfunction<F, R, CT>::data_element_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::data_element_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:657:55: error: 'size_type' was not declared in this scope
                                                       size_type i) const
                                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:657:55: note: suggested alternative: 'self_type'
                                                       size_type i) const
                                                       ^~~~~~~~~
                                                       self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:665:18: error: 'std::index_sequence' has not been declared
   Func&& f, std::index_sequence<I...>) const noexcept -> const_stepper {
                  ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:665:32: error: expected ',' or '...' before '<' token
   Func&& f, std::index_sequence<I...>) const noexcept -> const_stepper {
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:672:18: error: 'std::index_sequence' has not been declared
   Func&& f, std::index_sequence<I...>) const noexcept
                  ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:672:32: error: expected ',' or '...' before '<' token
   Func&& f, std::index_sequence<I...>) const noexcept
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:679:6: error: 'size_type' does not name a type; did you mean 'self_type'?
   -> size_type {
      ^~~~~~~~~
      self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::self_type& xt::xfunction_iterator<F, R, CT>::operator++()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:698:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { ++it; };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::self_type& xt::xfunction_iterator<F, R, CT>::operator--()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:712:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { return --it; };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::reference xt::xfunction_iterator<F, R, CT>::operator*() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:726:26: error: 'make_index_sequence' is not a member of 'std'
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                          ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:726:61: error: expected primary-expression before ')' token
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const -> reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: 'auto xt::xfunction_iterator<F, R, CT>::deref_impl' is not a static data member of 'class xt::xfunction_iterator<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: template definition of non-template 'auto xt::xfunction_iterator<F, R, CT>::deref_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::step(xt::xfunction_stepper<F, R, CT>::size_type, xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:765:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim, n](auto& it) { it.step(dim, n); };
                     ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:765:36: error: request for member 'step' in 'it', which is of non-class type 'int'
   auto f = [dim, n](auto& it) { it.step(dim, n); };
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::step_back(xt::xfunction_stepper<F, R, CT>::size_type, xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:772:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim, n](auto& it) { it.step_back(dim, n); };
                     ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:772:36: error: request for member 'step_back' in 'it', which is of non-class type 'int'
   auto f = [dim, n](auto& it) { it.step_back(dim, n); };
                                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::reset(xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:778:18: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim](auto& it) { it.reset(dim); };
                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:778:33: error: request for member 'reset' in 'it', which is of non-class type 'int'
   auto f = [dim](auto& it) { it.reset(dim); };
                                 ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::reset_back(xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:784:18: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim](auto& it) { it.reset_back(dim); };
                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:784:33: error: request for member 'reset_back' in 'it', which is of non-class type 'int'
   auto f = [dim](auto& it) { it.reset_back(dim); };
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:790:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { it.to_begin(); };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:790:30: error: request for member 'to_begin' in 'it', which is of non-class type 'int'
   auto f = [](auto& it) { it.to_begin(); };
                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:796:16: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [l](auto& it) { it.to_end(l); };
                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:796:31: error: request for member 'to_end' in 'it', which is of non-class type 'int'
   auto f = [l](auto& it) { it.to_end(l); };
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_stepper<F, R, CT>::reference xt::xfunction_stepper<F, R, CT>::operator*() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:802:26: error: 'make_index_sequence' is not a member of 'std'
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                          ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:802:61: error: expected primary-expression before ')' token
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const -> reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: 'auto xt::xfunction_stepper<F, R, CT>::deref_impl' is not a static data member of 'class xt::xfunction_stepper<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: template definition of non-template 'auto xt::xfunction_stepper<F, R, CT>::deref_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: 'index_sequence' is not a member of 'std'
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:46:38: error: 'make_xfunction' function uses 'auto' type specifier without trailing return type
 inline auto make_xfunction(E&&... e) noexcept {
                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:46:38: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'auto xt::detail::make_xfunction(E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: error: 'decay_t' is not a member of 'std'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:60: error: template argument 1 is invalid
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:61: error: expected parameter pack before '...'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:61: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:48:33: error: 'functor_type' has not been declared
   using result_type  = typename functor_type::result_type;
                                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:26: error: 'functor_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:26: note: suggested alternative: 'forward_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
                          forward_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:40: error: 'result_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:40: note: suggested alternative: 'layout_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
                                        layout_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:75: error: template argument 1 is invalid
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:75: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: error: 'decay_t' is not a member of 'std'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: note: suggested alternative: 'decay'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
                                          decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: note: suggested alternative: 'decay'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
                                          decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:51: error: template argument 1 is invalid
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:52: error: expected parameter pack before '...'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                    ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:52: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:55: error: wrong number of template arguments (1, should be at least 2)
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                       ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:85:7: note: provided for 'template<class F, class R, class ... CT> class xt::xfunction'
 class xfunction;
       ^~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:70:17: error: 'enable_if_t' in namespace 'std' does not name a template type
   typename std::enable_if_t<has_xexpression<std::decay_t<E>...>::value,
                 ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:70:17: note: suggested alternative: 'enable_if'
   typename std::enable_if_t<has_xexpression<std::decay_t<E>...>::value,
                 ^~~~~~~~~~~
                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<detail::identity, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<detail::identity, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<detail::identity, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::negate, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::negate, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::negate, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::plus, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::plus, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::plus, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::minus, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::minus, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::minus, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::divides, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::divides, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::divides, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_not, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_not, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_not, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::less, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::less, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::less, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::greater, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::greater, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::greater, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::any(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:466:22: error: 'decay_t' in namespace 'std' does not name a template type
   using xtype = std::decay_t<E>;
                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:466:17: note: suggested alternative: 'decay'
   using xtype = std::decay_t<E>;
                 ^~~
                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:467:7: error: 'xtype' has not been declared
   if (xtype::static_layout == layout_type::row_major ||
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:468:7: error: 'xtype' has not been declared
       xtype::static_layout == layout_type::column_major) {
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::any(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::all(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:490:22: error: 'decay_t' in namespace 'std' does not name a template type
   using xtype = std::decay_t<E>;
                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:490:17: note: suggested alternative: 'decay'
   using xtype = std::decay_t<E>;
                 ^~~
                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:491:7: error: 'xtype' has not been declared
   if (xtype::static_layout == layout_type::row_major ||
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:492:7: error: 'xtype' has not been declared
       xtype::static_layout == layout_type::column_major) {
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::all(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:32:35: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 auto broadcast(E&& e, const S& s) noexcept;
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:32:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:39:40: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 auto broadcast(E&& e, const I (&s)[L]) noexcept;
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:39:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:51:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:51:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:53:61: error: template argument 1 is invalid
     promote_shape_t<typename xexpression_type::shape_type, X>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:54:34: error: 'xexpression_type' has not been declared
   using const_stepper = typename xexpression_type::const_stepper;
                                  ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:55:25: error: 'const_stepper' does not name a type; did you mean 'constexpr'?
   using stepper       = const_stepper;
                         ^~~~~~~~~~~~~
                         constexpr
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:76:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:76:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:78:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:79:36: error: 'xexpression_type' has not been declared
   using reference       = typename xexpression_type::reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:80:36: error: 'xexpression_type' has not been declared
   using const_reference = typename xexpression_type::const_reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:81:36: error: 'xexpression_type' has not been declared
   using pointer         = typename xexpression_type::pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:82:36: error: 'xexpression_type' has not been declared
   using const_pointer   = typename xexpression_type::const_pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:83:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:84:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:93:48: error: 'xexpression_type' has not been declared
   static constexpr layout_type static_layout = xexpression_type::static_layout;
                                                ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:101:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:102:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:107:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:108:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:109:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:112:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:145:42: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 inline auto broadcast(E&& e, const S& s) noexcept {
                                          ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:145:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In function 'auto xt::broadcast(E&&, const S&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:45: error: 'forward_sequence' was not declared in this scope
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:45: note: suggested alternative: 'make_sequence'
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
                                             make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:24: error: expected primary-expression before '(' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:72: error: expected primary-expression before '>' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:161:47: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 inline auto broadcast(E&& e, const I (&s)[L]) noexcept {
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:161:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In function 'auto xt::broadcast(E&&, const I (&)[L])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:45: error: 'forward_sequence' was not declared in this scope
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:45: note: suggested alternative: 'make_sequence'
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
                                             make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:24: error: expected primary-expression before '(' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:72: error: expected primary-expression before '>' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:199:57: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xbroadcast<CT, X>::size() const noexcept -> size_type {
                                                         ^~~~~~~~~
                                                         self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:207:62: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xbroadcast<CT, X>::dimension() const noexcept -> size_type {
                                                              ^~~~~~~~~
                                                              self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:244:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:259:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: error: declaration of 'operator[]' as non-function
 inline auto xbroadcast<CT, X>::operator[](size_type i) const
                                           ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: note: suggested alternative: 'size_t'
 inline auto xbroadcast<CT, X>::operator[](size_type i) const
                                           ^~~~~~~~~
                                           size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:279:62: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xbroadcast<CT, X>::element(It, It last) const -> const_reference {
                                                              ^~~~~~~~~~~~~~~
                                                              xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In member function 'bool xt::xbroadcast<CT, X>::is_trivial_broadcast(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:308:10: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   return dimension() == m_e.dimension() &&
          ^~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:25,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:268:63: error: 'make_xgenerator' function uses 'auto' type specifier without trailing return type
 inline auto make_xgenerator(Functor&& f, const I (&shape)[L]) noexcept {
                                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:268:63: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: In function 'auto xt::detail::make_xgenerator(Functor&&, const I (&)[L])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:41: error: 'forward_sequence' was not declared in this scope
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                         ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:41: note: suggested alternative: 'make_sequence'
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                         ^~~~~~~~~~~~~~~~
                                         make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:14: error: expected primary-expression before '(' token
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:68: error: expected primary-expression before '>' token
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:276:53: error: 'make_xgenerator' function uses 'auto' type specifier without trailing return type
 inline auto make_xgenerator(Functor&& f, S&& shape) noexcept {
                                                     ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:276:53: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: In function 'auto xt::detail::make_xgenerator(Functor&&, S&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: error: 'decay_t' is not a member of 'std'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: note: suggested alternative: 'decay'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
                                                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: note: suggested alternative: 'decay'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
                                                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:68: error: template argument 3 is invalid
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                                    ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:42:27: error: 'ones' function uses 'auto' type specifier without trailing return type
 inline auto ones(S shape) noexcept {
                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:42:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:53:39: error: 'ones' function uses 'auto' type specifier without trailing return type
 inline auto ones(const I (&shape)[L]) noexcept {
                                       ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:53:39: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:67:28: error: 'zeros' function uses 'auto' type specifier without trailing return type
 inline auto zeros(S shape) noexcept {
                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:67:28: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:78:40: error: 'zeros' function uses 'auto' type specifier without trailing return type
 inline auto zeros(const I (&shape)[L]) noexcept {
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:78:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:175:65: error: 'eye' function uses 'auto' type specifier without trailing return type
 inline auto eye(const std::vector<std::size_t>& shape, int k = 0) {
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:175:65: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:190:41: error: 'eye' function uses 'auto' type specifier without trailing return type
 inline auto eye(std::size_t n, int k = 0) {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:190:41: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:204:49: error: 'arange' function uses 'auto' type specifier without trailing return type
 inline auto arange(T start, T stop, T step = 1) noexcept {
                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:204:49: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:219:28: error: 'arange' function uses 'auto' type specifier without trailing return type
 inline auto arange(T stop) noexcept {
                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:219:28: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:236:54: error: 'linspace' function uses 'auto' type specifier without trailing return type
                      bool endpoint           = true) noexcept {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:236:54: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:259:44: error: 'logspace' function uses 'auto' type specifier without trailing return type
                      bool endpoint = true) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:259:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:270:10: error: 'common_type_t' in namespace 'std' does not name a template type
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:270:5: note: suggested alternative: 'common_type'
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
     ^~~
     common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:276:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:282:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:288:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(xindex idx) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:317:10: error: 'common_type_t' in namespace 'std' does not name a template type
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:317:5: note: suggested alternative: 'common_type'
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
     ^~~
     common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:323:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:329:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:335:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(xindex idx) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:349:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:349:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:350:37: error: 'xexpression_type' has not been declared
   using size_type        = typename xexpression_type::size_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:351:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:354:29: error: 'size_type' has not been declared
   repeat_impl(CTA&& source, size_type axis)
                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:358:3: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   value_type operator()(Args... args) const {
   ^~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:365:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:371:3: error: 'size_type' does not name a type; did you mean 'size_t'?
   size_type m_axis;
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In constructor 'xt::detail::repeat_impl<CT>::repeat_impl(CTA&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:355:44: error: class 'xt::detail::repeat_impl<CT>' does not have any field named 'm_axis'
     : m_source(std::forward<CTA>(source)), m_axis(axis) {}
                                            ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:380:35: error: 'xtuple' function uses 'auto' type specifier without trailing return type
 inline auto xtuple(Types&&... args) {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:380:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:401:68: error: 'concatenate' function uses 'auto' type specifier without trailing return type
 inline auto concatenate(std::tuple<CT...>&& t, std::size_t axis = 0) {
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:401:68: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::concatenate(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:52: error: 'decay_t' in namespace 'std' does not name a template type
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:52: note: suggested alternative: 'decay'
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:59: error: expected template-argument before '<' token
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:78: error: template argument 1 is invalid
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:403:3: error: 'shape_type' was not declared in this scope
   shape_type new_shape = forward_sequence<shape_type>(std::get<0>(t).shape());
   ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:403:3: note: suggested alternative: 'xvalue_type'
   shape_type new_shape = forward_sequence<shape_type>(std::get<0>(t).shape());
   ^~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:404:52: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto shape_at_axis   = [&axis](std::size_t prev, auto& arr) -> std::size_t {
                                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:405:23: error: request for member 'shape' in 'arr', which is of non-class type 'int'
     return prev + arr.shape()[axis];
                       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::concatenate(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:407:3: error: 'new_shape' was not declared in this scope
   new_shape[axis] +=
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:407:3: note: suggested alternative: 'check_shape'
   new_shape[axis] +=
   ^~~~~~~~~
   check_shape
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:454:62: error: 'stack' function uses 'auto' type specifier without trailing return type
 inline auto stack(std::tuple<CT...>&& t, std::size_t axis = 0) {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:454:62: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::stack(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:52: error: 'decay_t' in namespace 'std' does not name a template type
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:52: note: suggested alternative: 'decay'
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:59: error: expected template-argument before '<' token
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:78: error: template argument 1 is invalid
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:5: error: 'forward_sequence' was not declared in this scope
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:5: note: suggested alternative: 'make_sequence'
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
     ^~~~~~~~~~~~~~~~
     make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:22: error: 'shape_type' was not declared in this scope
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
                      ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:22: note: suggested alternative: 'xvalue_type'
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
                      ^~~~~~~~~~
                      xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:32: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:32: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:55: error: expected primary-expression before '&&' token
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                       ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:62: error: expression list treated as compound expression in initializer [-fpermissive]
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:13: warning: variable templates only available with -std=c++14 or -std=gnu++14
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
             ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:63: error: expected ';' before 'noexcept'
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                               ^~~~~~~~~
                                                               ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:490:32: error: 'meshgrid' function uses 'auto' type specifier without trailing return type
 inline auto meshgrid(E&&... e) noexcept {
                                ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:490:32: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::meshgrid(E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:31: error: missing template arguments before '(' token
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:37: error: 'make_index_sequence' is not a member of 'std'
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                                     ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:71: error: expected primary-expression before ')' token
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:499:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:499:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:500:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:510:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:540:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:540:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:541:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:547:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:566:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:566:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:567:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:568:37: error: 'xexpression_type' has not been declared
   using size_type        = typename xexpression_type::size_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:577:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:584:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:592:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(It begin, It end) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:600:9: error: 'size_type' does not name a type; did you mean 'size_t'?
   const size_type m_axis;
         ^~~~~~~~~
         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:601:9: error: 'size_type' does not name a type; did you mean 'size_t'?
   const size_type m_shape_at_axis;
         ^~~~~~~~~
         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In constructor 'xt::detail::flip_impl<CT>::flip_impl(CTA&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:573:7: error: class 'xt::detail::flip_impl<CT>' does not have any field named 'm_axis'
       m_axis(axis),
       ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:7: error: class 'xt::detail::flip_impl<CT>' does not have any field named 'm_shape_at_axis'
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
       ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:40: error: 'm_axis' was not declared in this scope
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
                                        ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:40: note: suggested alternative: 'axis'
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
                                        ^~~~~~
                                        axis
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:607:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:607:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:608:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:616:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It end) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:671:44: error: 'diagonal' function uses 'auto' type specifier without trailing return type
                      std::size_t axis_2 = 1) {
                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:671:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::diagonal(E&&, int, std::size_t, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:19: error: 'decay_t' in namespace 'std' does not name a template type
     typename std::decay_t<E>::shape_type>::type;
                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:19: note: suggested alternative: 'decay'
     typename std::decay_t<E>::shape_type>::type;
                   ^~~~~~~
                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:26: error: expected template-argument before '<' token
     typename std::decay_t<E>::shape_type>::type;
                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:26: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:41: error: template argument 1 is invalid
     typename std::decay_t<E>::shape_type>::type;
                                         ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:682:34: error: 'shape_type' was not declared in this scope
   auto ret_shape = make_sequence<shape_type>(dimension - 1, 0);
                                  ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:682:34: note: suggested alternative: 'xvalue_type'
   auto ret_shape = make_sequence<shape_type>(dimension - 1, 0);
                                  ^~~~~~~~~~
                                  xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:720:36: error: 'diag' function uses 'auto' type specifier without trailing return type
 inline auto diag(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:720:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:741:43: error: 'flip' function uses 'auto' type specifier without trailing return type
 inline auto flip(E&& arr, std::size_t axis) {
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:741:43: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:760:36: error: 'tril' function uses 'auto' type specifier without trailing return type
 inline auto tril(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:760:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:782:36: error: 'triu' function uses 'auto' type specifier without trailing return type
 inline auto triu(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:782:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:37:37: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e, X&& axes) noexcept;
                                     ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:37:37: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:40:27: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e) noexcept;
                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:40:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:47:47: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e, const I (&axes)[N]) noexcept;
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:47:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:65:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:65:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:68:35: error: wrong number of template arguments (1, should be 2)
                                  X>::type;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:55:8: note: provided for 'template<class ST, class X> struct xt::xreducer_shape_type'
 struct xreducer_shape_type;
        ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:67:14: error: expected nested-name-specifier
     typename xreducer_shape_type<typename xexpression_type::shape_type,
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  X>::type;
                                  ~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:93:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:93:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:96:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:97:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using reference       = value_type;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:98:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using const_reference = value_type;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:99:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using pointer         = value_type*;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:100:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_pointer   = const value_type*;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:100:32: error: expected ';' before 'value_type'
   using const_pointer   = const value_type*;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:102:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:103:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:118:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:119:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:124:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:125:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:126:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:129:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It first, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:169:44: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e, X&& axes) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:169:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:176:34: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:176:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:193:54: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e, const I (&axes)[N]) noexcept {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:193:54: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In function 'auto xt::reduce(F&&, E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:49: error: 'decay_t' in namespace 'std' does not name a template type
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:49: note: suggested alternative: 'decay'
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                 ^~~~~~~
                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:56: error: expected template-argument before '<' token
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:56: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:73: error: wrong number of template arguments (1, should be 2)
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:57: error: 'axes_type' was not declared in this scope
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:57: note: suggested alternative: 'pbuf_type'
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                         ^~~~~~~~~
                                                         pbuf_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:66: error: template argument 3 is invalid
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:197:23: error: 'forward_sequence' was not declared in this scope
                       forward_sequence<axes_type>(axes));
                       ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:197:23: note: suggested alternative: 'make_sequence'
                       forward_sequence<axes_type>(axes));
                       ^~~~~~~~~~~~~~~~
                       make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: error: 'decay_t' is not a member of 'std'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: note: suggested alternative: 'decay'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: note: suggested alternative: 'decay'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:49: error: template argument 2 is invalid
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:343:58: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xreducer<F, CT, X>::size() const noexcept -> size_type {
                                                          ^~~~~~~~~
                                                          self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:351:63: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xreducer<F, CT, X>::dimension() const noexcept -> size_type {
                                                               ^~~~~~~~~
                                                               self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:387:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:404:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: error: declaration of 'operator[]' as non-function
 inline auto xreducer<F, CT, X>::operator[](size_type i) const
                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: note: suggested alternative: 'size_t'
 inline auto xreducer<F, CT, X>::operator[](size_type i) const
                                            ^~~~~~~~~
                                            size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:425:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In member function 'xt::xreducer<F, CT, X>::const_stepper xt::xreducer<F, CT, X>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:467:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:467:3: note: suggested alternative: 'self_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:468:31: error: 'offset' was not declared in this scope
   return const_stepper(*this, offset);
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:468:31: note: suggested alternative: 'off_t'
   return const_stepper(*this, offset);
                               ^~~~~~
                               off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In member function 'xt::xreducer<F, CT, X>::const_stepper xt::xreducer<F, CT, X>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:475:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:475:3: note: suggested alternative: 'self_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:476:31: error: 'offset' was not declared in this scope
   return const_stepper(*this, offset, true, l);
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:476:31: note: suggested alternative: 'off_t'
   return const_stepper(*this, offset, true, l);
                               ^~~~~~
                               off_t
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:36: note: suggested alternative: 'xfunction_type'
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:60: error: expected initializer before '<' token
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fabs_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fabs_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fabs_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:387:35: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:387:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:389:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:393:25: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:393:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:395:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:406:45: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:406:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:408:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:423:35: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:423:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:425:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:429:25: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:429:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:431:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:442:45: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:442:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:444:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:470:16: error: 'enable_if_t' in namespace 'std' does not name a template type
 constexpr std::enable_if_t<std::is_signed<T>::value, T> sign_impl(T x) {
                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:470:11: note: suggested alternative: 'enable_if'
 constexpr std::enable_if_t<std::is_signed<T>::value, T> sign_impl(T x) {
           ^~~
           enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:476:13: error: 'enable_if_t' in namespace 'std' does not name a template type
 inline std::enable_if_t<xt::detail::is_complex<T>::value, T> sign_impl(T x) {
             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:476:8: note: suggested alternative: 'enable_if'
 inline std::enable_if_t<xt::detail::is_complex<T>::value, T> sign_impl(T x) {
        ^~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:482:16: error: 'enable_if_t' in namespace 'std' does not name a template type
 constexpr std::enable_if_t<std::is_unsigned<T>::value, T> sign_impl(T x) {
                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:482:11: note: suggested alternative: 'enable_if'
 constexpr std::enable_if_t<std::is_unsigned<T>::value, T> sign_impl(T x) {
           ^~~
           enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In member function 'constexpr T xt::math::sign_fun<T>::operator()(const T&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:492:61: error: 'sign_impl' is not a member of 'xt::math::detail'
   constexpr T operator()(const T& x) const { return detail::sign_impl(x); }
                                                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sign_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sign_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sign_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:36: note: suggested alternative: 'xfunction_type'
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:60: error: expected initializer before '<' token
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::exp2_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::exp2_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::exp2_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::expm1_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::expm1_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::expm1_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:36: note: suggested alternative: 'xfunction_type'
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:60: error: expected initializer before '<' token
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log10_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log10_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log10_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log2_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log2_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log2_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log1p_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log1p_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log1p_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:36: note: suggested alternative: 'xfunction_type'
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:60: error: expected initializer before '<' token
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:36: note: suggested alternative: 'xfunction_type'
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:60: error: expected initializer before '<' token
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:36: note: suggested alternative: 'xfunction_type'
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:60: error: expected initializer before '<' token
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::asin_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::asin_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::asin_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::acos_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::acos_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::acos_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atan_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atan_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atan_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sinh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sinh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sinh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::cosh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::cosh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::cosh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::tanh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::tanh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::tanh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::asinh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::asinh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::asinh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::acosh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::acosh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::acosh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atanh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atanh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atanh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:36: note: suggested alternative: 'xfunction_type'
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:60: error: expected initializer before '<' token
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::erfc_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::erfc_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::erfc_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::ceil_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::ceil_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::ceil_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::floor_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::floor_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::floor_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::trunc_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::trunc_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::trunc_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::round_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::round_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::round_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::rint_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::rint_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::rint_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isinf_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isinf_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isinf_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isnan_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isnan_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isnan_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:40: error: 'std::index_sequence' has not been declared
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:54: error: expected ',' or '...' before '<' token
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:61: error: 'get_functor' function uses 'auto' type specifier without trailing return type
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:61: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1138:65: error: 'make_xfunction' function uses 'auto' type specifier without trailing return type
 inline auto make_xfunction(std::tuple<A...>&& f_args, E&&... e) noexcept {
                                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1138:65: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::detail::make_xfunction(std::tuple<_Args2 ...>&&, E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: error: 'decay_t' is not a member of 'std'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:60: error: template argument 1 is invalid
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:61: error: expected parameter pack before '...'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:61: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1140:33: error: 'functor_type' has not been declared
   using result_type  = typename functor_type::result_type;
                                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:26: error: 'functor_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:26: note: suggested alternative: 'xfunction_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
                          xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:40: error: 'result_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:40: note: suggested alternative: 'layout_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
                                        layout_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:75: error: template argument 1 is invalid
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:75: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1144:36: error: 'make_index_sequence' is not a member of 'std'
                               std::make_index_sequence<sizeof...(A)>{});
                                    ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1144:69: error: expected primary-expression before '{' token
                               std::make_index_sequence<sizeof...(A)>{});
                                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1189:45: error: 'isclose' function uses 'auto' type specifier without trailing return type
                     bool equal_nan = false) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1189:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1212:43: error: 'allclose' function uses 'auto' type specifier without trailing return type
                      double atol = 1e-08) noexcept {
                                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1212:43: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1236:34: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e, X&& axes) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1236:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1238:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1242:24: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e) noexcept {
                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1242:24: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1244:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1255:44: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e, const I (&axes)[N]) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1255:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1257:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1272:35: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1272:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1274:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1278:25: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1278:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1280:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1291:45: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1291:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1293:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1308:35: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1308:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1309:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1309:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1316:25: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1316:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1317:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1317:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1332:45: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1332:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1333:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1333:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:180:37: error: 'conditional_t' in namespace 'std' does not name a template type
   using select_iterator_impl = std::conditional_t<L == static_layout, It1, It2>;
                                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:180:32: note: suggested alternative: 'conditional'
   using select_iterator_impl = std::conditional_t<L == static_layout, It1, It2>;
                                ^~~
                                conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:184:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L, storage_iterator, layout_iterator<L>>;
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:187:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L, const_storage_iterator, const_layout_iterator<L>>;
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:190:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L,
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:195:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L,
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:199:34: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   using iterator               = select_iterator<DL>;
                                  ^~~~~~~~~~~~~~~
                                  get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:200:34: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   using const_iterator         = select_const_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~
                                  xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:201:34: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   using reverse_iterator       = select_reverse_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
                                  nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:202:34: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   using const_reverse_iterator = select_const_reverse_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:205:3: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   select_iterator<L> begin() noexcept;
   ^~~~~~~~~~~~~~~
   get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:207:3: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   select_iterator<L> end() noexcept;
   ^~~~~~~~~~~~~~~
   get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:210:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> begin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:212:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> end() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:214:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> cbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:216:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> cend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:219:3: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   select_reverse_iterator<L> rbegin() noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:221:3: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   select_reverse_iterator<L> rend() noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:224:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:226:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:228:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:230:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:662:48: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
 inline auto xcontainer<D>::begin() noexcept -> select_iterator<L> {
                                                ^~~~~~~~~~~~~~~
                                                get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:662:63: error: expected initializer before '<' token
 inline auto xcontainer<D>::begin() noexcept -> select_iterator<L> {
                                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:671:46: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
 inline auto xcontainer<D>::end() noexcept -> select_iterator<L> {
                                              ^~~~~~~~~~~~~~~
                                              get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:671:61: error: expected initializer before '<' token
 inline auto xcontainer<D>::end() noexcept -> select_iterator<L> {
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:680:54: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::begin() const noexcept -> select_const_iterator<L> {
                                                      ^~~~~~~~~~~~~~~~~~~~~
                                                      xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:680:75: error: expected initializer before '<' token
 inline auto xcontainer<D>::begin() const noexcept -> select_const_iterator<L> {
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:686:52: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::end() const noexcept -> select_const_iterator<L> {
                                                    ^~~~~~~~~~~~~~~~~~~~~
                                                    xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:686:73: error: expected initializer before '<' token
 inline auto xcontainer<D>::end() const noexcept -> select_const_iterator<L> {
                                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:692:55: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::cbegin() const noexcept -> select_const_iterator<L> {
                                                       ^~~~~~~~~~~~~~~~~~~~~
                                                       xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:692:76: error: expected initializer before '<' token
 inline auto xcontainer<D>::cbegin() const noexcept -> select_const_iterator<L> {
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:701:53: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::cend() const noexcept -> select_const_iterator<L> {
                                                     ^~~~~~~~~~~~~~~~~~~~~
                                                     xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:701:74: error: expected initializer before '<' token
 inline auto xcontainer<D>::cend() const noexcept -> select_const_iterator<L> {
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:710:49: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xcontainer<D>::rbegin() noexcept -> select_reverse_iterator<L> {
                                                 ^~~~~~~~~~~~~~~~~~~~~~~
                                                 nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:710:72: error: expected initializer before '<' token
 inline auto xcontainer<D>::rbegin() noexcept -> select_reverse_iterator<L> {
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:719:47: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xcontainer<D>::rend() noexcept -> select_reverse_iterator<L> {
                                               ^~~~~~~~~~~~~~~~~~~~~~~
                                               nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:719:70: error: expected initializer before '<' token
 inline auto xcontainer<D>::rend() noexcept -> select_reverse_iterator<L> {
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:729:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:729:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:736:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:736:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:743:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:743:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:753:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:753:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: In member function 'void xt::xstrided_container<D>::reshape(const S&, bool)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:15: error: 'forward_sequence' was not declared in this scope
     m_shape = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:15: note: suggested alternative: 'make_sequence'
     m_shape = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
               make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:42: error: expected primary-expression before '>' token
     m_shape = forward_sequence<shape_type>(shape);
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: In member function 'void xt::xstrided_container<D>::reshape(const S&, const strides_type&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:15: error: 'forward_sequence' was not declared in this scope
   m_shape   = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:15: note: suggested alternative: 'make_sequence'
   m_shape   = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
               make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:42: error: expected primary-expression before '>' token
   m_shape   = forward_sequence<shape_type>(shape);
                                          ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:15,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xassign.hpp: In function 'void xt::scalar_computed_assign(xt::xexpression<E>&, const E2&, F&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xassign.hpp:163:33: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                  [e2, &f](const auto& v) { return f(v, e2); });
                                 ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator+=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:237:67: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::plus<>());
                                                                   ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:167:12: note: provided for 'template<class _Tp> struct std::plus'
     struct plus : public binary_function<_Tp, _Tp, _Tp>
            ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator-=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:249:68: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::minus<>());
                                                                    ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:177:12: note: provided for 'template<class _Tp> struct std::minus'
     struct minus : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator*=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:261:73: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::multiplies<>());
                                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:187:12: note: provided for 'template<class _Tp> struct std::multiplies'
     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator/=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:273:70: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::divides<>());
                                                                      ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:197:12: note: provided for 'template<class _Tp> struct std::divides'
     struct divides : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::xview_semantic<D>::derived_type& xt::xview_semantic<D>::scalar_computed_assign(const E&, F&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:540:32: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                  [e, &f](const auto& v) { return f(v, e); });
                                ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp: In static member function 'static xt::xarray_container<EC, L, SC> xt::xarray_container<EC, L, SC>::from_shape(S&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:22: error: 'forward_sequence' was not declared in this scope
   shape_type shape = forward_sequence<shape_type>(s);
                      ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:22: note: suggested alternative: 'make_sequence'
   shape_type shape = forward_sequence<shape_type>(s);
                      ^~~~~~~~~~~~~~~~
                      make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:49: error: expected primary-expression before '>' token
   shape_type shape = forward_sequence<shape_type>(s);
                                                 ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:27:19: error: 'xnone' function uses 'auto' type specifier without trailing return type
 inline auto xnone() { return placeholders::xtuph(); }
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:27:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:18: error: 'enable_if_t' in namespace 'std' does not name a template type
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:13: note: suggested alternative: 'enable_if'
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
             ^~~
             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:29: error: expected '>' before '<' token
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:93:41: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(T min_val, T max_val) noexcept {
                                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:93:41: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: In function 'auto xt::range(T, T)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:94:19: error: 'make_unsigned_t' in namespace 'std' does not name a template type
   using UT = std::make_unsigned_t<T>;
                   ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:94:14: note: suggested alternative: 'make_unsigned'
   using UT = std::make_unsigned_t<T>;
              ^~~
              make_unsigned
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:17: error: 'UT' was not declared in this scope
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                 ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:17: note: suggested alternative: 'T'
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                 ^~
                 T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:19: error: template argument 1 is invalid
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:33: error: 'UT' does not name a type; did you mean 'T'?
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                                 ^~
                                 T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:59: error: 'UT' does not name a type; did you mean 'T'?
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                                                           ^~
                                                           T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:18: error: 'enable_if_t' in namespace 'std' does not name a template type
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:13: note: suggested alternative: 'enable_if'
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
             ^~~
             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:29: error: expected '>' before '<' token
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:132:49: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(T min_val, T max_val, T step) noexcept {
                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:132:49: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:167:19: error: 'all' function uses 'auto' type specifier without trailing return type
 inline auto all() noexcept { return xall_tag(); }
                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:167:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:193:23: error: 'newaxis' function uses 'auto' type specifier without trailing return type
 inline auto newaxis() noexcept { return xnewaxis_tag(); }
                       ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:193:23: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:205:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:205:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:214:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:214:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:223:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:223:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:234:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:234:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:243:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:243:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:252:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:252:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:267:39: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(A min_val, B max_val) {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:267:39: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:273:47: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(A min_val, B max_val, C step) {
                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:273:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:287:46: error: 'get_size' function uses 'auto' type specifier without trailing return type
 inline auto get_size(const xslice<S>& slice) noexcept {
                                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:287:46: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:301:47: error: 'step_size' function uses 'auto' type specifier without trailing return type
 inline auto step_size(const xslice<S>& slice) noexcept {
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:301:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:48: error: 'value' function uses 'auto' type specifier without trailing return type
 inline auto value(const xslice<S>& slice, I i) noexcept {
                                                ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:48: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:327:59: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t /*index*/) {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:327:59: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:332:71: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
 inline auto get_slice_implementation(E& e, xall_tag, std::size_t index) {
                                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:332:71: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:339:59: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t /*index*/) {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:339:59: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:346:55: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t index) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:346:55: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: error: 'remove_reference_t' is not a member of 'std'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: note: suggested alternative: 'remove_reference'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
                                                remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: note: suggested alternative: 'remove_reference'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
                                                remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:67: error: template argument 2 is invalid
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:69: error: expected identifier before '>' token
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                                     ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:56:61: error: 'get_slice_value' function uses 'auto' type specifier without trailing return type
 inline auto get_slice_value(const xslice<S>& slice, It& it) noexcept {
                                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:56:61: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_count_impl<T, S>::count(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: error: 'remove_reference_t' is not a member of 'std'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: note: suggested alternative: 'remove_reference'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
                                        remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: note: suggested alternative: 'remove_reference'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
                                        remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:59: error: template argument 1 is invalid
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:64: error: '::value' has not been declared
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                                                ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:64: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_count_impl<T, S>::count(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: error: 'remove_reference_t' is not a member of 'std'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: note: suggested alternative: 'remove_reference'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: note: suggested alternative: 'remove_reference'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:53: error: template argument 1 is invalid
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:58: error: '::value' has not been declared
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                                          ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:58: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_skip_impl<T, S>::count_impl(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: error: 'remove_reference_t' is not a member of 'std'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: note: suggested alternative: 'remove_reference'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
                                       remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: note: suggested alternative: 'remove_reference'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
                                       remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:58: error: template argument 1 is invalid
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:63: error: '::value' has not been declared
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                                               ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:63: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_skip_impl<T, S>::count_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: error: 'remove_reference_t' is not a member of 'std'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: note: suggested alternative: 'remove_reference'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: note: suggested alternative: 'remove_reference'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:53: error: template argument 1 is invalid
     return std::is_integral<std::remove_reference_t<T>>::value
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:58: error: '::value' has not been declared
     return std::is_integral<std::remove_reference_t<T>>::value
                                                          ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:58: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_skip_impl<T, S>::count_impl(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: error: 'remove_reference_t' is not a member of 'std'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: note: suggested alternative: 'remove_reference'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
                                 remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: note: suggested alternative: 'remove_reference'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
                                 remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:52: error: template argument 1 is invalid
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:57: error: '::value' has not been declared
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                                         ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:57: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_skip_impl<T, S>::count_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: error: 'remove_reference_t' is not a member of 'std'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: note: suggested alternative: 'remove_reference'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
                            remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: note: suggested alternative: 'remove_reference'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
                            remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:47: error: template argument 1 is invalid
     return is_newaxis<std::remove_reference_t<T>>::value
                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:52: error: '::value' has not been declared
     return is_newaxis<std::remove_reference_t<T>>::value
                                                    ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:52: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:34:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:34:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:50: error: 'xexpression_type' was not declared in this scope
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                  ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:50: note: suggested alternative: 'xexpression'
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                  ^~~~~~~~~~~~~~~~
                                                  xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:72: error: template argument 1 is invalid
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:46:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:46:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:49:35: error: template argument 1 is invalid
                               S...>::type;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:48:14: error: expected nested-name-specifier
     typename xview_shape_type<typename xexpression_type::shape_type,
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               S...>::type;
                               ~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: error: 'remove_reference_t' is not a member of 'std'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: note: suggested alternative: 'remove_reference'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
                                      remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: note: suggested alternative: 'remove_reference'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
                                      remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:57: error: template argument 1 is invalid
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                                         ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:59: error: wrong number of template arguments (1, should be at least 2)
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                                           ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:39:7: note: provided for 'template<bool is_const, class CT, class ... S> class xt::xview_stepper'
 class xview_stepper;
       ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: error: 'remove_cv_t' is not a member of 'std'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: note: suggested alternative: 'remove_cv'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
                                                  remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: note: suggested alternative: 'remove_cv'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
                                                  remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:64: error: template argument 2 is invalid
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:74:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:74:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:77:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:78:36: error: 'xexpression_type' has not been declared
   using reference       = typename xexpression_type::reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:79:36: error: 'xexpression_type' has not been declared
   using const_reference = typename xexpression_type::const_reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:80:36: error: 'xexpression_type' has not been declared
   using pointer         = typename xexpression_type::pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:81:36: error: 'xexpression_type' has not been declared
   using const_pointer   = typename xexpression_type::const_pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:82:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:83:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:112:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:114:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:120:3: error: 'reference' does not name a type
   reference operator()(Args... args);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:121:3: error: 'reference' does not name a type
   reference operator[](const xindex& index);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:122:3: error: 'reference' does not name a type
   reference operator[](size_type i);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:124:3: error: 'reference' does not name a type
   reference element(It first, It last);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:127:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:128:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:129:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:131:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It first, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:149:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:150:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value,
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:150:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value,
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:154:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:155:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value,
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:155:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value,
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:159:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:160:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, const value_type*>
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:160:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, const value_type*>
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:163:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:164:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, value_type*> raw_data();
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:164:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, value_type*> raw_data();
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:166:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:167:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t>
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:167:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t>
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:170:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type underlying_size(size_type dim) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:185:3: error: 'reference' does not name a type
   reference access_impl(std::index_sequence<I...>, Args... args);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:188:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:191:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<lesser_condition<I>::value, size_type> index(
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:191:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<lesser_condition<I>::value, size_type> index(
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:195:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<!lesser_condition<I>::value, size_type> index(
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:195:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<!lesser_condition<I>::value, size_type> index(
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type, class T>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type, class T>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type, class T>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:199:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type sliced_access(const xslice<T>& slice) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I,
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I,
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I,
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:205:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type sliced_access(const xslice<T>& slice, Arg arg, Args... args) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:18: error: 'T' was not declared in this scope
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:21: error: 'size_type' was not declared in this scope
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:21: note: suggested alternative: 'slice_type'
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                     ^~~~~~~~~
                     slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:30: error: template argument 1 is invalid
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:30: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:52: error: 'T' does not name a type
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:64: error: 'Args' has not been declared
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                                                                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:223:31: error: 'view' function uses 'auto' type specifier without trailing return type
 auto view(E&& e, S&&... slices);
                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:223:31: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:250:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xview<CT, S...>, xview<CT, S...>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:250:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xview<CT, S...>, xview<CT, S...>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:39: error: 'view_type' was not declared in this scope
   using substepper_type = get_stepper<view_type>;
                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:39: note: suggested alternative: 'iswctype'
   using substepper_type = get_stepper<view_type>;
                                       ^~~~~~~~~
                                       iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:48: error: template argument 1 is invalid
   using substepper_type = get_stepper<view_type>;
                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:253:36: error: 'substepper_type' has not been declared
   using value_type      = typename substepper_type::value_type;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:254:36: error: 'substepper_type' has not been declared
   using reference       = typename substepper_type::reference;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:255:36: error: 'substepper_type' has not been declared
   using pointer         = typename substepper_type::pointer;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:256:36: error: 'substepper_type' has not been declared
   using difference_type = typename substepper_type::difference_type;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:257:36: error: 'view_type' has not been declared
   using size_type       = typename view_type::size_type;
                                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:259:31: error: 'substepper_type' has not been declared
   using shape_type = typename substepper_type::shape_type;
                               ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:262:26: error: expected ')' before '*' token
   xview_stepper(view_type* view,
                ~         ^
                          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:267:3: error: 'reference' does not name a type
   reference operator*() const;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:269:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:269:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:270:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:270:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:271:14: error: 'size_type' has not been declared
   void reset(size_type dim);
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:272:19: error: 'size_type' has not been declared
   void reset_back(size_type dim);
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:280:25: error: 'size_type' has not been declared
   bool is_newaxis_slice(size_type index) const noexcept;
                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:284:20: error: 'size_type' has not been declared
   void common_step(size_type dim, size_type n, F f);
                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:284:35: error: 'size_type' has not been declared
   void common_step(size_type dim, size_type n, F f);
                                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:287:21: error: 'size_type' has not been declared
   void common_reset(size_type dim, F f);
                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:289:3: error: 'view_type' does not name a type; did you mean 'iswctype'?
   view_type* p_view;
   ^~~~~~~~~
   iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:290:3: error: 'substepper_type' does not name a type; did you mean 'stepper_tools'?
   substepper_type m_it;
   ^~~~~~~~~~~~~~~
   stepper_tools
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:291:3: error: 'size_type' does not name a type; did you mean 'size_t'?
   size_type m_offset;
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In constructor 'xt::xview<CT, S>::xview(CTA&&, FSL&&, SL&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:340:24: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [](const auto& s) noexcept { return get_size(s); };
                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i != dimension(); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:8: note: suggested alternative: 'slice_type'
   for (size_type i = 0; i != dimension(); ++i) {
        ^~~~~~~~~
        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i != dimension(); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:30: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   for (size_type i = 0; i != dimension(); ++i) {
                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:342:14: error: expected ';' before 'index'
     size_type index = integral_skip<S...>(i);
              ^~~~~~
              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:343:42: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]
     m_shape[i]      = index < sizeof...(S)
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::self_type& xt::xview<CT, S>::operator=(const xt::xexpression<E>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:366:51: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   bool cond = (e.derived_cast().shape().size() == dimension()) &&
                                                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:394:55: error: 'size_type' does not name a type; did you mean 'slice_type'?
 inline auto xview<CT, S...>::size() const noexcept -> size_type {
                                                       ^~~~~~~~~
                                                       slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:402:60: error: 'size_type' does not name a type; did you mean 'slice_type'?
 inline auto xview<CT, S...>::dimension() const noexcept -> size_type {
                                                            ^~~~~~~~~
                                                            slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:443:58: error: 'reference' does not name a type
 inline auto xview<CT, S...>::operator()(Args... args) -> reference {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:457:65: error: 'reference' does not name a type
 inline auto xview<CT, S...>::operator[](const xindex& index) -> reference {
                                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: error: declaration of 'operator[]' as non-function
 inline auto xview<CT, S...>::operator[](size_type i) -> reference {
                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: note: suggested alternative: 'size_t'
 inline auto xview<CT, S...>::operator[](size_type i) -> reference {
                                         ^~~~~~~~~
                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:468:60: error: 'reference' does not name a type
 inline auto xview<CT, S...>::element(It first, It last) -> reference {
                                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:485:64: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xview<CT, S...>::operator()(Args... args) const -> const_reference {
                                                                ^~~~~~~~~~~~~~~
                                                                xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:500:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: error: declaration of 'operator[]' as non-function
 inline auto xview<CT, S...>::operator[](size_type i) const -> const_reference {
                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: note: suggested alternative: 'size_t'
 inline auto xview<CT, S...>::operator[](size_type i) const -> const_reference {
                                         ^~~~~~~~~
                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:512:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::underlying_size(size_type dim) const -> size_type {
                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: 'auto xt::xview<CT, S>::underlying_size' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: template definition of non-template 'auto xt::xview<CT, S>::underlying_size'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: note: suggested alternative: 'slice_type'
 inline auto xview<CT, S...>::underlying_size(size_type dim) const -> size_type {
                                              ^~~~~~~~~
                                              slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: 'auto xt::xview<CT, S>::access_impl' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: template definition of non-template 'auto xt::xview<CT, S>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:62: error: 'I' was not declared in this scope
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:632:42: error: 'Args' was not declared in this scope
                                          Args... args) -> reference {
                                          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: 'auto xt::xview<CT, S>::access_impl' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: template definition of non-template 'auto xt::xview<CT, S>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:62: error: 'I' was not declared in this scope
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:639:42: error: 'Args' was not declared in this scope
                                          Args... args) const
                                          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::index(Args... args) const
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: 'auto xt::xview<CT, S>::index' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: template definition of non-template 'auto xt::xview<CT, S>::index'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: 'Args' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::index(Args... args) const
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: 'auto xt::xview<CT, S>::index' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: template definition of non-template 'auto xt::xview<CT, S>::index'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: 'Args' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class T>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class T>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class T>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:662:57: error: 'T' was not declared in this scope
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice) const
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:662:58: error: template argument 1 is invalid
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice) const
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:663:6: error: 'size_type' does not name a type; did you mean 'slice_type'?
   -> size_type {
      ^~~~~~~~~
      slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I,
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I,
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I,
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:672:57: error: 'T' was not declared in this scope
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice,
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:672:58: error: template argument 1 is invalid
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice,
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:673:44: error: 'Arg' has not been declared
                                            Arg arg,
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:44: error: 'Args' has not been declared
                                            Args... args) const -> size_type {
                                            ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:52: error: expansion pattern 'int' contains no argument packs
                                            Args... args) const -> size_type {
                                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:67: error: 'size_type' does not name a type; did you mean 'slice_type'?
                                            Args... args) const -> size_type {
                                                                   ^~~~~~~~~
                                                                   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:682:50: error: 'T' does not name a type
 inline auto xview<CT, S...>::sliced_access(const T& squeeze, Args...) const
                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:682:62: error: 'Args' has not been declared
 inline auto xview<CT, S...>::sliced_access(const T& squeeze, Args...) const
                                                              ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:21: error: 'T' was not declared in this scope
   -> disable_xslice<T, size_type> {
                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:24: error: 'size_type' was not declared in this scope
   -> disable_xslice<T, size_type> {
                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:24: note: suggested alternative: 'slice_type'
   -> disable_xslice<T, size_type> {
                        ^~~~~~~~~
                        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:33: error: template argument 1 is invalid
   -> disable_xslice<T, size_type> {
                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:33: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::base_index_type xt::xview<CT, S>::make_index(It, It) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:692:5: error: parse error in template argument list
     make_sequence<typename xexpression_type::shape_type>(m_e.dimension(), 0);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:693:31: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func1 = [&first](const auto& s) { return get_slice_value(s, first); };
                               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:694:25: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func2 = [](const auto& s) { return xt::value(s, 0); };
                         ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i != m_e.dimension(); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:8: note: suggested alternative: 'slice_type'
   for (size_type i = 0; i != m_e.dimension(); ++i) {
        ^~~~~~~~~
        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i != m_e.dimension(); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:696:14: error: expected ';' before 'k'
     size_type k = newaxis_skip<S...>(i);
              ^~
              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:697:25: error: 'k' was not declared in this scope
     std::advance(first, k - i);
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'std::size_t xt::detail::get_underlying_shape_index(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:35: error: 'get_slice_type' was not declared in this scope
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:35: note: suggested alternative: 'get_slice_value'
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                   ^~~~~~~~~~~~~~
                                   get_slice_value
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:14: error: parse error in template argument list
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:12: error: parameter packs not expanded with '...':
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:12: note:         'S'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:55: error: expected ';' before '...' token
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                                       ^~~
                                                       ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:55: error: expected primary-expression before '...' token
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                                       ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:40: error: 'std::index_sequence' has not been declared
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:54: error: expected ',' or '...' before '<' token
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:75: error: 'make_view_impl' function uses 'auto' type specifier without trailing return type
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:75: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'auto xt::detail::make_view_impl(E&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:41: error: 'get_slice_type' was not declared in this scope
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                         ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:41: note: suggested alternative: 'get_slice_value'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                         ^~~~~~~~~~~~~~
                                         get_slice_value
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:61: error: 'decay_t' is not a member of 'std'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:61: note: suggested alternative: 'decay'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                             ^~~~~~~
                                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:70: error: template argument 2 is invalid
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:724:41: error: 'slices' was not declared in this scope
                      e, std::forward<S>(slices),
                                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:724:41: note: suggested alternative: 'xslice'
                      e, std::forward<S>(slices),
                                         ^~~~~~
                                         xslice
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: error: 'decay_t' is not a member of 'std'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: note: suggested alternative: 'decay'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: note: suggested alternative: 'decay'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:22: error: parse error in template argument list
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:67: error: expected primary-expression before '...' token
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                                   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:738:38: error: 'view' function uses 'auto' type specifier without trailing return type
 inline auto view(E&& e, S&&... slices) {
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:738:38: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'auto xt::view(E&&, S&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:740:38: error: 'make_index_sequence' is not a member of 'std'
                                 std::make_index_sequence<sizeof...(S)>(),
                                      ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:740:72: error: expected primary-expression before ')' token
                                 std::make_index_sequence<sizeof...(S)>(),
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::stepper xt::xview<CT, S>::stepper_begin(const ST&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:751:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:751:3: note: suggested alternative: 'slice_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:752:56: error: 'offset' was not declared in this scope
   return stepper(this, m_e.stepper_begin(m_e.shape()), offset);
                                                        ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:752:56: note: suggested alternative: 'off_t'
   return stepper(this, m_e.stepper_begin(m_e.shape()), offset);
                                                        ^~~~~~
                                                        off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::stepper xt::xview<CT, S>::stepper_end(const ST&, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:759:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:759:3: note: suggested alternative: 'slice_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:760:57: error: 'offset' was not declared in this scope
   return stepper(this, m_e.stepper_end(m_e.shape(), l), offset, true);
                                                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:760:57: note: suggested alternative: 'off_t'
   return stepper(this, m_e.stepper_end(m_e.shape(), l), offset, true);
                                                         ^~~~~~
                                                         off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::const_stepper xt::xview<CT, S>::stepper_begin(const ST&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:767:3: error: 'size_type' was not declared in this scope
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:767:3: note: suggested alternative: 'slice_type'
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:768:9: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   const xexpression_type& e = m_e;
         ^~~~~~~~~~~~~~~~
         xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:30: error: 'e' was not declared in this scope
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:60: error: 'offset' was not declared in this scope
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                                                            ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:60: note: suggested alternative: 'off_t'
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                                                            ^~~~~~
                                                            off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::const_stepper xt::xview<CT, S>::stepper_end(const ST&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:776:3: error: 'size_type' was not declared in this scope
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:776:3: note: suggested alternative: 'slice_type'
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:777:9: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   const xexpression_type& e = m_e;
         ^~~~~~~~~~~~~~~~
         xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:30: error: 'e' was not declared in this scope
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:61: error: 'offset' was not declared in this scope
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                                                             ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:61: note: suggested alternative: 'off_t'
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                                                             ^~~~~~
                                                             off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: ISO C++ forbids declaration of 'xview_stepper' with no type [-fpermissive]
 inline xview_stepper<is_const, CT, S...>::xview_stepper(view_type* view,
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: 'int xt::xview_stepper<is_const, CT, S>::xview_stepper' is not a static data member of 'class xt::xview_stepper<is_const, CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: template definition of non-template 'int xt::xview_stepper<is_const, CT, S>::xview_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: 'view_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: note: suggested alternative: 'iswctype'
 inline xview_stepper<is_const, CT, S...>::xview_stepper(view_type* view,
                                                         ^~~~~~~~~
                                                         iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:787:57: error: 'substepper_type' was not declared in this scope
                                                         substepper_type it,
                                                         ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:787:57: note: suggested alternative: 'stepper_tools'
                                                         substepper_type it,
                                                         ^~~~~~~~~~~~~~~
                                                         stepper_tools
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:788:57: error: 'size_type' was not declared in this scope
                                                         size_type offset,
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:788:57: note: suggested alternative: 'size_t'
                                                         size_type offset,
                                                         ^~~~~~~~~
                                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:789:57: error: expected primary-expression before 'bool'
                                                         bool end)
                                                         ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:806:69: error: 'reference' does not name a type
 inline auto xview_stepper<is_const, CT, S...>::operator*() const -> reference {
                                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: error: variable or field 'step' declared void
 inline void xview_stepper<is_const, CT, S...>::step(size_type dim,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::step(size_type dim,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:812:53: error: 'size_type' was not declared in this scope
                                                     size_type n) {
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:812:53: note: suggested alternative: 'size_t'
                                                     size_type n) {
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: error: variable or field 'step_back' declared void
 inline void xview_stepper<is_const, CT, S...>::step_back(size_type dim,
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::step_back(size_type dim,
                                                          ^~~~~~~~~
                                                          size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:821:58: error: 'size_type' was not declared in this scope
                                                          size_type n) {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:821:58: note: suggested alternative: 'size_t'
                                                          size_type n) {
                                                          ^~~~~~~~~
                                                          size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: error: variable or field 'reset' declared void
 inline void xview_stepper<is_const, CT, S...>::reset(size_type dim) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::reset(size_type dim) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: error: variable or field 'reset_back' declared void
 inline void xview_stepper<is_const, CT, S...>::reset_back(size_type dim) {
                                                           ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::reset_back(size_type dim) {
                                                           ^~~~~~~~~
                                                           size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:846:3: error: 'm_it' was not declared in this scope
   m_it.to_begin();
   ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:846:3: note: suggested alternative: 'u_int'
   m_it.to_begin();
   ^~~~
   u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:851:3: error: 'm_it' was not declared in this scope
   m_it.to_end(l);
   ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:851:3: note: suggested alternative: 'u_int'
   m_it.to_end(l);
   ^~~~
   u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'bool xt::xview_stepper<is_const, CT, S>::equal(const xt::xview_stepper<is_const, CT, S>&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:10: error: 'p_view' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
          ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:10: note: suggested alternative: 'view'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
          ^~~~~~
          view
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:34: error: 'm_it' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:34: note: suggested alternative: 'u_int'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                  ^~~~
                                  u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:54: error: 'm_offset' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:54: note: suggested alternative: '_off_t'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
                                                      _off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   size_type index) const noexcept {
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: 'bool xt::xview_stepper<is_const, CT, S>::is_newaxis_slice' is not a static data member of 'class xt::xview_stepper<is_const, CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: template definition of non-template 'bool xt::xview_stepper<is_const, CT, S>::is_newaxis_slice'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: note: suggested alternative: 'size_t'
   size_type index) const noexcept {
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_end_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:871:24: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [](const auto& s) { return xt::value(s, get_size(s) - 1); };
                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i < sizeof...(S); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:8: note: suggested alternative: 'size_t'
   for (size_type i = 0; i < sizeof...(S); ++i) {
        ^~~~~~~~~
        size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i < sizeof...(S); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:874:16: error: expected ';' before 's'
       size_type s     = apply<size_type>(i, func, p_view->slices());
                ^~
                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:875:16: error: expected ';' before 'index'
       size_type index = i - newaxis_count_before<S...>(i);
                ^~~~~~
                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:7: error: 's' was not declared in this scope
       s               = p_view->underlying_size(index) - 1 - s;
       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:25: error: 'p_view' was not declared in this scope
       s               = p_view->underlying_size(index) - 1 - s;
                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:25: note: suggested alternative: 'view'
       s               = p_view->underlying_size(index) - 1 - s;
                         ^~~~~~
                         view
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:877:7: error: 'm_it' was not declared in this scope
       m_it.step_back(index, s);
       ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:877:7: note: suggested alternative: 'u_int'
       m_it.step_back(index, s);
       ^~~~
       u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: error: variable or field 'common_step' declared void
 void xview_stepper<is_const, CT, S...>::common_step(size_type dim,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: note: suggested alternative: 'size_t'
 void xview_stepper<is_const, CT, S...>::common_step(size_type dim,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:885:53: error: 'size_type' was not declared in this scope
                                                     size_type n,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:885:53: note: suggested alternative: 'size_t'
                                                     size_type n,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:886:55: error: expected primary-expression before 'f'
                                                     F f) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: error: variable or field 'common_reset' declared void
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: note: suggested alternative: 'size_t'
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:71: error: expected primary-expression before 'f'
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                                       ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In substitution of 'template<class S> using const_closure_t = typename xt::const_closure::type [with S = float]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:134:34:   required from 'struct xt::const_xclosure<float, void>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:163:64:   required from 'auto xt::broadcast(E&&, const I (&)[L]) [with E = float; I = unsigned int; unsigned int L = 2]'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:79:19:   required from 'auto xt::zeros(const I (&)[L]) [with T = float; I = unsigned int; unsigned int L = 2]'
../components/tiny_dnn/include/tiny_dnn/util/util.h:418:74:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:588:56: error: no type named 'type' in 'struct xt::const_closure<float>'
 using const_closure_t = typename const_closure<S>::type;
                                                        ^
In file included from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/util/util.h: In function 'xt::xarray<float> tiny_dnn::to_xtensor(const tensor_t&)':
../components/tiny_dnn/include/tiny_dnn/util/util.h:418:50: error: conversion from 'void' to non-scalar type 'xt::xarray<float>' {aka 'xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >'} requested
   xt::xarray<float_t> result = xt::zeros<float_t>({t.size(), t[0].size()});
                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h: At global scope:
../components/tiny_dnn/include/tiny_dnn/util/util.h:437:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<std::is_same<T, typename ValType::value_type>::value>;
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h:437:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<std::is_same<T, typename ValType::value_type>::value>;
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/util/util.h:440:24: error: 'value_type_is' does not name a type
 using value_is_float = value_type_is<ValType, float>;
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h:443:25: error: 'value_type_is' does not name a type
 using value_is_double = value_type_is<ValType, double>;
                         ^~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:14,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:107:22: error: 'shape' function uses 'auto' type specifier without trailing return type
   const auto shape() const { return storage_.shape(); }
                      ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:107:22: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:113:20: error: 'dim' function uses 'auto' type specifier without trailing return type
   const auto dim() const { return storage_.dimension(); }
                    ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:113:20: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:119:3: warning: type qualifiers ignored on function return type [-Wignored-qualifiers]
   const size_t size() const { return storage_.size(); }
   ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:145:19: error: 'host_begin' function uses 'auto' type specifier without trailing return type
   auto host_begin() { return storage_.begin(); }
                   ^
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:145:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:147:27: error: 'host_begin' function uses 'auto' type specifier without trailing return type
   const auto host_begin() const { return storage_.cbegin(); }
                           ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:147:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:149:17: error: 'host_end' function uses 'auto' type specifier without trailing return type
   auto host_end() { return storage_.end(); }
                 ^
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:149:17: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:151:25: error: 'host_end' function uses 'auto' type specifier without trailing return type
   const auto host_end() const { return storage_.cend(); }
                         ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:151:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: error: 'make_unsigned_t' is not a member of 'std'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: note: suggested alternative: 'make_unsigned'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
                                                  make_unsigned
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: error: 'make_unsigned_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: note: suggested alternative: 'make_unsigned'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
                                                  make_unsigned
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:66: error: template argument 1 is invalid
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                  ^~~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:72: error: template argument 2 is invalid
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                        ^~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:74: error: expected parameter pack before '...'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                          ^~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:74: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:77: error: expected unqualified-id before '>' token
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                             ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/layers/cells.h:11,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:35,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h: In member function 'void tiny_dnn::rnn_cell::set_params(size_t, size_t, bool)':
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:32: error: 'make_unique' is not a member of 'std'
     params_.activation_ = std::make_unique<tanh_layer>(tanh_layer());
                                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:32: note: 'std::make_unique' is only available from C++14 onwards
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:54: error: expected primary-expression before '>' token
     params_.activation_ = std::make_unique<tanh_layer>(tanh_layer());
                                                      ^
In file included from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:43,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h: In member function 'virtual void tiny_dnn::l2_normalization_layer::back_propagation(const std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, const std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&)':
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:109:15: warning: unused variable 'prev_delta' [-Wunused-variable]
     tensor_t &prev_delta     = *in_grad[0];
               ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:110:15: warning: unused variable 'curr_delta' [-Wunused-variable]
     tensor_t &curr_delta     = *out_grad[0];
               ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:112:18: warning: unused variable 'num_samples' [-Wunused-variable]
     const size_t num_samples = curr_out.size();
                  ^~~~~~~~~~~
../main/ota.cpp: In function 'void initialise_wifi()':
../main/ota.cpp:84:24: warning: 'void tcpip_adapter_init()' is deprecated [-Wdeprecated-declarations]
     tcpip_adapter_init();
                        ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include/esp_netif.h:35,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:22,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include/tcpip_adapter.h:34:6: note: declared here
 void tcpip_adapter_init(void)  __attribute__ ((deprecated));
      ^~~~~~~~~~~~~~~~~~
../main/ota.cpp:84:24: warning: 'void tcpip_adapter_init()' is deprecated [-Wdeprecated-declarations]
     tcpip_adapter_init();
                        ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include/esp_netif.h:35,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:22,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include/tcpip_adapter.h:34:6: note: declared here
 void tcpip_adapter_init(void)  __attribute__ ((deprecated));
      ^~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include/esp_timer.h:44,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include/freertos/portmacro.h:84,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/portable.h:95,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/FreeRTOS.h:107,
                 from ../main/ota.cpp:1:
../main/ota.cpp:86:61: warning: 'esp_err_t esp_event_loop_init(system_event_cb_t, void*)' is deprecated [-Wdeprecated-declarations]
     ESP_ERROR_CHECK( esp_event_loop_init(event_handler, NULL) );
                                                             ^
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include/esp_err.h:118:31: note: in definition of macro 'ESP_ERROR_CHECK'
         esp_err_t __err_rc = (x);                                       \
                               ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:231:11: note: declared here
 esp_err_t esp_event_loop_init(system_event_cb_t cb, void *ctx) __attribute__ ((deprecated));
           ^~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include/esp_timer.h:44,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include/freertos/portmacro.h:84,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/portable.h:95,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/FreeRTOS.h:107,
                 from ../main/ota.cpp:1:
../main/ota.cpp:86:61: warning: 'esp_err_t esp_event_loop_init(system_event_cb_t, void*)' is deprecated [-Wdeprecated-declarations]
     ESP_ERROR_CHECK( esp_event_loop_init(event_handler, NULL) );
                                                             ^
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include/esp_err.h:118:31: note: in definition of macro 'ESP_ERROR_CHECK'
         esp_err_t __err_rc = (x);                                       \
                               ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:231:11: note: declared here
 esp_err_t esp_event_loop_init(system_event_cb_t cb, void *ctx) __attribute__ ((deprecated));
           ^~~~~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp: In instantiation of 'xt::xarray_container<EC, L, SC>::xarray_container(xt::nested_initializer_list_t<typename xt::xstrided_container<xt::xarray_container<EC, L, SC> >::value_type, 1>) [with EC = xt::uvector<float, std::allocator<float> >; xt::layout_type L = (xt::layout_type)1; SC = std::vector<unsigned int>; xt::nested_initializer_list_t<typename xt::xstrided_container<xt::xarray_container<EC, L, SC> >::value_type, 1> = std::initializer_list<float>]':
../components/tiny_dnn/include/tiny_dnn/util/util.h:417:55:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:323:18: error: no matching function for call to 'xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >::begin<row_major>()'
     : nested_copy(this->template begin<layout_type::row_major>(), t);
       ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:233:28: note: candidate: 'template<class S, xt::layout_type L> xt::xcontainer<D>::broadcast_iterator<S, L> xt::xcontainer<D>::begin(const S&) [with S = S; xt::layout_type L = L; D = xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >]'
   broadcast_iterator<S, L> begin(const S& shape) noexcept;
                            ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:233:28: note:   template argument deduction/substitution failed:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:238:34: note: candidate: 'template<class S, xt::layout_type L> xt::xcontainer<D>::const_broadcast_iterator<S, L> xt::xcontainer<D>::begin(const S&) const [with S = S; xt::layout_type L = L; D = xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >]'
   const_broadcast_iterator<S, L> begin(const S& shape) const noexcept;
                                  ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:238:34: note:   template argument deduction/substitution failed:
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/external/rapidjson/document.h: In instantiation of 'void rapidjson::GenericValue<Encoding, Allocator>::SetObjectRaw(rapidjson::GenericValue<Encoding, Allocator>::Member*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]':
../components/cereal/include/cereal/external/rapidjson/document.h:789:3:   required from 'void rapidjson::GenericDocument<Encoding, Allocator>::EndObject(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]'
../components/cereal/include/cereal/external/rapidjson/reader.h:276:4:   required from 'void rapidjson::GenericReader<Encoding, Allocator>::ParseObject(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/reader.h:248:38:   required from 'bool rapidjson::GenericReader<Encoding, Allocator>::Parse(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/document.h:712:3:   required from 'rapidjson::GenericDocument<Encoding, Allocator>& rapidjson::GenericDocument<Encoding, Allocator>::ParseStream(Stream&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/archives/json.hpp:412:49:   required from here
../components/cereal/include/cereal/external/rapidjson/document.h:645:9: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'struct rapidjson::GenericValue<rapidjson::UTF8<> >::Member' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Werror=class-memaccess]
   memcpy(data_.o.members, members, count * sizeof(Member));
   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/external/rapidjson/document.h:33:9: note: 'struct rapidjson::GenericValue<rapidjson::UTF8<> >::Member' declared here
  struct Member {
         ^~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/external/rapidjson/document.h: In instantiation of 'void rapidjson::GenericValue<Encoding, Allocator>::SetArrayRaw(rapidjson::GenericValue<Encoding, Allocator>*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]':
../components/cereal/include/cereal/external/rapidjson/document.h:796:3:   required from 'void rapidjson::GenericDocument<Encoding, Allocator>::EndArray(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]'
../components/cereal/include/cereal/external/rapidjson/reader.h:318:4:   required from 'void rapidjson::GenericReader<Encoding, Allocator>::ParseArray(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/reader.h:249:37:   required from 'bool rapidjson::GenericReader<Encoding, Allocator>::Parse(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/document.h:712:3:   required from 'rapidjson::GenericDocument<Encoding, Allocator>& rapidjson::GenericDocument<Encoding, Allocator>::ParseStream(Stream&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/archives/json.hpp:412:49:   required from here
../components/cereal/include/cereal/external/rapidjson/document.h:637:9: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class rapidjson::GenericValue<rapidjson::UTF8<> >' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Werror=class-memaccess]
   memcpy(data_.a.elements, values, count * sizeof(GenericValue));
   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/external/rapidjson/document.h:30:7: note: 'class rapidjson::GenericValue<rapidjson::UTF8<> >' declared here
 class GenericValue {
       ^~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::elu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::leaky_relu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::relu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::sigmoid_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softmax_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softplus_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softsign_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::tanh_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::tanh_p1m2_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15:
../components/cereal/include/cereal/archives/json.hpp: In member function 'void cereal::JSONOutputArchive::finishNode()':
../components/cereal/include/cereal/archives/json.hpp:201:34: warning: this statement may fall through [-Wimplicit-fallthrough=]
             itsWriter.StartArray();
                                  ^
../components/cereal/include/cereal/archives/json.hpp:202:11: note: here
           case NodeType::InArray:
           ^~~~
../components/cereal/include/cereal/archives/json.hpp:206:35: warning: this statement may fall through [-Wimplicit-fallthrough=]
             itsWriter.StartObject();
                                   ^
../components/cereal/include/cereal/archives/json.hpp:207:11: note: here
           case NodeType::InObject:
           ^~~~
../main/ota.cpp: At global scope:
../main/ota.cpp:195:13: warning: 'void ota_task(void*)' defined but not used [-Wunused-function]
 static void ota_task(void *pvParameter)
             ^~~~~~~~
cc1plus: some warnings being treated as errors
[35/46] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj
FAILED: esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj 
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/bin/xtensa-esp32-elf-g++  -DHAVE_CONFIG_H -DMBEDTLS_CONFIG_FILE=\"mbedtls/esp_config.h\" -DUNITY_INCLUDE_CONFIG_H -DWITH_POSIX -Iconfig -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/newlib/platform_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/heap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/log/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/include/apps/sntp -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/lwip/src/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/lwip/port/esp32/include/arch -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/. -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_rom/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_system/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/xtensa/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ringbuf/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/efuse/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/espcoredump/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_ipc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/../include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/soc/esp32/private_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/vfs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/esp32/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_eth/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_trace/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/mbedtls/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mbedtls/esp_crt_bundle/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/bootloader_support/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/app_update/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spi_flash/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wpa_supplicant/include/esp_supplicant -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nvs_flash/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/pthread/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/perfmon/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/asio/asio/asio/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/asio/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/cbor/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/port/include/coap -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/libcoap/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/coap/libcoap/include/coap2 -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/console -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nghttp/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/nghttp/nghttp2/lib/includes -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp-tls -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_adc_cal/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_gdbstub/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_hid/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcp_transport/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_client/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_http_server/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_https_ota/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protobuf-c/protobuf-c -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/common -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/security -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/protocomm/include/transports -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mdns/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_local_ctrl/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/sdmmc/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_serial_slave_link/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_websocket_client/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/expat/expat/expat/lib -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/expat/port/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wear_levelling/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/diskio -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/vfs -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/fatfs/src -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freemodbus/common/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/idf_test/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/idf_test/include/esp32 -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/jsmn/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/json/cJSON -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/libsodium/libsodium/src/libsodium/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/libsodium/port_include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/mqtt/esp-mqtt/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/openssl/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/spiffs/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/ulp/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/unity/include -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/unity/unity/src -I/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/wifi_provisioning/include -I../components/EVXAudioRecorder -I../components/EVXGPIOController -I../components/EVXLEDController -I../components/EVXTimer -I../components/cereal/include -I../components/tiny_dnn/include -mlongcalls -Wno-frame-address   -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -Wall -Werror=all -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wextra -Wno-unused-parameter -Wno-sign-compare -ggdb -Og -std=c++11 -D_GNU_SOURCE -DIDF_VER=\"v4.2\" -DESP_PLATFORM -MD -MT esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj -MF esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj.d -o esp-idf/main/CMakeFiles/__idf_main.dir/main.cpp.obj -c ../main/main.cpp
In file included from ../main/ota.cpp:10,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_loop.h:2:2: warning: #warning "esp_event_loop.h is deprecated, please include esp_event.h instead" [-Wcpp]
 #warning "esp_event_loop.h is deprecated, please include esp_event.h instead"
  ^~~~~~~
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/include/hal/i2s_hal.h:28,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/driver/include/driver/i2s.h:24,
                 from ../components/EVXAudioRecorder/EVXAudioRecorder.h:11,
                 from ../main/otohikari.cpp:9,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h: In function 'void i2s_ll_enable_dma(i2s_dev_t*)':
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: error: 'typeof' was not declared in this scope
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:243:5: note: suggested alternative: 'feof'
     typeof(hw->lc_conf) lc_conf;
     ^~~~~~
     feof
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:244:5: error: 'lc_conf' was not declared in this scope
     lc_conf.val = 0;
     ^~~~~~~
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/soc/src/esp32/include/hal/i2s_ll.h:244:5: note: suggested alternative: 'lconv'
     lc_conf.val = 0;
     ^~~~~~~
     lconv
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected ')' before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                   ~^~~~
                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:53:11: error: expected unqualified-id before 'decltype'
 constexpr decltype(auto) argument(Args&&... args) noexcept;
           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
 decltype(auto) forward_sequence(A&& s);
          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected ')' before 'auto'
 decltype(auto) forward_sequence(A&& s);
         ~^~~~
          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
 decltype(auto) forward_sequence(A&& s);
          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:10: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:86:1: error: expected unqualified-id before 'decltype'
 decltype(auto) forward_sequence(A&& s);
 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:146:13: error: 'enable_if_t' in namespace 'std' does not name a template type
 inline std::enable_if_t<I == sizeof...(T), R> accumulate_impl(
             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:146:8: note: suggested alternative: 'enable_if'
 inline std::enable_if_t<I == sizeof...(T), R> accumulate_impl(
        ^~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:154:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t <
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:154:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t <
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::accumulate(F&&, R, const std::tuple<_Args2 ...>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:18: error: 'accumulate_impl' is not a member of 'xt::detail'
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                  ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:38: error: expected primary-expression before ',' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:41: error: expected primary-expression before ',' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected primary-expression before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected ';' before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
                                            ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:167:44: error: expected primary-expression before '...' token
   return detail::accumulate_impl<0, F, R, T...>(f, init, t);
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                             ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected ')' before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                            ~^~~~
                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                             ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:29: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:210:20: error: expected unqualified-id before 'decltype'
   static constexpr decltype(auto) get(Arg&& /*arg*/, Args&&... args) noexcept {
                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected ')' before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                   ~^~~~
                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:20: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:225:11: error: expected unqualified-id before 'decltype'
 constexpr decltype(auto) argument(Args&&... args) noexcept {
           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:244:14: error: 'std::index_sequence' has not been declared
         std::index_sequence<I...> /*seq*/,
              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:244:28: error: expected ',' or '...' before '<' token
         std::index_sequence<I...> /*seq*/,
                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::detail::apply(std::size_t, F&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:246:19: error: 'add_pointer_t' in namespace 'std' does not name a template type
   using FT = std::add_pointer_t<R(F&&, const std::tuple<S...>&)>;
                   ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:246:14: note: suggested alternative: 'add_pointer'
   using FT = std::add_pointer_t<R(F&&, const std::tuple<S...>&)>;
              ^~~
              add_pointer
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:27: error: 'FT' was not declared in this scope
   static const std::array<FT, sizeof...(I)> ar = {
                           ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:27: note: suggested alternative: 'F'
   static const std::array<FT, sizeof...(I)> ar = {
                           ^~
                           F
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:247:43: error: template argument 1 is invalid
   static const std::array<FT, sizeof...(I)> ar = {
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:249:18: error: invalid types 'const int[std::size_t {aka unsigned int}]' for array subscript
   return ar[index](std::forward<F>(func), s);
                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:249:43: error: 's' was not declared in this scope
   return ar[index](std::forward<F>(func), s);
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'R xt::apply(std::size_t, F&&, const std::tuple<_Args2 ...>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:257:32: error: 'make_index_sequence' is not a member of 'std'
                           std::make_index_sequence<sizeof...(S)>(), s);
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:257:66: error: expected primary-expression before ')' token
                           std::make_index_sequence<sizeof...(S)>(), s);
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:337:41: error: 'std::index_sequence' has not been declared
 constexpr R initializer_shape(U t, std::index_sequence<I...>) {
                                         ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:337:55: error: expected ',' or '...' before '<' token
 constexpr R initializer_shape(U t, std::index_sequence<I...>) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'constexpr R xt::shape(T)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:346:13: error: 'make_index_sequence' is not a member of 'std'
     t, std::make_index_sequence<initializer_dimension<decltype(t)>::value>());
             ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:346:76: error: expected primary-expression before ')' token
     t, std::make_index_sequence<initializer_dimension<decltype(t)>::value>());
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: error: 'enable_if_t' is not a member of 'std'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: note: suggested alternative: 'enable_if'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: error: 'enable_if_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:8: note: suggested alternative: 'enable_if'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
        ^~~~~~~~~~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:56: error: type/value mismatch at argument 3 in template parameter list for 'template<class R, class A, class E> struct xt::detail::sequence_forwarder'
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
                                                        ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:56: note:   expected a type, got '(<expression error> < (! std::is_same<std::array<_Tp, _Nm>, A>::value))'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:449:61: error: expected unqualified-id before '>' token
   std::enable_if_t<!std::is_same<std::array<I, L>, A>::value>> {
                                                             ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                 ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected ')' before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                ~^~~~
                 )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
 inline decltype(auto) forward_sequence(A&& s) {
                 ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:17: error: expected primary-expression before 'auto'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:477:8: error: expected unqualified-id before 'decltype'
 inline decltype(auto) forward_sequence(A&& s) {
        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:490:16: error: 'common_type_t' in namespace 'std' does not name a template type
 constexpr std::common_type_t<T1, T2> imax(const T1& a, const T2& b) {
                ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:490:11: note: suggested alternative: 'common_type'
 constexpr std::common_type_t<T1, T2> imax(const T1& a, const T2& b) {
           ^~~
           common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:568:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:568:5: note: suggested alternative: 'conditional'
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:573:57: error: wrong number of template arguments (2, should be 3)
                                          underlying_type>::type;
                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/move.h:55,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_pair.h:59,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:64,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/type_traits:92:12: note: provided for 'template<bool <anonymous>, class, class> struct std::conditional'
     struct conditional;
            ^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:573:58: error: expected identifier before '::' token
                                          underlying_type>::type;
                                                          ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:581:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using underlying_type = const std::decay_t<S>;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:581:32: error: expected ';'
   using underlying_type = const std::decay_t<S>;
                                ^~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:584:57: error: wrong number of template arguments (2, should be 3)
                                          underlying_type>::type;
                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/move.h:55,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_pair.h:59,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:64,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/type_traits:92:12: note: provided for 'template<bool <anonymous>, class, class> struct std::conditional'
     struct conditional;
            ^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:584:58: error: expected identifier before '::' token
                                          underlying_type>::type;
                                                          ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:597:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:597:5: note: suggested alternative: 'conditional'
     std::conditional_t<std::is_const<std::remove_reference_t<S>>::value,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:600:21: error: 'conditional_t' in namespace 'std' does not name a template type
   using type = std::conditional_t<std::is_lvalue_reference<S>::value,
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:600:16: note: suggested alternative: 'conditional'
   using type = std::conditional_t<std::is_lvalue_reference<S>::value,
                ^~~
                conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:610:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using underlying_type = const std::decay_t<S>;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:610:32: error: expected ';'
   using underlying_type = const std::decay_t<S>;
                                ^~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:611:32: error: 'conditional_t' in namespace 'std' does not name a template type
   using type            = std::conditional_t<std::is_lvalue_reference<S>::value,
                                ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:611:27: note: suggested alternative: 'conditional'
   using type            = std::conditional_t<std::is_lvalue_reference<S>::value,
                           ^~~
                           conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: error: 'remove_reference_t' is not a member of 'std'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: note: suggested alternative: 'remove_reference'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
                                     remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:37: note: suggested alternative: 'remove_reference'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                     ^~~~~~~~~~~~~~~~~~
                                     remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:56: error: template argument 1 is invalid
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:61: error: 'value' in namespace '::' does not name a type
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                             ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:626:59: note: suggested alternative: '_glue'
           bool = std::is_const<std::remove_reference_t<T>>::value,
                                                           ^~
                                                           _glue
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:8: error: 'apply_cv_impl' is not a class template
 struct apply_cv_impl<T, U, true, false> {
        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:638:39: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T, U, false, true> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:643:38: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T, U, true, true> {
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:648:41: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, false, false> {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:653:40: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, true, false> {
                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:658:40: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, false, true> {
                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:663:39: error: wrong number of template arguments (4, should be 2)
 struct apply_cv_impl<T&, U, true, true> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:633:39: note: provided for 'template<class T, class U> struct xt::detail::apply_cv_impl'
 struct apply_cv_impl<T, U, true, false> {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: error: 'decay_t' is not a member of 'std'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: note: suggested alternative: 'decay'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
                                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:57: note: suggested alternative: 'decay'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                         ^~~~~~~
                                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:65: error: template argument 1 is invalid
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:70: error: '::value' has not been declared
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                      ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:690:70: note: suggested alternative: '_glue'
   static constexpr bool value = detail::is_complex<std::decay_t<T>>::value;
                                                                      ^~~~~
                                                                      _glue
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In function 'constexpr xt::detail::forward_type_t<T, M> xt::forward_offset(T&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:733:30: error: 'remove_reference_t' in namespace 'std' does not name a template type
   using cv_value_type = std::remove_reference_t<forward_type>;
                              ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:733:25: note: suggested alternative: 'remove_reference'
   using cv_value_type = std::remove_reference_t<forward_type>;
                         ^~~
                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: error: 'remove_reference_t' is not a member of 'std'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: note: suggested alternative: 'remove_reference'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
                                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:41: note: suggested alternative: 'remove_reference'
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                         ^~~~~~~~~~~~~~~~~~
                                         remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:734:61: error: wrong number of template arguments (1, should be 2)
   using byte_type     = apply_cv_t<std::remove_reference_t<T>, char>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:674:49: note: provided for 'template<class T, class U> using apply_cv_t = typename xt::apply_cv::type'
 using apply_cv_t = typename apply_cv<T, U>::type;
                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:23: error: 'cv_value_type' does not name a type; did you mean 'complex_value_type'?
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                       ^~~~~~~~~~~~~
                       complex_value_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:36: error: expected '>' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:36: error: expected '(' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                    ^
                                    (
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:37: error: expected primary-expression before '>' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:56: error: 'byte_type' does not name a type; did you mean 'pbuf_type'?
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                        ^~~~~~~~~
                                                        pbuf_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:65: error: expected '>' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:65: error: expected '(' before '*' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                 ^
                                                                 (
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:66: error: expected primary-expression before '>' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:77: error: expected ')' before ';' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                             ^
                                                                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:737:77: error: expected ')' before ';' token
     *reinterpret_cast<cv_value_type*>(reinterpret_cast<byte_type*>(&v) + I));
                                                                             ^
                                                                             )
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<!is_complex<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<!is_complex<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:748:22: error: expected initializer before '<' token
   -> std::enable_if_t<!is_complex<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:34: error: 'enable_if_t' in namespace 'std' does not name a template type
 auto forward_real(T&& v) -> std::enable_if_t<
                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:29: note: suggested alternative: 'enable_if'
 auto forward_real(T&& v) -> std::enable_if_t<
                             ^~~
                             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:755:45: error: expected initializer before '<' token
 auto forward_real(T&& v) -> std::enable_if_t<
                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<!is_complex<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<!is_complex<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:770:22: error: expected initializer before '<' token
   -> std::enable_if_t<!is_complex<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:34: error: 'enable_if_t' in namespace 'std' does not name a template type
 auto forward_imag(T&& v) -> std::enable_if_t<
                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:29: note: suggested alternative: 'enable_if'
 auto forward_imag(T&& v) -> std::enable_if_t<
                             ^~~
                             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:777:45: error: expected initializer before '<' token
 auto forward_imag(T&& v) -> std::enable_if_t<
                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: error: 'remove_cv_t' is not a member of 'std'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:40: error: wrong number of template arguments (1, should be 2)
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                                        ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:796:41: error: expected unqualified-id before ',' token
 constexpr std::array<std::remove_cv_t<T>, N> to_array_impl(
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: error: 'remove_cv_t' is not a member of 'std'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:27: note: suggested alternative: 'remove_cv'
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                           ^~~~~~~~~~~
                           remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:40: error: wrong number of template arguments (1, should be 2)
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                                        ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:803:41: error: expected unqualified-id before ',' token
 constexpr std::array<std::remove_cv_t<T>, N> to_array(T (&a)[N]) {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:883:55: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(std::true_type, const TF& tf, const FF&) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:883:55: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:888:56: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(std::false_type, const TF&, const FF& ff) {
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:888:56: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:893:42: error: 'static_if' function uses 'auto' type specifier without trailing return type
 auto static_if(const TF& tf, const FF& ff) {
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:893:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:21: error: 'enable_if_t' in namespace 'std' does not name a template type
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                     ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:16: note: suggested alternative: 'enable_if'
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                ^~~
                enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:136:32: error: expected '>' before '<' token
     class    = std::enable_if_t<std::is_same<OW, acquire_ownership>::value>>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:29: error: 'enable_if_t' in namespace 'std' does not name a template type
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:24: note: suggested alternative: 'enable_if'
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                        ^~~
                        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:142:40: error: expected '>' before '<' token
             class    = std::enable_if_t<std::is_same<OW, no_ownership>::value>>
                                        ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp: In function 'constexpr xt::layout_type xt::detail::compute_layout_impl(xt::layout_type, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:61:21: error: 'underlying_type_t' in namespace 'std' does not name a template type
   using type = std::underlying_type_t<layout_type>;
                     ^~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:61:16: note: suggested alternative: 'underlying_type'
   using type = std::underlying_type_t<layout_type>;
                ^~~
                underlying_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: error: 'type' was not declared in this scope
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: note: suggested alternative: 'wctype'
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
                                  wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:21: error: expected primary-expression before '(' token
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:34: error: 'type' does not name a type; did you mean 'wctype'?
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                  ^~~~
                                  wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:62:59: error: 'type' does not name a type; did you mean 'wctype'?
   return layout_type(static_cast<type>(lhs) & static_cast<type>(rhs));
                                                           ^~~~
                                                           wctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xlayout.hpp:63:1: error: body of 'constexpr' function 'constexpr xt::layout_type xt::detail::compute_layout_impl(xt::layout_type, xt::layout_type)' not a return-statement
 }
 ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:133:33: error: 'conditional_t' in namespace 'std' does not name a template type
   using xexpression_type = std::conditional_t<is_const, const E, E>;
                                 ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:133:28: note: suggested alternative: 'conditional'
   using xexpression_type = std::conditional_t<is_const, const E, E>;
                            ^~~
                            conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:135:31: error: 'xexpression_type' has not been declared
   using value_type = typename xexpression_type::value_type;
                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:137:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const,
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:137:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const,
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:140:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:140:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:143:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:144:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:146:31: error: 'xexpression_type' has not been declared
   using shape_type = typename xexpression_type::shape_type;
                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:36: error: 'shape_type' was not declared in this scope
   using index_type = xindex_type_t<shape_type>;
                                    ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:36: note: suggested alternative: 'self_type'
   using index_type = xindex_type_t<shape_type>;
                                    ^~~~~~~~~~
                                    self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:147:46: error: template argument 1 is invalid
   using index_type = xindex_type_t<shape_type>;
                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:150:36: error: expected ')' before '*' token
   xindexed_stepper(xexpression_type* e,
                   ~                ^
                                    )
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:154:3: error: 'reference' does not name a type
   reference operator*() const;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:156:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:156:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:157:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:157:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:158:14: error: 'size_type' has not been declared
   void reset(size_type dim);
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:159:19: error: 'size_type' has not been declared
   void reset_back(size_type dim);
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:167:3: error: 'xexpression_type' does not name a type
   xexpression_type* p_e;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:168:3: error: 'index_type' does not name a type; did you mean 'xindex_type_t'?
   index_type m_index;
   ^~~~~~~~~~
   xindex_type_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:169:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type m_offset;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:267:36: error: 'trivial_begin' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_begin(C& c) noexcept {
                                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:267:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:272:34: error: 'trivial_end' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_end(C& c) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:272:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:277:42: error: 'trivial_begin' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_begin(const C& c) noexcept {
                                          ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:277:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:282:40: error: 'trivial_end' function uses 'auto' type specifier without trailing return type
 constexpr auto trivial_end(const C& c) noexcept {
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:282:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: ISO C++ forbids declaration of 'xindexed_stepper' with no type [-fpermissive]
 inline xindexed_stepper<C, is_const>::xindexed_stepper(xexpression_type* e,
                                                        ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: 'int xt::xindexed_stepper<E, is_const>::xindexed_stepper' is not a static data member of 'class xt::xindexed_stepper<E, is_const>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: template definition of non-template 'int xt::xindexed_stepper<E, is_const>::xindexed_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:56: error: 'xexpression_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:460:74: error: 'e' was not declared in this scope
 inline xindexed_stepper<C, is_const>::xindexed_stepper(xexpression_type* e,
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:461:56: error: 'size_type' was not declared in this scope
                                                        size_type offset,
                                                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:461:56: note: suggested alternative: 'self_type'
                                                        size_type offset,
                                                        ^~~~~~~~~
                                                        self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:462:56: error: expected primary-expression before 'bool'
                                                        bool end) noexcept
                                                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:472:65: error: 'reference' does not name a type
 inline auto xindexed_stepper<C, is_const>::operator*() const -> reference {
                                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: error: variable or field 'step' declared void
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:49: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:64: error: 'size_type' was not declared in this scope
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:477:64: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step(size_type dim, size_type n) {
                                                                ^~~~~~~~~
                                                                size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: error: variable or field 'step_back' declared void
 inline void xindexed_stepper<C, is_const>::step_back(size_type dim,
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:484:54: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::step_back(size_type dim,
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:485:54: error: 'size_type' was not declared in this scope
                                                      size_type n) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:485:54: note: suggested alternative: 'size_t'
                                                      size_type n) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: error: variable or field 'reset' declared void
 inline void xindexed_stepper<C, is_const>::reset(size_type dim) {
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:492:50: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::reset(size_type dim) {
                                                  ^~~~~~~~~
                                                  size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: error: variable or field 'reset_back' declared void
 inline void xindexed_stepper<C, is_const>::reset_back(size_type dim) {
                                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:499:55: note: suggested alternative: 'size_t'
 inline void xindexed_stepper<C, is_const>::reset_back(size_type dim) {
                                                       ^~~~~~~~~
                                                       size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'void xt::xindexed_stepper<E, is_const>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:13: error: 'm_index' was not declared in this scope
   std::fill(m_index.begin(), m_index.end(), size_type(0));
             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:13: note: suggested alternative: 'rindex'
   std::fill(m_index.begin(), m_index.end(), size_type(0));
             ^~~~~~~
             rindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:45: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
   std::fill(m_index.begin(), m_index.end(), size_type(0));
                                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:507:45: note: (if you use '-fpermissive', G++ will accept your code, but allowing the use of an undeclared name is deprecated)
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'void xt::xindexed_stepper<E, is_const>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:3: error: 'm_index' was not declared in this scope
   m_index = p_e->shape();
   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:3: note: suggested alternative: 'rindex'
   m_index = p_e->shape();
   ^~~~~~~
   rindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:13: error: 'p_e' was not declared in this scope
   m_index = p_e->shape();
             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:512:13: note: suggested alternative: 'pipe'
   m_index = p_e->shape();
             ^~~
             pipe
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In member function 'bool xt::xindexed_stepper<E, is_const>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:10: error: 'p_e' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
          ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:10: note: suggested alternative: 'pipe'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
          ^~~
          pipe
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:28: error: 'm_index' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:28: note: suggested alternative: 'rindex'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                            ^~~~~~~
                            rindex
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:54: error: 'm_offset' was not declared in this scope
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:517:54: note: suggested alternative: '_off_t'
   return p_e == rhs.p_e && m_index == rhs.m_index && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
                                                      _off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In constructor 'xt::xiterator<It, S, L>::xiterator(It, xt::xiterator<It, S, L>::shape_param_type, bool)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:17: error: 'forward_sequence' was not declared in this scope
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                 ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:17: note: suggested alternative: 'make_sequence'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                 ^~~~~~~~~~~~~~~~
                 make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:44: error: expected primary-expression before ',' token
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:46: error: expected primary-expression before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                              ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:45: error: expected ':' before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                             ^~~~~~
                                             :
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:571:46: error: expected primary-expression before 'const'
               ? forward_sequence<index_type, const shape_type&>(this->shape())
                                              ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:579:29: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                    [](const auto& v) { return v - 1; });
                             ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: error: 'decay_t' is not a member of 'std'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: note: suggested alternative: 'decay'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:45: note: suggested alternative: 'decay'
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                             ^~~~~~~
                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:53: error: template argument 1 is invalid
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:54: error: template argument 2 is invalid
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                      ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:125:56: error: expected unqualified-id before '>' token
 struct xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: error: 'decay_t' is not a member of 'std'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: note: suggested alternative: 'decay'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:51: note: suggested alternative: 'decay'
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:59: error: template argument 1 is invalid
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:60: error: template argument 2 is invalid
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                            ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:138:62: error: expected unqualified-id before '>' token
 struct const_xclosure<E, disable_xexpression<std::decay_t<E>>> {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: error: 'enable_if_t' is not a member of 'std'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: note: suggested alternative: 'enable_if'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
                                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: error: 'enable_if_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:33: note: suggested alternative: 'enable_if'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                 ^~~~~~~~~~~
                                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:64: error: type/value mismatch at argument 2 in template parameter list for 'template<class E, class enable> struct xt::detail::xvalue_type_impl'
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                                                ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:64: note:   expected a type, got '(<expression error> < xt::is_xexpression<E>::value)'
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:156:69: error: expected unqualified-id before '>' token
 struct xvalue_type_impl<E, std::enable_if_t<is_xexpression<E>::value>> {
                                                                     ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:39:33: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type       = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:39:28: note: suggested alternative: 'decay'
   using value_type       = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:52:32: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type      = std::decay_t<CT>;
                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:52:27: note: suggested alternative: 'decay'
   using value_type      = std::decay_t<CT>;
                           ^~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:53:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using reference       = value_type&;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:54:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_reference = const value_type&;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:54:32: error: expected ';' before 'value_type'
   using const_reference = const value_type&;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:55:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using pointer         = value_type*;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:56:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_pointer   = const value_type*;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:56:32: error: expected ';' before 'value_type'
   using const_pointer   = const value_type*;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:94:34: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using iterator               = value_type*;
                                  ^~~~~~~~~~
                                  xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:95:40: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_iterator         = const value_type*;
                                        ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:95:39: error: expected ';' before 'value_type'
   using const_iterator         = const value_type*;
                                       ^~~~~~~~~~~
                                       ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:96:64: error: type/value mismatch at argument 1 in template parameter list for 'template<class _Iterator> class std::reverse_iterator'
   using reverse_iterator       = std::reverse_iterator<iterator>;
                                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:96:64: note:   expected a type, got 'iterator'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:56: error: 'const_iterator' was not declared in this scope
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:56: note: suggested alternative: 'xconst_iterable'
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                        ^~~~~~~~~~~~~~
                                                        xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:97:70: error: template argument 1 is invalid
   using const_reverse_iterator = std::reverse_iterator<const_iterator>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:113:3: error: 'reference' does not name a type
   reference operator()(Args...) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:114:3: error: 'reference' does not name a type
   reference operator[](const xindex&) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:115:3: error: 'reference' does not name a type
   reference operator[](size_type) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:118:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args...) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:119:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex&) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:120:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:123:3: error: 'reference' does not name a type
   reference element(It, It) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:126:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It, It) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:135:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator begin() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:135:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:137:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator end() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:137:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:140:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator begin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:140:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:142:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator end() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:142:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:144:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator cbegin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:144:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:146:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator cend() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:146:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:149:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator rbegin() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:149:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:151:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator rend() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:151:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:154:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:154:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:156:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:156:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:158:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:158:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:160:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:160:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:191:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator storage_begin() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:191:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:193:3: error: invalid use of template-name 'std::iterator' without an argument list
   iterator storage_end() noexcept;
   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:193:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:196:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_begin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:196:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:198:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_end() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:198:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:200:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_cbegin() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:200:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:202:3: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
   const_iterator storage_cend() const noexcept;
   ^~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:202:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:205:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator storage_rbegin() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:205:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:207:3: error: invalid use of template-name 'std::reverse_iterator' without an argument list
   reverse_iterator storage_rend() noexcept;
   ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:207:3: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:210:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:210:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:212:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:212:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:214:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:214:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:216:3: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   const_reverse_iterator storage_crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:216:3: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:234:3: error: 'reference' does not name a type
   reference data_element(size_type i) noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:235:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference data_element(size_type i) const noexcept;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:260:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:260:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:262:31: error: 'container_type' has not been declared
   using value_type = typename container_type::value_type;
                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:263:27: error: 'conditional_t' in namespace 'std' does not name a template type
   using reference  = std::conditional_t<is_const,
                           ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:263:22: note: suggested alternative: 'conditional'
   using reference  = std::conditional_t<is_const,
                      ^~~
                      conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:266:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:266:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:269:36: error: 'container_type' has not been declared
   using size_type       = typename container_type::size_type;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:270:36: error: 'container_type' has not been declared
   using difference_type = typename container_type::difference_type;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:272:33: error: expected ')' before '*' token
   xscalar_stepper(container_type* c) noexcept;
                  ~              ^
                                 )
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:274:3: error: 'reference' does not name a type
   reference operator*() const noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:276:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1) noexcept;
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:276:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1) noexcept;
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:277:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1) noexcept;
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:277:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1) noexcept;
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:278:14: error: 'size_type' has not been declared
   void reset(size_type dim) noexcept;
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:279:19: error: 'size_type' has not been declared
   void reset_back(size_type dim) noexcept;
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:287:3: error: 'container_type' does not name a type; did you mean 'xvalue_type'?
   container_type* p_c;
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:307:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:307:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xscalar<CT>, xscalar<CT>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:309:31: error: 'container_type' has not been declared
   using value_type = typename container_type::value_type;
                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:310:27: error: 'conditional_t' in namespace 'std' does not name a template type
   using reference  = std::conditional_t<is_const,
                           ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:310:22: note: suggested alternative: 'conditional'
   using reference  = std::conditional_t<is_const,
                      ^~~
                      conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:313:24: error: 'conditional_t' in namespace 'std' does not name a template type
   using pointer = std::conditional_t<is_const,
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:313:19: note: suggested alternative: 'conditional'
   using pointer = std::conditional_t<is_const,
                   ^~~
                   conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:316:38: error: 'container_type' has not been declared
   using difference_type   = typename container_type::difference_type;
                                      ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:319:42: error: expected ')' before '*' token
   explicit xdummy_iterator(container_type* c) noexcept;
                           ~              ^
                                          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:324:3: error: 'reference' does not name a type
   reference operator*() const noexcept;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:329:3: error: 'container_type' does not name a type; did you mean 'xvalue_type'?
   container_type* p_c;
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:399:58: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator()(Args...) noexcept -> reference {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:404:64: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator[](const xindex&) noexcept -> reference {
                                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:409:60: error: 'reference' does not name a type
 inline auto xscalar<CT>::operator[](size_type) noexcept -> reference {
                                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:415:64: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::operator()(Args...) const noexcept -> const_reference {
                                                                ^~~~~~~~~~~~~~~
                                                                xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:421:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:427:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:433:54: error: 'reference' does not name a type
 inline auto xscalar<CT>::element(It, It) noexcept -> reference {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:439:60: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::element(It, It) const noexcept -> const_reference {
                                                            ^~~~~~~~~~~~~~~
                                                            xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:457:46: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::begin() noexcept -> iterator {
                                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:457:46: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:463:44: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::end() noexcept -> iterator {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:463:44: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:469:52: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::begin() const noexcept -> const_iterator {
                                                    ^~~~~~~~~~~~~~
                                                    xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:469:52: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:475:50: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::end() const noexcept -> const_iterator {
                                                  ^~~~~~~~~~~~~~
                                                  xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:475:50: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:481:53: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::cbegin() const noexcept -> const_iterator {
                                                     ^~~~~~~~~~~~~~
                                                     xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:481:53: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:487:51: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::cend() const noexcept -> const_iterator {
                                                   ^~~~~~~~~~~~~~
                                                   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:487:51: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:493:47: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::rbegin() noexcept -> reverse_iterator {
                                               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:493:47: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:499:45: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::rend() noexcept -> reverse_iterator {
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:499:45: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:505:53: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::rbegin() const noexcept -> const_reverse_iterator {
                                                     ^~~~~~~~~~~~~~~~~~~~~~
                                                     nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:505:53: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:511:51: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::rend() const noexcept -> const_reverse_iterator {
                                                   ^~~~~~~~~~~~~~~~~~~~~~
                                                   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:511:51: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:517:54: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::crbegin() const noexcept -> const_reverse_iterator {
                                                      ^~~~~~~~~~~~~~~~~~~~~~
                                                      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:517:54: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:523:52: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xscalar<CT>::crend() const noexcept -> const_reverse_iterator {
                                                    ^~~~~~~~~~~~~~~~~~~~~~
                                                    nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:523:52: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:617:54: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::storage_begin() noexcept -> iterator {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:617:54: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:623:52: error: invalid use of template-name 'std::iterator' without an argument list
 inline auto xscalar<CT>::storage_end() noexcept -> iterator {
                                                    ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:623:52: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator_base_types.h:118:12: note: 'template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator' declared here
     struct iterator
            ^~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:629:60: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_begin() const noexcept -> const_iterator {
                                                            ^~~~~~~~~~~~~~
                                                            xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:629:60: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:635:58: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_end() const noexcept -> const_iterator {
                                                          ^~~~~~~~~~~~~~
                                                          xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:635:58: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:641:61: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_cbegin() const noexcept -> const_iterator {
                                                             ^~~~~~~~~~~~~~
                                                             xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:641:61: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:647:59: error: 'const_iterator' does not name a type; did you mean 'xconst_iterable'?
 inline auto xscalar<CT>::storage_cend() const noexcept -> const_iterator {
                                                           ^~~~~~~~~~~~~~
                                                           xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:647:59: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:653:55: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::storage_rbegin() noexcept -> reverse_iterator {
                                                       ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:653:55: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:659:53: error: invalid use of template-name 'std::reverse_iterator' without an argument list
 inline auto xscalar<CT>::storage_rend() noexcept -> reverse_iterator {
                                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:659:53: note: class template argument deduction is only available with -std=c++17 or -std=gnu++17
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_algobase.h:67,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/vector:60,
                 from ../components/EVXLEDController/EVXLEDController.h:11,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_iterator.h:101:11: note: 'template<class _Iterator> class std::reverse_iterator' declared here
     class reverse_iterator
           ^~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:666:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:666:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:673:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:673:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:680:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:680:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:687:6: error: 'const_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   -> const_reverse_iterator {
      ^~~~~~~~~~~~~~~~~~~~~~
      nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:687:6: note: (perhaps 'typename xt::xiterable<xt::xscalar<CT> >::const_reverse_iterator' was intended)
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:739:62: error: 'reference' does not name a type
 inline auto xscalar<CT>::data_element(size_type) noexcept -> reference {
                                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:745:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: ISO C++ forbids declaration of 'xscalar_stepper' with no type [-fpermissive]
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: 'int xt::xscalar_stepper<is_const, CT>::xscalar_stepper' is not a static data member of 'class xt::xscalar_stepper<is_const, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: template definition of non-template 'int xt::xscalar_stepper<is_const, CT>::xscalar_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: error: 'container_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:3: note: suggested alternative: 'xvalue_type'
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:765:19: error: 'c' was not declared in this scope
   container_type* c) noexcept
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:770:6: error: 'reference' does not name a type
   -> reference {
      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: error: variable or field 'step' declared void
 inline void xscalar_stepper<is_const, CT>::step(size_type /*dim*/,
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:775:49: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::step(size_type /*dim*/,
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:776:49: error: 'size_type' was not declared in this scope
                                                 size_type /*n*/) noexcept {}
                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:776:49: note: suggested alternative: 'size_t'
                                                 size_type /*n*/) noexcept {}
                                                 ^~~~~~~~~
                                                 size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: error: variable or field 'step_back' declared void
 inline void xscalar_stepper<is_const, CT>::step_back(size_type /*dim*/,
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:779:54: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::step_back(size_type /*dim*/,
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:780:54: error: 'size_type' was not declared in this scope
                                                      size_type /*n*/) noexcept {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:780:54: note: suggested alternative: 'size_t'
                                                      size_type /*n*/) noexcept {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:67: error: variable or field 'reset' declared void
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:50: error: 'size_type' was not declared in this scope
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:784:50: note: suggested alternative: 'size_t'
 inline void xscalar_stepper<is_const, CT>::reset(size_type /*dim*/) noexcept {}
                                                  ^~~~~~~~~
                                                  size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:20: error: variable or field 'reset_back' declared void
   size_type /*dim*/) noexcept {}
                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:3: error: 'size_type' was not declared in this scope
   size_type /*dim*/) noexcept {}
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:788:3: note: suggested alternative: 'size_t'
   size_type /*dim*/) noexcept {}
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'void xt::xscalar_stepper<is_const, CT>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:792:3: error: 'p_c' was not declared in this scope
   p_c = p_c->stepper_begin(p_c->shap()).pc;
   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:792:3: note: suggested alternative: 'or_c'
   p_c = p_c->stepper_begin(p_c->shap()).pc;
   ^~~
   or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'void xt::xscalar_stepper<is_const, CT>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:797:3: error: 'p_c' was not declared in this scope
   p_c = p_c->stepper_end(p_c->shape(), l).p_c;
   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:797:3: note: suggested alternative: 'or_c'
   p_c = p_c->stepper_end(p_c->shape(), l).p_c;
   ^~~
   or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'bool xt::xscalar_stepper<is_const, CT>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:803:11: error: 'p_c' was not declared in this scope
   return (p_c == rhs.p_c);
           ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:803:11: note: suggested alternative: 'or_c'
   return (p_c == rhs.p_c);
           ^~~
           or_c
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: ISO C++ forbids declaration of 'xdummy_iterator' with no type [-fpermissive]
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: 'int xt::xdummy_iterator<is_const, CT>::xdummy_iterator' is not a static data member of 'class xt::xdummy_iterator<is_const, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: template definition of non-template 'int xt::xdummy_iterator<is_const, CT>::xdummy_iterator'
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: error: 'container_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:3: note: suggested alternative: 'xvalue_type'
   container_type* c) noexcept
   ^~~~~~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:824:19: error: 'c' was not declared in this scope
   container_type* c) noexcept
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:842:6: error: 'reference' does not name a type
   -> reference {
      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp: In member function 'bool xt::xdummy_iterator<is_const, CT>::equal(const self_type&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:849:10: error: 'p_c' was not declared in this scope
   return p_c == rhs.p_c;
          ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xscalar.hpp:849:10: note: suggested alternative: 'or_c'
   return p_c == rhs.p_c;
          ^~~
          or_c
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:22:44: error: 'compute_size' function uses 'auto' type specifier without trailing return type
 auto compute_size(const shape_type& shape) noexcept;
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:22:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: In function 'It xt::strided_data_end(const C&, It, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:76:32: error: 'decay_t' in namespace 'std' does not name a template type
   using strides_type    = std::decay_t<decltype(c.strides())>;
                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:76:27: note: suggested alternative: 'decay'
   using strides_type    = std::decay_t<decltype(c.strides())>;
                           ^~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:84:41: error: 'strides_type' has not been declared
       std::max(leading_stride, typename strides_type::value_type(1));
                                         ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:94:51: error: 'compute_size' function uses 'auto' type specifier without trailing return type
 inline auto compute_size(const shape_type& shape) noexcept {
                                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:94:51: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp: In function 'auto xt::compute_size(const shape_type&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:95:26: error: 'decay_t' in namespace 'std' does not name a template type
   using size_type = std::decay_t<typename shape_type::value_type>;
                          ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:95:21: note: suggested alternative: 'decay'
   using size_type = std::decay_t<typename shape_type::value_type>;
                     ^~~
                     decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:96:56: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
   return std::accumulate(shape.cbegin(), shape.cend(), size_type(1),
                                                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:42: error: 'size_type' was not declared in this scope
                          std::multiplies<size_type>());
                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:42: note: suggested alternative: 'shape_type'
                          std::multiplies<size_type>());
                                          ^~~~~~~~~
                                          shape_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xstrides.hpp:97:51: error: template argument 1 is invalid
                          std::multiplies<size_type>());
                                                   ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:37:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<typename Args::size_type...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:37:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<typename Args::size_type...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:54:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<typename Args::difference_type...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:54:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<typename Args::difference_type...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:71:21: error: 'common_type_t' in namespace 'std' does not name a template type
   using type = std::common_type_t<xvalue_type_t<Args>...>;
                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:71:16: note: suggested alternative: 'common_type'
   using type = std::common_type_t<xvalue_type_t<Args>...>;
                ^~~
                common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:35: error: 'decay_t' in namespace 'std' does not name a template type
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:35: note: suggested alternative: 'decay'
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                   ^~~~~~~
                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:42: error: expected template-argument before '<' token
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:42: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:90:61: error: template argument 1 is invalid
     promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: error: 'decay_t' is not a member of 'std'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: note: suggested alternative: 'decay'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
                                                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:59: note: suggested alternative: 'decay'
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                           ^~~~~~~
                                                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:124:69: error: template argument 1 is invalid
   using size_type       = detail::common_size_type_t<std::decay_t<CT>...>;
                                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: error: 'decay_t' is not a member of 'std'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: note: suggested alternative: 'decay'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
                                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:65: note: suggested alternative: 'decay'
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                 ^~~~~~~
                                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:125:75: error: template argument 1 is invalid
   using difference_type = detail::common_difference_type_t<std::decay_t<CT>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:25: error: 'decay_t' is not a member of 'std'
     compute_layout(std::decay_t<CT>::static_layout...);
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:25: note: suggested alternative: 'decay'
     compute_layout(std::decay_t<CT>::static_layout...);
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:35: error: expected primary-expression before '>' token
     compute_layout(std::decay_t<CT>::static_layout...);
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:38: error: '::static_layout' has not been declared
     compute_layout(std::decay_t<CT>::static_layout...);
                                      ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:135:38: note: suggested alternative: 'static_assert'
     compute_layout(std::decay_t<CT>::static_layout...);
                                      ^~~~~~~~~~~~~
                                      static_assert
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: error: 'decay_t' is not a member of 'std'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: note: suggested alternative: 'decay'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:16: note: suggested alternative: 'decay'
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                ^~~~~~~
                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:26: error: template argument 1 is invalid
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:29: error: expected ';' at end of member declaration
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                             ^~~~~~~~~~~~~~~~~
                                              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:137:46: error: expected unqualified-id before '...' token
     and_c<std::decay_t<CT>::contiguous_layout...>::value;
                                              ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:178:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:179:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:187:30: error: 'size_type' has not been declared
   const_reference operator[](size_type i) const;
                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:230:32: error: 'size_type' has not been declared
   const_reference data_element(size_type i) const;
                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:234:32: error: 'std::index_sequence' has not been declared
   layout_type layout_impl(std::index_sequence<I...>) const noexcept;
                                ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:234:46: error: expected ',' or '...' before '<' token
   layout_type layout_impl(std::index_sequence<I...>) const noexcept;
                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:237:36: error: 'std::index_sequence' has not been declared
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
                                    ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:237:50: error: expected ',' or '...' before '<' token
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:240:44: error: 'std::index_sequence' has not been declared
   const_reference element_access_impl(std::index_sequence<I...>,
                                            ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:240:58: error: expected ',' or '...' before '<' token
   const_reference element_access_impl(std::index_sequence<I...>,
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:245:42: error: 'std::index_sequence' has not been declared
   const_reference data_element_impl(std::index_sequence<I...>,
                                          ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:245:56: error: expected ',' or '...' before '<' token
   const_reference data_element_impl(std::index_sequence<I...>,
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:249:46: error: 'std::index_sequence' has not been declared
   const_stepper build_stepper(Func&& f, std::index_sequence<I...>) const
                                              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:249:60: error: expected ',' or '...' before '<' token
   const_stepper build_stepper(Func&& f, std::index_sequence<I...>) const
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:254:46: error: 'std::index_sequence' has not been declared
                                         std::index_sequence<I...>) const
                                              ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:254:60: error: expected ',' or '...' before '<' token
                                         std::index_sequence<I...>) const
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:257:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type compute_dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:331:29: error: 'std::index_sequence' has not been declared
   reference deref_impl(std::index_sequence<I...>) const;
                             ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:331:43: error: expected ',' or '...' before '<' token
   reference deref_impl(std::index_sequence<I...>) const;
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:38: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:48: error: template argument 1 is invalid
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:50: error: expected parameter pack before '...'
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                  ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:334:53: error: template argument 1 is invalid
   std::tuple<get_iterator<const std::decay_t<CT>>...> m_it;
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:381:29: error: 'std::index_sequence' has not been declared
   reference deref_impl(std::index_sequence<I...>) const;
                             ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:381:43: error: expected ',' or '...' before '<' token
   reference deref_impl(std::index_sequence<I...>) const;
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:28: error: 'decay_t' in namespace 'std' does not name a template type
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:28: note: suggested alternative: 'decay'
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                            ^~~~~~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:35: error: expected template-argument before '<' token
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:35: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:384:57: error: template argument 1 is invalid
   std::tuple<typename std::decay_t<CT>::const_stepper...> m_it;
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In constructor 'xt::xfunction<F, R, CT>::xfunction(Func&&, CT ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:414:42: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
     m_shape(make_sequence<shape_type>(0, size_type(1))),
                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:426:62: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xfunction<F, R, CT...>::size() const noexcept -> size_type {
                                                              ^~~~~~~~~
                                                              self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:434:67: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xfunction<F, R, CT...>::dimension() const noexcept -> size_type {
                                                                   ^~~~~~~~~
                                                                   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'const shape_type& xt::xfunction<F, R, CT>::shape() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:445:41: error: there are no arguments to 'compute_dimension' that depend on a template parameter, so a declaration of 'compute_dimension' must be available [-fpermissive]
     m_shape = make_sequence<shape_type>(compute_dimension(), size_type(1));
                                         ^~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:445:62: error: there are no arguments to 'size_type' that depend on a template parameter, so a declaration of 'size_type' must be available [-fpermissive]
     m_shape = make_sequence<shape_type>(compute_dimension(), size_type(1));
                                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::layout_type xt::xfunction<F, R, CT>::layout() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:457:27: error: 'make_index_sequence' is not a member of 'std'
   return layout_impl(std::make_index_sequence<sizeof...(CT)>());
                           ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:457:62: error: expected primary-expression before ')' token
   return layout_impl(std::make_index_sequence<sizeof...(CT)>());
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_reference xt::xfunction<F, R, CT>::operator()(Args ...) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:481:27: error: 'make_index_sequence' is not a member of 'std'
   return access_impl(std::make_index_sequence<sizeof...(CT)>(),
                           ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:481:62: error: expected primary-expression before ')' token
   return access_impl(std::make_index_sequence<sizeof...(CT)>(),
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:482:34: error: 'size_type' does not name a type; did you mean 'self_type'?
                      static_cast<size_type>(args)...);
                                  ^~~~~~~~~
                                  self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: error: declaration of 'operator[]' as non-function
 inline auto xfunction<F, R, CT...>::operator[](size_type i) const
                                                ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:492:48: note: suggested alternative: 'size_t'
 inline auto xfunction<F, R, CT...>::operator[](size_type i) const
                                                ^~~~~~~~~
                                                size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_reference xt::xfunction<F, R, CT>::element(It, It) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:509:35: error: 'make_index_sequence' is not a member of 'std'
   return element_access_impl(std::make_index_sequence<sizeof...(CT)>(), first,
                                   ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:509:70: error: expected primary-expression before ')' token
   return element_access_impl(std::make_index_sequence<sizeof...(CT)>(), first,
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'bool xt::xfunction<F, R, CT>::broadcast_shape(S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:527:32: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [&shape](bool b, auto&& e) {
                                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:528:14: error: request for member 'broadcast_shape' in 'e', which is of non-class type 'int'
     return e.broadcast_shape(shape) && b;
              ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'bool xt::xfunction<F, R, CT>::is_trivial_broadcast(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:542:34: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [&strides](bool b, auto&& e) {
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:543:19: error: request for member 'is_trivial_broadcast' in 'e', which is of non-class type 'int'
     return b && e.is_trivial_broadcast(strides);
                   ^~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_storage_iterator xt::xfunction<F, R, CT>::storage_cbegin() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:567:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](const auto& e) noexcept { return detail::trivial_begin(e); };
                     ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In instantiation of 'constexpr auto xt::detail::trivial_begin(const C&) [with C = int]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:567:71:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:278:12: error: request for member 'storage_begin' in 'c', which is of non-class type 'const int'
   return c.storage_begin();
          ~~^~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:568:33: error: 'make_index_sequence' is not a member of 'std'
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                 ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:568:68: error: expected primary-expression before ')' token
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_storage_iterator xt::xfunction<F, R, CT>::storage_cend() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:575:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](const auto& e) noexcept { return detail::trivial_end(e); };
                     ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xiterable.hpp:12,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp: In instantiation of 'constexpr auto xt::detail::trivial_end(const C&) [with C = int]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:575:69:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xiterator.hpp:283:12: error: request for member 'storage_end' in 'c', which is of non-class type 'const int'
   return c.storage_end();
          ~~^~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:576:33: error: 'make_index_sequence' is not a member of 'std'
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                 ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:576:68: error: expected primary-expression before ')' token
   return build_iterator(f, std::make_index_sequence<sizeof...(CT)>());
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:611:27: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [&shape](const auto& e) noexcept { return e.stepper_begin(shape); };
                           ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:611:56: error: request for member 'stepper_begin' in 'e', which is of non-class type 'const int'
   auto f = [&shape](const auto& e) noexcept { return e.stepper_begin(shape); };
                                                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:612:32: error: 'make_index_sequence' is not a member of 'std'
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:612:67: error: expected primary-expression before ')' token
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:620:31: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [&shape, l ](const auto& e) noexcept {
                               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:621:14: error: request for member 'stepper_end' in 'e', which is of non-class type 'const int'
     return e.stepper_end(shape, l);
              ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction<F, R, CT>::const_stepper xt::xfunction<F, R, CT>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:623:32: error: 'make_index_sequence' is not a member of 'std'
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:623:67: error: expected primary-expression before ')' token
   return build_stepper(f, std::make_index_sequence<sizeof...(CT)>());
                                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::data_element(size_type i) const
                                                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: 'auto xt::xfunction<F, R, CT>::data_element' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::data_element'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:627:50: note: suggested alternative: 'self_type'
 inline auto xfunction<F, R, CT...>::data_element(size_type i) const
                                                  ^~~~~~~~~
                                                  self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const noexcept {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: 'xt::layout_type xt::xfunction<F, R, CT>::layout_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: template definition of non-template 'xt::layout_type xt::xfunction<F, R, CT>::layout_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:635:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::access_impl(std::index_sequence<I...>,
                                                      ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: 'auto xt::xfunction<F, R, CT>::access_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:641:54: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:642:53: error: expected primary-expression before '...' token
                                                 Args... args) const
                                                     ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>, It first, It last) const -> const_reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: 'auto xt::xfunction<F, R, CT>::element_access_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::element_access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:33: error: expected primary-expression before 'first'
   std::index_sequence<I...>, It first, It last) const -> const_reference {
                                 ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:650:43: error: expected primary-expression before 'last'
   std::index_sequence<I...>, It first, It last) const -> const_reference {
                                           ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xfunction<F, R, CT...>::data_element_impl(std::index_sequence<I...>,
                                                            ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: 'auto xt::xfunction<F, R, CT>::data_element_impl' is not a static data member of 'class xt::xfunction<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: template definition of non-template 'auto xt::xfunction<F, R, CT>::data_element_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:656:60: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:657:55: error: 'size_type' was not declared in this scope
                                                       size_type i) const
                                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:657:55: note: suggested alternative: 'self_type'
                                                       size_type i) const
                                                       ^~~~~~~~~
                                                       self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:665:18: error: 'std::index_sequence' has not been declared
   Func&& f, std::index_sequence<I...>) const noexcept -> const_stepper {
                  ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:665:32: error: expected ',' or '...' before '<' token
   Func&& f, std::index_sequence<I...>) const noexcept -> const_stepper {
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:672:18: error: 'std::index_sequence' has not been declared
   Func&& f, std::index_sequence<I...>) const noexcept
                  ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:672:32: error: expected ',' or '...' before '<' token
   Func&& f, std::index_sequence<I...>) const noexcept
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:679:6: error: 'size_type' does not name a type; did you mean 'self_type'?
   -> size_type {
      ^~~~~~~~~
      self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::self_type& xt::xfunction_iterator<F, R, CT>::operator++()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:698:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { ++it; };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::self_type& xt::xfunction_iterator<F, R, CT>::operator--()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:712:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { return --it; };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_iterator<F, R, CT>::reference xt::xfunction_iterator<F, R, CT>::operator*() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:726:26: error: 'make_index_sequence' is not a member of 'std'
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                          ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:726:61: error: expected primary-expression before ')' token
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const -> reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: 'auto xt::xfunction_iterator<F, R, CT>::deref_impl' is not a static data member of 'class xt::xfunction_iterator<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: template definition of non-template 'auto xt::xfunction_iterator<F, R, CT>::deref_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:737:8: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::step(xt::xfunction_stepper<F, R, CT>::size_type, xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:765:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim, n](auto& it) { it.step(dim, n); };
                     ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:765:36: error: request for member 'step' in 'it', which is of non-class type 'int'
   auto f = [dim, n](auto& it) { it.step(dim, n); };
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::step_back(xt::xfunction_stepper<F, R, CT>::size_type, xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:772:21: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim, n](auto& it) { it.step_back(dim, n); };
                     ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:772:36: error: request for member 'step_back' in 'it', which is of non-class type 'int'
   auto f = [dim, n](auto& it) { it.step_back(dim, n); };
                                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::reset(xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:778:18: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim](auto& it) { it.reset(dim); };
                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:778:33: error: request for member 'reset' in 'it', which is of non-class type 'int'
   auto f = [dim](auto& it) { it.reset(dim); };
                                 ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::reset_back(xt::xfunction_stepper<F, R, CT>::size_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:784:18: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [dim](auto& it) { it.reset_back(dim); };
                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:784:33: error: request for member 'reset_back' in 'it', which is of non-class type 'int'
   auto f = [dim](auto& it) { it.reset_back(dim); };
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:790:15: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [](auto& it) { it.to_begin(); };
               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:790:30: error: request for member 'to_begin' in 'it', which is of non-class type 'int'
   auto f = [](auto& it) { it.to_begin(); };
                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'void xt::xfunction_stepper<F, R, CT>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:796:16: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto f = [l](auto& it) { it.to_end(l); };
                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:796:31: error: request for member 'to_end' in 'it', which is of non-class type 'int'
   auto f = [l](auto& it) { it.to_end(l); };
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: In member function 'xt::xfunction_stepper<F, R, CT>::reference xt::xfunction_stepper<F, R, CT>::operator*() const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:802:26: error: 'make_index_sequence' is not a member of 'std'
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                          ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:802:61: error: expected primary-expression before ')' token
   return deref_impl(std::make_index_sequence<sizeof...(CT)>());
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   std::index_sequence<I...>) const -> reference {
        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: 'auto xt::xfunction_stepper<F, R, CT>::deref_impl' is not a static data member of 'class xt::xfunction_stepper<F, R, CT>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: template definition of non-template 'auto xt::xfunction_stepper<F, R, CT>::deref_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:813:8: error: 'index_sequence' is not a member of 'std'
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:46:38: error: 'make_xfunction' function uses 'auto' type specifier without trailing return type
 inline auto make_xfunction(E&&... e) noexcept {
                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:46:38: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'auto xt::detail::make_xfunction(E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: error: 'decay_t' is not a member of 'std'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:60: error: template argument 1 is invalid
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:61: error: expected parameter pack before '...'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:47:61: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:48:33: error: 'functor_type' has not been declared
   using result_type  = typename functor_type::result_type;
                                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:26: error: 'functor_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:26: note: suggested alternative: 'forward_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
                          forward_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:40: error: 'result_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:40: note: suggested alternative: 'layout_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
                                        layout_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:75: error: template argument 1 is invalid
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:49:75: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: error: 'decay_t' is not a member of 'std'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: note: suggested alternative: 'decay'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
                                          decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:42: note: suggested alternative: 'decay'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                          ^~~~~~~
                                          decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:51: error: template argument 1 is invalid
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:52: error: expected parameter pack before '...'
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                    ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:52: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:56:55: error: wrong number of template arguments (1, should be at least 2)
     xfunction<F<common_value_type_t<std::decay_t<E>...>>,
                                                       ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xfunction.hpp:85:7: note: provided for 'template<class F, class R, class ... CT> class xt::xfunction'
 class xfunction;
       ^~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:20,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:70:17: error: 'enable_if_t' in namespace 'std' does not name a template type
   typename std::enable_if_t<has_xexpression<std::decay_t<E>...>::value,
                 ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:70:17: note: suggested alternative: 'enable_if'
   typename std::enable_if_t<has_xexpression<std::decay_t<E>...>::value,
                 ^~~~~~~~~~~
                 enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<detail::identity, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<detail::identity, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:93:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<detail::identity, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::negate, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::negate, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:108:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::negate, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::plus, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::plus, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:124:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::plus, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::minus, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::minus, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:141:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::minus, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:158:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::multiplies, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::divides, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::divides, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:175:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::divides, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:196:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_or, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:213:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_and, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::logical_not, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::logical_not, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:229:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::logical_not, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::less, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::less, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:249:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::less, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:266:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::less_equal, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::greater, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::greater, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:283:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::greater, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:300:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::greater_equal, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:360:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::equal_to, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:377:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<std::not_equal_to, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:396:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<detail::conditional_ternary, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::any(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:466:22: error: 'decay_t' in namespace 'std' does not name a template type
   using xtype = std::decay_t<E>;
                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:466:17: note: suggested alternative: 'decay'
   using xtype = std::decay_t<E>;
                 ^~~
                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:467:7: error: 'xtype' has not been declared
   if (xtype::static_layout == layout_type::row_major ||
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:468:7: error: 'xtype' has not been declared
       xtype::static_layout == layout_type::column_major) {
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:471:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::any(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:475:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::all(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:490:22: error: 'decay_t' in namespace 'std' does not name a template type
   using xtype = std::decay_t<E>;
                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:490:17: note: suggested alternative: 'decay'
   using xtype = std::decay_t<E>;
                 ^~~
                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:491:7: error: 'xtype' has not been declared
   if (xtype::static_layout == layout_type::row_major ||
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:492:7: error: 'xtype' has not been declared
       xtype::static_layout == layout_type::column_major) {
       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:495:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In function 'bool xt::all(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:30: error: 'decay_t' in namespace 'std' does not name a template type
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:30: note: suggested alternative: 'decay'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                              ^~~~~~~
                              decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:37: error: expected ',' or '...' before '<' token
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:67: error: 'el' was not declared in this scope
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xoperation.hpp:499:67: note: suggested alternative: 'e'
       [](const typename std::decay_t<E>::value_type& el) { return el; });
                                                                   ^~
                                                                   e
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:32:35: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 auto broadcast(E&& e, const S& s) noexcept;
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:32:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:39:40: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 auto broadcast(E&& e, const I (&s)[L]) noexcept;
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:39:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:51:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:51:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:53:61: error: template argument 1 is invalid
     promote_shape_t<typename xexpression_type::shape_type, X>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:54:34: error: 'xexpression_type' has not been declared
   using const_stepper = typename xexpression_type::const_stepper;
                                  ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:55:25: error: 'const_stepper' does not name a type; did you mean 'constexpr'?
   using stepper       = const_stepper;
                         ^~~~~~~~~~~~~
                         constexpr
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:76:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:76:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:78:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:79:36: error: 'xexpression_type' has not been declared
   using reference       = typename xexpression_type::reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:80:36: error: 'xexpression_type' has not been declared
   using const_reference = typename xexpression_type::const_reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:81:36: error: 'xexpression_type' has not been declared
   using pointer         = typename xexpression_type::pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:82:36: error: 'xexpression_type' has not been declared
   using const_pointer   = typename xexpression_type::const_pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:83:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:84:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:93:48: error: 'xexpression_type' has not been declared
   static constexpr layout_type static_layout = xexpression_type::static_layout;
                                                ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:101:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:102:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:107:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:108:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:109:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:112:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:145:42: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 inline auto broadcast(E&& e, const S& s) noexcept {
                                          ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:145:42: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In function 'auto xt::broadcast(E&&, const S&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:45: error: 'forward_sequence' was not declared in this scope
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:45: note: suggested alternative: 'make_sequence'
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
                                             make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:24: error: expected primary-expression before '(' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:148:72: error: expected primary-expression before '>' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:161:47: error: 'broadcast' function uses 'auto' type specifier without trailing return type
 inline auto broadcast(E&& e, const I (&s)[L]) noexcept {
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:161:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In function 'auto xt::broadcast(E&&, const I (&)[L])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:45: error: 'forward_sequence' was not declared in this scope
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:45: note: suggested alternative: 'make_sequence'
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                             ^~~~~~~~~~~~~~~~
                                             make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:24: error: expected primary-expression before '(' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:165:72: error: expected primary-expression before '>' token
   return broadcast_type(std::forward<E>(e), forward_sequence<shape_type>(s));
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:199:57: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xbroadcast<CT, X>::size() const noexcept -> size_type {
                                                         ^~~~~~~~~
                                                         self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:207:62: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xbroadcast<CT, X>::dimension() const noexcept -> size_type {
                                                              ^~~~~~~~~
                                                              self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:244:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:259:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: error: declaration of 'operator[]' as non-function
 inline auto xbroadcast<CT, X>::operator[](size_type i) const
                                           ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:264:43: note: suggested alternative: 'size_t'
 inline auto xbroadcast<CT, X>::operator[](size_type i) const
                                           ^~~~~~~~~
                                           size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:279:62: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xbroadcast<CT, X>::element(It, It last) const -> const_reference {
                                                              ^~~~~~~~~~~~~~~
                                                              xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp: In member function 'bool xt::xbroadcast<CT, X>::is_trivial_broadcast(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:308:10: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   return dimension() == m_e.dimension() &&
          ^~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:25,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:268:63: error: 'make_xgenerator' function uses 'auto' type specifier without trailing return type
 inline auto make_xgenerator(Functor&& f, const I (&shape)[L]) noexcept {
                                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:268:63: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: In function 'auto xt::detail::make_xgenerator(Functor&&, const I (&)[L])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:41: error: 'forward_sequence' was not declared in this scope
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                         ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:41: note: suggested alternative: 'make_sequence'
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                         ^~~~~~~~~~~~~~~~
                                         make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:14: error: expected primary-expression before '(' token
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:271:68: error: expected primary-expression before '>' token
   return type(std::forward<Functor>(f), forward_sequence<shape_type>(shape));
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:276:53: error: 'make_xgenerator' function uses 'auto' type specifier without trailing return type
 inline auto make_xgenerator(Functor&& f, S&& shape) noexcept {
                                                     ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:276:53: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp: In function 'auto xt::detail::make_xgenerator(Functor&&, S&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: error: 'decay_t' is not a member of 'std'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: note: suggested alternative: 'decay'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
                                                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:60: note: suggested alternative: 'decay'
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                            ^~~~~~~
                                                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xgenerator.hpp:278:68: error: template argument 3 is invalid
     xgenerator<Functor, typename Functor::value_type, std::decay_t<S>>;
                                                                    ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:42:27: error: 'ones' function uses 'auto' type specifier without trailing return type
 inline auto ones(S shape) noexcept {
                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:42:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:53:39: error: 'ones' function uses 'auto' type specifier without trailing return type
 inline auto ones(const I (&shape)[L]) noexcept {
                                       ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:53:39: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:67:28: error: 'zeros' function uses 'auto' type specifier without trailing return type
 inline auto zeros(S shape) noexcept {
                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:67:28: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:78:40: error: 'zeros' function uses 'auto' type specifier without trailing return type
 inline auto zeros(const I (&shape)[L]) noexcept {
                                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:78:40: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:175:65: error: 'eye' function uses 'auto' type specifier without trailing return type
 inline auto eye(const std::vector<std::size_t>& shape, int k = 0) {
                                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:175:65: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:190:41: error: 'eye' function uses 'auto' type specifier without trailing return type
 inline auto eye(std::size_t n, int k = 0) {
                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:190:41: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:204:49: error: 'arange' function uses 'auto' type specifier without trailing return type
 inline auto arange(T start, T stop, T step = 1) noexcept {
                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:204:49: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:219:28: error: 'arange' function uses 'auto' type specifier without trailing return type
 inline auto arange(T stop) noexcept {
                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:219:28: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:236:54: error: 'linspace' function uses 'auto' type specifier without trailing return type
                      bool endpoint           = true) noexcept {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:236:54: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:259:44: error: 'logspace' function uses 'auto' type specifier without trailing return type
                      bool endpoint = true) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:259:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:270:10: error: 'common_type_t' in namespace 'std' does not name a template type
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:270:5: note: suggested alternative: 'common_type'
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
     ^~~
     common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:276:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:282:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:288:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(xindex idx) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:317:10: error: 'common_type_t' in namespace 'std' does not name a template type
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:317:5: note: suggested alternative: 'common_type'
     std::common_type_t<typename std::decay_t<CT>::value_type...>;
     ^~~
     common_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:323:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:329:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:335:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(xindex idx) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:349:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:349:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:350:37: error: 'xexpression_type' has not been declared
   using size_type        = typename xexpression_type::size_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:351:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:354:29: error: 'size_type' has not been declared
   repeat_impl(CTA&& source, size_type axis)
                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:358:3: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   value_type operator()(Args... args) const {
   ^~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:365:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:371:3: error: 'size_type' does not name a type; did you mean 'size_t'?
   size_type m_axis;
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In constructor 'xt::detail::repeat_impl<CT>::repeat_impl(CTA&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:355:44: error: class 'xt::detail::repeat_impl<CT>' does not have any field named 'm_axis'
     : m_source(std::forward<CTA>(source)), m_axis(axis) {}
                                            ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:380:35: error: 'xtuple' function uses 'auto' type specifier without trailing return type
 inline auto xtuple(Types&&... args) {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:380:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:401:68: error: 'concatenate' function uses 'auto' type specifier without trailing return type
 inline auto concatenate(std::tuple<CT...>&& t, std::size_t axis = 0) {
                                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:401:68: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::concatenate(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:52: error: 'decay_t' in namespace 'std' does not name a template type
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:52: note: suggested alternative: 'decay'
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:59: error: expected template-argument before '<' token
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:402:78: error: template argument 1 is invalid
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:403:3: error: 'shape_type' was not declared in this scope
   shape_type new_shape = forward_sequence<shape_type>(std::get<0>(t).shape());
   ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:403:3: note: suggested alternative: 'xvalue_type'
   shape_type new_shape = forward_sequence<shape_type>(std::get<0>(t).shape());
   ^~~~~~~~~~
   xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:404:52: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto shape_at_axis   = [&axis](std::size_t prev, auto& arr) -> std::size_t {
                                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In lambda function:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:405:23: error: request for member 'shape' in 'arr', which is of non-class type 'int'
     return prev + arr.shape()[axis];
                       ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::concatenate(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:407:3: error: 'new_shape' was not declared in this scope
   new_shape[axis] +=
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:407:3: note: suggested alternative: 'check_shape'
   new_shape[axis] +=
   ^~~~~~~~~
   check_shape
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:454:62: error: 'stack' function uses 'auto' type specifier without trailing return type
 inline auto stack(std::tuple<CT...>&& t, std::size_t axis = 0) {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:454:62: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::stack(std::tuple<_Tps ...>&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:52: error: 'decay_t' in namespace 'std' does not name a template type
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:52: note: suggested alternative: 'decay'
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:59: error: expected template-argument before '<' token
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:455:78: error: template argument 1 is invalid
   using shape_type = promote_shape_t<typename std::decay_t<CT>::shape_type...>;
                                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:5: error: 'forward_sequence' was not declared in this scope
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:5: note: suggested alternative: 'make_sequence'
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
     ^~~~~~~~~~~~~~~~
     make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:22: error: 'shape_type' was not declared in this scope
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
                      ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:457:22: note: suggested alternative: 'xvalue_type'
     forward_sequence<shape_type>(std::get<0>(t).shape()), axis, sizeof...(CT));
                      ^~~~~~~~~~
                      xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:32: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:32: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:55: error: expected primary-expression before '&&' token
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                       ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:62: error: expression list treated as compound expression in initializer [-fpermissive]
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:13: warning: variable templates only available with -std=c++14 or -std=gnu++14
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
             ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:466:63: error: expected ';' before 'noexcept'
 inline auto meshgrid_impl(std::index_sequence<I...>, E&&... e) noexcept {
                                                               ^~~~~~~~~
                                                               ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:490:32: error: 'meshgrid' function uses 'auto' type specifier without trailing return type
 inline auto meshgrid(E&&... e) noexcept {
                                ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:490:32: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::meshgrid(E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:31: error: missing template arguments before '(' token
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:37: error: 'make_index_sequence' is not a member of 'std'
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                                     ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:491:71: error: expected primary-expression before ')' token
   return detail::meshgrid_impl(std::make_index_sequence<sizeof...(E)>(),
                                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:499:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:499:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:500:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:510:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:540:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:540:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:541:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:547:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:566:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:566:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:567:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:568:37: error: 'xexpression_type' has not been declared
   using size_type        = typename xexpression_type::size_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:577:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(Args... args) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:584:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type element(It first, It last) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:592:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type access_impl(It begin, It end) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:600:9: error: 'size_type' does not name a type; did you mean 'size_t'?
   const size_type m_axis;
         ^~~~~~~~~
         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:601:9: error: 'size_type' does not name a type; did you mean 'size_t'?
   const size_type m_shape_at_axis;
         ^~~~~~~~~
         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In constructor 'xt::detail::flip_impl<CT>::flip_impl(CTA&&, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:573:7: error: class 'xt::detail::flip_impl<CT>' does not have any field named 'm_axis'
       m_axis(axis),
       ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:7: error: class 'xt::detail::flip_impl<CT>' does not have any field named 'm_shape_at_axis'
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
       ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:40: error: 'm_axis' was not declared in this scope
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
                                        ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:574:40: note: suggested alternative: 'axis'
       m_shape_at_axis(m_source.shape()[m_axis] - 1) {}
                                        ^~~~~~
                                        axis
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:607:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:607:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:608:37: error: 'xexpression_type' has not been declared
   using value_type       = typename xexpression_type::value_type;
                                     ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:616:10: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   inline value_type operator()(It begin, It end) const {
          ^~~~~~~~~~
          xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:671:44: error: 'diagonal' function uses 'auto' type specifier without trailing return type
                      std::size_t axis_2 = 1) {
                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:671:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: In function 'auto xt::diagonal(E&&, int, std::size_t, std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:19: error: 'decay_t' in namespace 'std' does not name a template type
     typename std::decay_t<E>::shape_type>::type;
                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:19: note: suggested alternative: 'decay'
     typename std::decay_t<E>::shape_type>::type;
                   ^~~~~~~
                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:26: error: expected template-argument before '<' token
     typename std::decay_t<E>::shape_type>::type;
                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:26: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:674:41: error: template argument 1 is invalid
     typename std::decay_t<E>::shape_type>::type;
                                         ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:23,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:682:34: error: 'shape_type' was not declared in this scope
   auto ret_shape = make_sequence<shape_type>(dimension - 1, 0);
                                  ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:682:34: note: suggested alternative: 'xvalue_type'
   auto ret_shape = make_sequence<shape_type>(dimension - 1, 0);
                                  ^~~~~~~~~~
                                  xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:720:36: error: 'diag' function uses 'auto' type specifier without trailing return type
 inline auto diag(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:720:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:741:43: error: 'flip' function uses 'auto' type specifier without trailing return type
 inline auto flip(E&& arr, std::size_t axis) {
                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:741:43: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:760:36: error: 'tril' function uses 'auto' type specifier without trailing return type
 inline auto tril(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:760:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:782:36: error: 'triu' function uses 'auto' type specifier without trailing return type
 inline auto triu(E&& arr, int k = 0) {
                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:782:36: note: deduced return type only available with -std=c++14 or -std=gnu++14
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:37:37: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e, X&& axes) noexcept;
                                     ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:37:37: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:40:27: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e) noexcept;
                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:40:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:47:47: error: 'reduce' function uses 'auto' type specifier without trailing return type
 auto reduce(F&& f, E&& e, const I (&axes)[N]) noexcept;
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:47:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:65:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:65:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:68:35: error: wrong number of template arguments (1, should be 2)
                                  X>::type;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:55:8: note: provided for 'template<class ST, class X> struct xt::xreducer_shape_type'
 struct xreducer_shape_type;
        ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:67:14: error: expected nested-name-specifier
     typename xreducer_shape_type<typename xexpression_type::shape_type,
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  X>::type;
                                  ~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:93:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:93:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:96:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:97:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using reference       = value_type;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:98:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using const_reference = value_type;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:99:27: error: 'value_type' does not name a type; did you mean 'xvalue_type'?
   using pointer         = value_type*;
                           ^~~~~~~~~~
                           xvalue_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:100:33: error: ISO C++ forbids declaration of 'type name' with no type [-fpermissive]
   using const_pointer   = const value_type*;
                                 ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:100:32: error: expected ';' before 'value_type'
   using const_pointer   = const value_type*;
                                ^~~~~~~~~~~
                                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:102:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:103:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:118:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:119:3: error: 'size_type' does not name a type; did you mean 'self_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:124:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:125:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:126:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:129:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It first, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:169:44: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e, X&& axes) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:169:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:176:34: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:176:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:193:54: error: 'reduce' function uses 'auto' type specifier without trailing return type
 inline auto reduce(F&& f, E&& e, const I (&axes)[N]) noexcept {
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:193:54: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In function 'auto xt::reduce(F&&, E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:49: error: 'decay_t' in namespace 'std' does not name a template type
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:49: note: suggested alternative: 'decay'
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                 ^~~~~~~
                                                 decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:56: error: expected template-argument before '<' token
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:56: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:194:73: error: wrong number of template arguments (1, should be 2)
   using axes_type    = std::array<typename std::decay_t<E>::size_type, N>;
                                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/tuple:39,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_map.h:63,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:61,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/array:94:12: note: provided for 'template<class _Tp, unsigned int _Nm> struct std::array'
     struct array
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:21,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:57: error: 'axes_type' was not declared in this scope
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:57: note: suggested alternative: 'pbuf_type'
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                         ^~~~~~~~~
                                                         pbuf_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:195:66: error: template argument 3 is invalid
   using reducer_type = xreducer<F, const_xclosure_t<E>, axes_type>;
                                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:197:23: error: 'forward_sequence' was not declared in this scope
                       forward_sequence<axes_type>(axes));
                       ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:197:23: note: suggested alternative: 'make_sequence'
                       forward_sequence<axes_type>(axes));
                       ^~~~~~~~~~~~~~~~
                       make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: error: 'decay_t' is not a member of 'std'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: note: suggested alternative: 'decay'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:41: note: suggested alternative: 'decay'
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                         ^~~~~~~
                                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:266:49: error: template argument 2 is invalid
   using type = promote_shape_t<ST, std::decay_t<X>>;
                                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:343:58: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xreducer<F, CT, X>::size() const noexcept -> size_type {
                                                          ^~~~~~~~~
                                                          self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:351:63: error: 'size_type' does not name a type; did you mean 'self_type'?
 inline auto xreducer<F, CT, X>::dimension() const noexcept -> size_type {
                                                               ^~~~~~~~~
                                                               self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:387:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:404:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: error: declaration of 'operator[]' as non-function
 inline auto xreducer<F, CT, X>::operator[](size_type i) const
                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:409:44: note: suggested alternative: 'size_t'
 inline auto xreducer<F, CT, X>::operator[](size_type i) const
                                            ^~~~~~~~~
                                            size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:425:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In member function 'xt::xreducer<F, CT, X>::const_stepper xt::xreducer<F, CT, X>::stepper_begin(const S&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:467:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:467:3: note: suggested alternative: 'self_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:468:31: error: 'offset' was not declared in this scope
   return const_stepper(*this, offset);
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:468:31: note: suggested alternative: 'off_t'
   return const_stepper(*this, offset);
                               ^~~~~~
                               off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp: In member function 'xt::xreducer<F, CT, X>::const_stepper xt::xreducer<F, CT, X>::stepper_end(const S&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:475:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:475:3: note: suggested alternative: 'self_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   self_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:476:31: error: 'offset' was not declared in this scope
   return const_stepper(*this, offset, true, l);
                               ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xreducer.hpp:476:31: note: suggested alternative: 'off_t'
   return const_stepper(*this, offset, true, l);
                               ^~~~~~
                               off_t
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:36: note: suggested alternative: 'xfunction_type'
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:183:60: error: expected initializer before '<' token
 inline auto abs(E&& e) noexcept -> detail::xfunction_type_t<math::abs_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fabs_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fabs_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:198:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fabs_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:215:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmod_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:233:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::remainder_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:252:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fma_fun, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:270:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmax_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:288:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fmin_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:306:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::fdim_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:354:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::maximum, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:371:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::minimum, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:387:35: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:387:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:388:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:389:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:393:25: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:393:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:394:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:395:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:406:45: error: 'amax' function uses 'auto' type specifier without trailing return type
 inline auto amax(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:406:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amax(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:52: note: suggested alternative: 'decay'
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:59: error: expected template-argument before '<' token
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:407:74: error: template argument 1 is invalid
   using functor_type = math::maximum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:408:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:423:35: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:423:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:424:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:425:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:429:25: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:429:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:430:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:431:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:442:45: error: 'amin' function uses 'auto' type specifier without trailing return type
 inline auto amin(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:442:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::amin(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:52: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:52: note: suggested alternative: 'decay'
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                    ^~~~~~~
                                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:59: error: expected template-argument before '<' token
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:59: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:443:74: error: template argument 1 is invalid
   using functor_type = math::minimum<typename std::decay_t<E>::value_type>;
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:444:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:462:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::clamp_fun, E1, E2, E3> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:470:16: error: 'enable_if_t' in namespace 'std' does not name a template type
 constexpr std::enable_if_t<std::is_signed<T>::value, T> sign_impl(T x) {
                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:470:11: note: suggested alternative: 'enable_if'
 constexpr std::enable_if_t<std::is_signed<T>::value, T> sign_impl(T x) {
           ^~~
           enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:476:13: error: 'enable_if_t' in namespace 'std' does not name a template type
 inline std::enable_if_t<xt::detail::is_complex<T>::value, T> sign_impl(T x) {
             ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:476:8: note: suggested alternative: 'enable_if'
 inline std::enable_if_t<xt::detail::is_complex<T>::value, T> sign_impl(T x) {
        ^~~
        enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:482:16: error: 'enable_if_t' in namespace 'std' does not name a template type
 constexpr std::enable_if_t<std::is_unsigned<T>::value, T> sign_impl(T x) {
                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:482:11: note: suggested alternative: 'enable_if'
 constexpr std::enable_if_t<std::is_unsigned<T>::value, T> sign_impl(T x) {
           ^~~
           enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In member function 'constexpr T xt::math::sign_fun<T>::operator()(const T&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:492:61: error: 'sign_impl' is not a member of 'xt::math::detail'
   constexpr T operator()(const T& x) const { return detail::sign_impl(x); }
                                                             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sign_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sign_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:508:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sign_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:36: note: suggested alternative: 'xfunction_type'
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:530:60: error: expected initializer before '<' token
 inline auto exp(E&& e) noexcept -> detail::xfunction_type_t<math::exp_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::exp2_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::exp2_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:545:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::exp2_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::expm1_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::expm1_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:560:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::expm1_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:36: note: suggested alternative: 'xfunction_type'
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:574:60: error: expected initializer before '<' token
 inline auto log(E&& e) noexcept -> detail::xfunction_type_t<math::log_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log10_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log10_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:589:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log10_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log2_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log2_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:604:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log2_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::log1p_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::log1p_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:619:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::log1p_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:644:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::pow_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:660:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sqrt_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:675:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::cbrt_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:693:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::hypot_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:36: note: suggested alternative: 'xfunction_type'
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:716:60: error: expected initializer before '<' token
 inline auto sin(E&& e) noexcept -> detail::xfunction_type_t<math::sin_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:36: note: suggested alternative: 'xfunction_type'
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:730:60: error: expected initializer before '<' token
 inline auto cos(E&& e) noexcept -> detail::xfunction_type_t<math::cos_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:36: note: suggested alternative: 'xfunction_type'
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:744:60: error: expected initializer before '<' token
 inline auto tan(E&& e) noexcept -> detail::xfunction_type_t<math::tan_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::asin_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::asin_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:759:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::asin_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::acos_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::acos_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:774:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::acos_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atan_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atan_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:789:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atan_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:807:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atan2_fun, E1, E2> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::sinh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::sinh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:831:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::sinh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::cosh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::cosh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:846:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::cosh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::tanh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::tanh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:861:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::tanh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::asinh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::asinh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:876:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::asinh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::acosh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::acosh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:891:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::acosh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::atanh_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::atanh_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:906:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::atanh_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:44: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                            ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:36: note: suggested alternative: 'xfunction_type'
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                    ^~~~~~
                                    xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:928:60: error: expected initializer before '<' token
 inline auto erf(E&& e) noexcept -> detail::xfunction_type_t<math::erf_fun, E> {
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::erfc_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::erfc_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:943:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::erfc_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:958:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::tgamma_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:973:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::lgamma_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::ceil_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::ceil_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:996:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::ceil_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::floor_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::floor_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1011:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::floor_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::trunc_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::trunc_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1026:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::trunc_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::round_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::round_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1042:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::round_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1058:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::nearbyint_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::rint_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::rint_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1074:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::rint_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1097:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isfinite_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isinf_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isinf_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1112:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isinf_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:14: error: 'xfunction_type_t' in namespace 'xt::detail' does not name a template type
   -> detail::xfunction_type_t<math::isnan_fun, E> {
              ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:6: note: suggested alternative: 'xfunction_type'
   -> detail::xfunction_type_t<math::isnan_fun, E> {
      ^~~~~~
      xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1127:30: error: expected initializer before '<' token
   -> detail::xfunction_type_t<math::isnan_fun, E> {
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:40: error: 'std::index_sequence' has not been declared
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:54: error: expected ',' or '...' before '<' token
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:61: error: 'get_functor' function uses 'auto' type specifier without trailing return type
 inline auto get_functor(T&& args, std::index_sequence<Is...>) {
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1133:61: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1138:65: error: 'make_xfunction' function uses 'auto' type specifier without trailing return type
 inline auto make_xfunction(std::tuple<A...>&& f_args, E&&... e) noexcept {
                                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1138:65: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::detail::make_xfunction(std::tuple<_Args2 ...>&&, E&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: error: 'decay_t' is not a member of 'std'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:51: note: suggested alternative: 'decay'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                   ^~~~~~~
                                                   decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:60: error: template argument 1 is invalid
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:61: error: expected parameter pack before '...'
   using functor_type = F<common_value_type_t<std::decay_t<E>...>>;
                                                             ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1139:61: error: template argument 1 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1140:33: error: 'functor_type' has not been declared
   using result_type  = typename functor_type::result_type;
                                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:26: error: 'functor_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:26: note: suggested alternative: 'xfunction_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                          ^~~~~~~~~~~~
                          xfunction_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:40: error: 'result_type' was not declared in this scope
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:40: note: suggested alternative: 'layout_type'
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                        ^~~~~~~~~~~
                                        layout_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:75: error: template argument 1 is invalid
   using type = xfunction<functor_type, result_type, const_xclosure_t<E>...>;
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1141:75: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1144:36: error: 'make_index_sequence' is not a member of 'std'
                               std::make_index_sequence<sizeof...(A)>{});
                                    ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1144:69: error: expected primary-expression before '{' token
                               std::make_index_sequence<sizeof...(A)>{});
                                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1189:45: error: 'isclose' function uses 'auto' type specifier without trailing return type
                     bool equal_nan = false) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1189:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1212:43: error: 'allclose' function uses 'auto' type specifier without trailing return type
                      double atol = 1e-08) noexcept {
                                           ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1212:43: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1236:34: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e, X&& axes) noexcept {
                                  ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1236:34: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1237:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1238:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1242:24: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e) noexcept {
                        ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1242:24: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1243:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1244:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1255:44: error: 'sum' function uses 'auto' type specifier without trailing return type
 inline auto sum(E&& e, const I (&axes)[N]) noexcept {
                                            ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1255:44: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::sum(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:48: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:48: note: suggested alternative: 'decay'
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                ^~~~~~~
                                                decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:55: error: expected template-argument before '<' token
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:55: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1256:70: error: template argument 1 is invalid
   using functor_type = std::plus<typename std::decay_t<E>::value_type>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1257:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1272:35: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1272:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1273:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1274:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), std::forward<X>(axes));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1278:25: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1278:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1279:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1280:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e));
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1291:45: error: 'prod' function uses 'auto' type specifier without trailing return type
 inline auto prod(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1291:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::prod(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:54: error: 'decay_t' in namespace 'std' does not name a template type
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:54: note: suggested alternative: 'decay'
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:61: error: expected template-argument before '<' token
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:61: error: expected '>' before '<' token
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1292:76: error: template argument 1 is invalid
   using functor_type = std::multiplies<typename std::decay_t<E>::value_type>;
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1293:17: error: there are no arguments to 'functor_type' that depend on a template parameter, so a declaration of 'functor_type' must be available [-fpermissive]
   return reduce(functor_type(), std::forward<E>(e), axes);
                 ^~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1308:35: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e, X&& axes) noexcept {
                                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1308:35: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&, X&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1309:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1309:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1316:25: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e) noexcept {
                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1316:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1317:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1317:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1332:45: error: 'mean' function uses 'auto' type specifier without trailing return type
 inline auto mean(E&& e, const I (&axes)[N]) noexcept {
                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1332:45: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp: In function 'auto xt::mean(E&&, const I (&)[N])':
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1333:36: error: 'decay_t' in namespace 'std' does not name a template type
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xmath.hpp:1333:36: note: suggested alternative: 'decay'
   using value_type = typename std::decay_t<E>::value_type;
                                    ^~~~~~~
                                    decay
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:180:37: error: 'conditional_t' in namespace 'std' does not name a template type
   using select_iterator_impl = std::conditional_t<L == static_layout, It1, It2>;
                                     ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:180:32: note: suggested alternative: 'conditional'
   using select_iterator_impl = std::conditional_t<L == static_layout, It1, It2>;
                                ^~~
                                conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:184:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L, storage_iterator, layout_iterator<L>>;
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:187:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L, const_storage_iterator, const_layout_iterator<L>>;
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:190:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L,
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:195:5: error: 'select_iterator_impl' does not name a type; did you mean 'get_iterator'?
     select_iterator_impl<L,
     ^~~~~~~~~~~~~~~~~~~~
     get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:199:34: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   using iterator               = select_iterator<DL>;
                                  ^~~~~~~~~~~~~~~
                                  get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:200:34: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   using const_iterator         = select_const_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~
                                  xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:201:34: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   using reverse_iterator       = select_reverse_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~~~
                                  nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:202:34: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   using const_reverse_iterator = select_const_reverse_iterator<DL>;
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:205:3: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   select_iterator<L> begin() noexcept;
   ^~~~~~~~~~~~~~~
   get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:207:3: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
   select_iterator<L> end() noexcept;
   ^~~~~~~~~~~~~~~
   get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:210:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> begin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:212:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> end() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:214:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> cbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:216:3: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
   select_const_iterator<L> cend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~
   xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:219:3: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   select_reverse_iterator<L> rbegin() noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:221:3: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
   select_reverse_iterator<L> rend() noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~
   nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:224:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> rbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:226:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> rend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:228:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> crbegin() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:230:3: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_storage_iterator'?
   select_const_reverse_iterator<L> crend() const noexcept;
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   const_storage_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:662:48: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
 inline auto xcontainer<D>::begin() noexcept -> select_iterator<L> {
                                                ^~~~~~~~~~~~~~~
                                                get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:662:63: error: expected initializer before '<' token
 inline auto xcontainer<D>::begin() noexcept -> select_iterator<L> {
                                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:671:46: error: 'select_iterator' does not name a type; did you mean 'get_iterator'?
 inline auto xcontainer<D>::end() noexcept -> select_iterator<L> {
                                              ^~~~~~~~~~~~~~~
                                              get_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:671:61: error: expected initializer before '<' token
 inline auto xcontainer<D>::end() noexcept -> select_iterator<L> {
                                                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:680:54: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::begin() const noexcept -> select_const_iterator<L> {
                                                      ^~~~~~~~~~~~~~~~~~~~~
                                                      xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:680:75: error: expected initializer before '<' token
 inline auto xcontainer<D>::begin() const noexcept -> select_const_iterator<L> {
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:686:52: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::end() const noexcept -> select_const_iterator<L> {
                                                    ^~~~~~~~~~~~~~~~~~~~~
                                                    xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:686:73: error: expected initializer before '<' token
 inline auto xcontainer<D>::end() const noexcept -> select_const_iterator<L> {
                                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:692:55: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::cbegin() const noexcept -> select_const_iterator<L> {
                                                       ^~~~~~~~~~~~~~~~~~~~~
                                                       xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:692:76: error: expected initializer before '<' token
 inline auto xcontainer<D>::cbegin() const noexcept -> select_const_iterator<L> {
                                                                            ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:701:53: error: 'select_const_iterator' does not name a type; did you mean 'xfunction_iterator'?
 inline auto xcontainer<D>::cend() const noexcept -> select_const_iterator<L> {
                                                     ^~~~~~~~~~~~~~~~~~~~~
                                                     xfunction_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:701:74: error: expected initializer before '<' token
 inline auto xcontainer<D>::cend() const noexcept -> select_const_iterator<L> {
                                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:710:49: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xcontainer<D>::rbegin() noexcept -> select_reverse_iterator<L> {
                                                 ^~~~~~~~~~~~~~~~~~~~~~~
                                                 nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:710:72: error: expected initializer before '<' token
 inline auto xcontainer<D>::rbegin() noexcept -> select_reverse_iterator<L> {
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:719:47: error: 'select_reverse_iterator' does not name a type; did you mean 'nvs_release_iterator'?
 inline auto xcontainer<D>::rend() noexcept -> select_reverse_iterator<L> {
                                               ^~~~~~~~~~~~~~~~~~~~~~~
                                               nvs_release_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:719:70: error: expected initializer before '<' token
 inline auto xcontainer<D>::rend() noexcept -> select_reverse_iterator<L> {
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:729:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:729:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:736:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:736:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:743:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:743:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:753:6: error: 'select_const_reverse_iterator' does not name a type; did you mean 'const_container_iterator'?
   -> select_const_reverse_iterator<L> {
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      const_container_iterator
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:753:35: error: expected initializer before '<' token
   -> select_const_reverse_iterator<L> {
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: In member function 'void xt::xstrided_container<D>::reshape(const S&, bool)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:15: error: 'forward_sequence' was not declared in this scope
     m_shape = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:15: note: suggested alternative: 'make_sequence'
     m_shape = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
               make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1079:42: error: expected primary-expression before '>' token
     m_shape = forward_sequence<shape_type>(shape);
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp: In member function 'void xt::xstrided_container<D>::reshape(const S&, const strides_type&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:15: error: 'forward_sequence' was not declared in this scope
   m_shape   = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:15: note: suggested alternative: 'make_sequence'
   m_shape   = forward_sequence<shape_type>(shape);
               ^~~~~~~~~~~~~~~~
               make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:1120:42: error: expected primary-expression before '>' token
   m_shape   = forward_sequence<shape_type>(shape);
                                          ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:15,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xassign.hpp: In function 'void xt::scalar_computed_assign(xt::xexpression<E>&, const E2&, F&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xassign.hpp:163:33: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                  [e2, &f](const auto& v) { return f(v, e2); });
                                 ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator+=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:237:67: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::plus<>());
                                                                   ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:167:12: note: provided for 'template<class _Tp> struct std::plus'
     struct plus : public binary_function<_Tp, _Tp, _Tp>
            ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator-=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:249:68: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::minus<>());
                                                                    ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:177:12: note: provided for 'template<class _Tp> struct std::minus'
     struct minus : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator*=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:261:73: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::multiplies<>());
                                                                         ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:187:12: note: provided for 'template<class _Tp> struct std::multiplies'
     struct multiplies : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::disable_xexpression<E, typename xt::xexpression<E>::derived_type&> xt::xsemantic_base<D>::operator/=(const E&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:273:70: error: wrong number of template arguments (0, should be 1)
   return this->derived_cast().scalar_computed_assign(e, std::divides<>());
                                                                      ^
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_tree.h:65,
                 from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/map:60,
                 from ../components/EVXLEDController/EVXLEDController.h:12,
                 from ../main/otohikari.cpp:8,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/stl_function.h:197:12: note: provided for 'template<class _Tp> struct std::divides'
     struct divides : public binary_function<_Tp, _Tp, _Tp>
            ^~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp: In member function 'xt::xview_semantic<D>::derived_type& xt::xview_semantic<D>::scalar_computed_assign(const E&, F&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xsemantic.hpp:540:32: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
                  [e, &f](const auto& v) { return f(v, e); });
                                ^~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp: In static member function 'static xt::xarray_container<EC, L, SC> xt::xarray_container<EC, L, SC>::from_shape(S&&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:22: error: 'forward_sequence' was not declared in this scope
   shape_type shape = forward_sequence<shape_type>(s);
                      ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:22: note: suggested alternative: 'make_sequence'
   shape_type shape = forward_sequence<shape_type>(s);
                      ^~~~~~~~~~~~~~~~
                      make_sequence
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:386:49: error: expected primary-expression before '>' token
   shape_type shape = forward_sequence<shape_type>(s);
                                                 ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:27:19: error: 'xnone' function uses 'auto' type specifier without trailing return type
 inline auto xnone() { return placeholders::xtuph(); }
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:27:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:18: error: 'enable_if_t' in namespace 'std' does not name a template type
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:13: note: suggested alternative: 'enable_if'
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
             ^~~
             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:92:29: error: expected '>' before '<' token
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:93:41: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(T min_val, T max_val) noexcept {
                                         ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:93:41: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: In function 'auto xt::range(T, T)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:94:19: error: 'make_unsigned_t' in namespace 'std' does not name a template type
   using UT = std::make_unsigned_t<T>;
                   ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:94:14: note: suggested alternative: 'make_unsigned'
   using UT = std::make_unsigned_t<T>;
              ^~~
              make_unsigned
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:17: error: 'UT' was not declared in this scope
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                 ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:17: note: suggested alternative: 'T'
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                 ^~
                 T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:19: error: template argument 1 is invalid
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:33: error: 'UT' does not name a type; did you mean 'T'?
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                                 ^~
                                 T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:95:59: error: 'UT' does not name a type; did you mean 'T'?
   return xrange<UT>(static_cast<UT>(min_val), static_cast<UT>(max_val));
                                                           ^~
                                                           T
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:18: error: 'enable_if_t' in namespace 'std' does not name a template type
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:13: note: suggested alternative: 'enable_if'
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
             ^~~
             enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:131:29: error: expected '>' before '<' token
   class E = std::enable_if_t<!std::is_same<T, placeholders::xtuph>::value>>
                             ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:132:49: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(T min_val, T max_val, T step) noexcept {
                                                 ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:132:49: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:167:19: error: 'all' function uses 'auto' type specifier without trailing return type
 inline auto all() noexcept { return xall_tag(); }
                   ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:167:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:193:23: error: 'newaxis' function uses 'auto' type specifier without trailing return type
 inline auto newaxis() noexcept { return xnewaxis_tag(); }
                       ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:193:23: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:205:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:205:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:214:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:214:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:223:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:223:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:234:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:234:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:243:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:243:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:252:15: error: 'enable_if_t' in namespace 'std' does not name a template type
   inline std::enable_if_t<!std::is_integral<MI>::value &&
               ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:252:10: note: suggested alternative: 'enable_if'
   inline std::enable_if_t<!std::is_integral<MI>::value &&
          ^~~
          enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:267:39: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(A min_val, B max_val) {
                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:267:39: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:273:47: error: 'range' function uses 'auto' type specifier without trailing return type
 inline auto range(A min_val, B max_val, C step) {
                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:273:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:287:46: error: 'get_size' function uses 'auto' type specifier without trailing return type
 inline auto get_size(const xslice<S>& slice) noexcept {
                                              ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:287:46: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:301:47: error: 'step_size' function uses 'auto' type specifier without trailing return type
 inline auto step_size(const xslice<S>& slice) noexcept {
                                               ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:301:47: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:48: error: 'value' function uses 'auto' type specifier without trailing return type
 inline auto value(const xslice<S>& slice, I i) noexcept {
                                                ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:48: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:327:59: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t /*index*/) {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:327:59: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:332:71: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
 inline auto get_slice_implementation(E& e, xall_tag, std::size_t index) {
                                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:332:71: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:339:59: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t /*index*/) {
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:339:59: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:346:55: error: 'get_slice_implementation' function uses 'auto' type specifier without trailing return type
                                      std::size_t index) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:346:55: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: error: 'remove_reference_t' is not a member of 'std'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: note: suggested alternative: 'remove_reference'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
                                                remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:48: note: suggested alternative: 'remove_reference'
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                ^~~~~~~~~~~~~~~~~~
                                                remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:67: error: template argument 2 is invalid
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                                   ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:378:69: error: expected identifier before '>' token
   typename detail::get_slice_type_impl<E, std::remove_reference_t<SL>>::type;
                                                                     ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:56:61: error: 'get_slice_value' function uses 'auto' type specifier without trailing return type
 inline auto get_slice_value(const xslice<S>& slice, It& it) noexcept {
                                                             ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:56:61: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_count_impl<T, S>::count(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: error: 'remove_reference_t' is not a member of 'std'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: note: suggested alternative: 'remove_reference'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
                                        remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:40: note: suggested alternative: 'remove_reference'
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                        ^~~~~~~~~~~~~~~~~~
                                        remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:59: error: template argument 1 is invalid
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:64: error: '::value' has not been declared
                 (std::is_integral<std::remove_reference_t<T>>::value ? 1 : 0))
                                                                ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:98:64: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_count_impl<T, S>::count(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: error: 'remove_reference_t' is not a member of 'std'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: note: suggested alternative: 'remove_reference'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:34: note: suggested alternative: 'remove_reference'
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:53: error: template argument 1 is invalid
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:58: error: '::value' has not been declared
                 (is_newaxis<std::remove_reference_t<T>>::value ? 1 : 0))
                                                          ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:134:58: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_skip_impl<T, S>::count_impl(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: error: 'remove_reference_t' is not a member of 'std'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: note: suggested alternative: 'remove_reference'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
                                       remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:39: note: suggested alternative: 'remove_reference'
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                       ^~~~~~~~~~~~~~~~~~
                                       remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:58: error: template argument 1 is invalid
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:63: error: '::value' has not been declared
     return 1 + (std::is_integral<std::remove_reference_t<T>>::value
                                                               ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:169:63: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::integral_skip_impl<T, S>::count_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: error: 'remove_reference_t' is not a member of 'std'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: note: suggested alternative: 'remove_reference'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:34: note: suggested alternative: 'remove_reference'
     return std::is_integral<std::remove_reference_t<T>>::value
                                  ^~~~~~~~~~~~~~~~~~
                                  remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:53: error: template argument 1 is invalid
     return std::is_integral<std::remove_reference_t<T>>::value
                                                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:58: error: '::value' has not been declared
     return std::is_integral<std::remove_reference_t<T>>::value
                                                          ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:175:58: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_skip_impl<T, S>::count_impl(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: error: 'remove_reference_t' is not a member of 'std'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: note: suggested alternative: 'remove_reference'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
                                 remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:33: note: suggested alternative: 'remove_reference'
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                 ^~~~~~~~~~~~~~~~~~
                                 remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:52: error: template argument 1 is invalid
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:57: error: '::value' has not been declared
     return 1 + (is_newaxis<std::remove_reference_t<T>>::value
                                                         ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:206:57: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp: In static member function 'static constexpr std::size_t xt::detail::newaxis_skip_impl<T, S>::count_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: error: 'remove_reference_t' is not a member of 'std'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: note: suggested alternative: 'remove_reference'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
                            remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:28: note: suggested alternative: 'remove_reference'
     return is_newaxis<std::remove_reference_t<T>>::value
                            ^~~~~~~~~~~~~~~~~~
                            remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:47: error: template argument 1 is invalid
     return is_newaxis<std::remove_reference_t<T>>::value
                                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:52: error: '::value' has not been declared
     return is_newaxis<std::remove_reference_t<T>>::value
                                                    ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:212:52: note: suggested alternative:
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview_utils.hpp:14,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:24,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xslice.hpp:315:13: note:   'xt::value'
 inline auto value(const xslice<S>& slice, I i) noexcept {
             ^~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:25,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:34:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:34:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:50: error: 'xexpression_type' was not declared in this scope
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                  ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:50: note: suggested alternative: 'xexpression'
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                  ^~~~~~~~~~~~~~~~
                                                  xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:35:72: error: template argument 1 is invalid
   using temporary_type   = view_temporary_type_t<xexpression_type, S...>;
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:46:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:46:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:49:35: error: template argument 1 is invalid
                               S...>::type;
                                   ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:48:14: error: expected nested-name-specifier
     typename xview_shape_type<typename xexpression_type::shape_type,
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                               S...>::type;
                               ~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: error: 'remove_reference_t' is not a member of 'std'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: note: suggested alternative: 'remove_reference'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
                                      remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: error: 'remove_reference_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:38: note: suggested alternative: 'remove_reference'
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                      ^~~~~~~~~~~~~~~~~~
                                      remove_reference
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:57: error: template argument 1 is invalid
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                                         ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:51:59: error: wrong number of template arguments (1, should be at least 2)
     xview_stepper<std::is_const<std::remove_reference_t<CT>>::value, CT, S...>;
                                                           ^~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:39:7: note: provided for 'template<bool is_const, class CT, class ... S> class xt::xview_stepper'
 class xview_stepper;
       ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: error: 'remove_cv_t' is not a member of 'std'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: note: suggested alternative: 'remove_cv'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
                                                  remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: error: 'remove_cv_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:50: note: suggested alternative: 'remove_cv'
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                  ^~~~~~~~~~~
                                                  remove_cv
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:52:64: error: template argument 2 is invalid
   using const_stepper = xview_stepper<true, std::remove_cv_t<CT>, S...>;
                                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:74:33: error: 'decay_t' in namespace 'std' does not name a template type
   using xexpression_type = std::decay_t<CT>;
                                 ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:74:28: note: suggested alternative: 'decay'
   using xexpression_type = std::decay_t<CT>;
                            ^~~
                            decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:77:36: error: 'xexpression_type' has not been declared
   using value_type      = typename xexpression_type::value_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:78:36: error: 'xexpression_type' has not been declared
   using reference       = typename xexpression_type::reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:79:36: error: 'xexpression_type' has not been declared
   using const_reference = typename xexpression_type::const_reference;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:80:36: error: 'xexpression_type' has not been declared
   using pointer         = typename xexpression_type::pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:81:36: error: 'xexpression_type' has not been declared
   using const_pointer   = typename xexpression_type::const_pointer;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:82:36: error: 'xexpression_type' has not been declared
   using size_type       = typename xexpression_type::size_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:83:36: error: 'xexpression_type' has not been declared
   using difference_type = typename xexpression_type::difference_type;
                                    ^~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:112:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type dimension() const noexcept;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:114:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type size() const noexcept;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:120:3: error: 'reference' does not name a type
   reference operator()(Args... args);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:121:3: error: 'reference' does not name a type
   reference operator[](const xindex& index);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:122:3: error: 'reference' does not name a type
   reference operator[](size_type i);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:124:3: error: 'reference' does not name a type
   reference element(It first, It last);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:127:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator()(Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:128:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](const xindex& index) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:129:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference operator[](size_type i) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:131:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference element(It first, It last) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:149:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:150:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value,
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:150:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value,
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:154:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:155:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value,
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:155:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value,
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:159:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:160:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, const value_type*>
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:160:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, const value_type*>
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:163:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:164:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, value_type*> raw_data();
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:164:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, value_type*> raw_data();
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:166:23: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   template <class T = xexpression_type>
                       ^~~~~~~~~~~~~~~~
                       xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:167:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t>
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:167:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t>
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:170:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type underlying_size(size_type dim) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:184:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:185:3: error: 'reference' does not name a type
   reference access_impl(std::index_sequence<I...>, Args... args);
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:187:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type... I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:188:3: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   const_reference access_impl(std::index_sequence<I...>, Args... args) const;
   ^~~~~~~~~~~~~~~
   xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:190:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:191:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<lesser_condition<I>::value, size_type> index(
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:191:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<lesser_condition<I>::value, size_type> index(
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:194:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:195:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<!lesser_condition<I>::value, size_type> index(
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:195:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<!lesser_condition<I>::value, size_type> index(
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type, class T>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type, class T>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:198:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type, class T>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:199:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type sliced_access(const xslice<T>& slice) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I,
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I,
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:201:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I,
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:205:3: error: 'size_type' does not name a type; did you mean 'slice_type'?
   size_type sliced_access(const xslice<T>& slice, Arg arg, Args... args) const;
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:27: error: 'decay_t' in namespace 'std' does not name a template type
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                           ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:27: note: suggested alternative: 'decay'
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                           ^~~~~~~
                           decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:207:34: error: expected '>' before '<' token
   template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:18: error: 'T' was not declared in this scope
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:21: error: 'size_type' was not declared in this scope
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:21: note: suggested alternative: 'slice_type'
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                     ^~~~~~~~~
                     slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:30: error: template argument 1 is invalid
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:30: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:52: error: 'T' does not name a type
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                                                    ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:208:64: error: 'Args' has not been declared
   disable_xslice<T, size_type> sliced_access(const T& squeeze, Args...) const;
                                                                ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:223:31: error: 'view' function uses 'auto' type specifier without trailing return type
 auto view(E&& e, S&&... slices);
                               ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:223:31: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:250:10: error: 'conditional_t' in namespace 'std' does not name a template type
     std::conditional_t<is_const, const xview<CT, S...>, xview<CT, S...>>;
          ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:250:5: note: suggested alternative: 'conditional'
     std::conditional_t<is_const, const xview<CT, S...>, xview<CT, S...>>;
     ^~~
     conditional
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:39: error: 'view_type' was not declared in this scope
   using substepper_type = get_stepper<view_type>;
                                       ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:39: note: suggested alternative: 'iswctype'
   using substepper_type = get_stepper<view_type>;
                                       ^~~~~~~~~
                                       iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:251:48: error: template argument 1 is invalid
   using substepper_type = get_stepper<view_type>;
                                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:253:36: error: 'substepper_type' has not been declared
   using value_type      = typename substepper_type::value_type;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:254:36: error: 'substepper_type' has not been declared
   using reference       = typename substepper_type::reference;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:255:36: error: 'substepper_type' has not been declared
   using pointer         = typename substepper_type::pointer;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:256:36: error: 'substepper_type' has not been declared
   using difference_type = typename substepper_type::difference_type;
                                    ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:257:36: error: 'view_type' has not been declared
   using size_type       = typename view_type::size_type;
                                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:259:31: error: 'substepper_type' has not been declared
   using shape_type = typename substepper_type::shape_type;
                               ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:262:26: error: expected ')' before '*' token
   xview_stepper(view_type* view,
                ~         ^
                          )
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:267:3: error: 'reference' does not name a type
   reference operator*() const;
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:269:13: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
             ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:269:28: error: 'size_type' has not been declared
   void step(size_type dim, size_type n = 1);
                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:270:18: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                  ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:270:33: error: 'size_type' has not been declared
   void step_back(size_type dim, size_type n = 1);
                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:271:14: error: 'size_type' has not been declared
   void reset(size_type dim);
              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:272:19: error: 'size_type' has not been declared
   void reset_back(size_type dim);
                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:280:25: error: 'size_type' has not been declared
   bool is_newaxis_slice(size_type index) const noexcept;
                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:284:20: error: 'size_type' has not been declared
   void common_step(size_type dim, size_type n, F f);
                    ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:284:35: error: 'size_type' has not been declared
   void common_step(size_type dim, size_type n, F f);
                                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:287:21: error: 'size_type' has not been declared
   void common_reset(size_type dim, F f);
                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:289:3: error: 'view_type' does not name a type; did you mean 'iswctype'?
   view_type* p_view;
   ^~~~~~~~~
   iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:290:3: error: 'substepper_type' does not name a type; did you mean 'stepper_tools'?
   substepper_type m_it;
   ^~~~~~~~~~~~~~~
   stepper_tools
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:291:3: error: 'size_type' does not name a type; did you mean 'size_t'?
   size_type m_offset;
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In constructor 'xt::xview<CT, S>::xview(CTA&&, FSL&&, SL&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:340:24: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [](const auto& s) noexcept { return get_size(s); };
                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i != dimension(); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:8: note: suggested alternative: 'slice_type'
   for (size_type i = 0; i != dimension(); ++i) {
        ^~~~~~~~~
        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i != dimension(); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:341:30: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   for (size_type i = 0; i != dimension(); ++i) {
                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:342:14: error: expected ';' before 'index'
     size_type index = integral_skip<S...>(i);
              ^~~~~~
              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:343:42: error: ISO C++ forbids comparison between pointer and integer [-fpermissive]
     m_shape[i]      = index < sizeof...(S)
                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::self_type& xt::xview<CT, S>::operator=(const xt::xexpression<E>&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:366:51: error: there are no arguments to 'dimension' that depend on a template parameter, so a declaration of 'dimension' must be available [-fpermissive]
   bool cond = (e.derived_cast().shape().size() == dimension()) &&
                                                   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:394:55: error: 'size_type' does not name a type; did you mean 'slice_type'?
 inline auto xview<CT, S...>::size() const noexcept -> size_type {
                                                       ^~~~~~~~~
                                                       slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:402:60: error: 'size_type' does not name a type; did you mean 'slice_type'?
 inline auto xview<CT, S...>::dimension() const noexcept -> size_type {
                                                            ^~~~~~~~~
                                                            slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:443:58: error: 'reference' does not name a type
 inline auto xview<CT, S...>::operator()(Args... args) -> reference {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:457:65: error: 'reference' does not name a type
 inline auto xview<CT, S...>::operator[](const xindex& index) -> reference {
                                                                 ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: error: declaration of 'operator[]' as non-function
 inline auto xview<CT, S...>::operator[](size_type i) -> reference {
                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:462:41: note: suggested alternative: 'size_t'
 inline auto xview<CT, S...>::operator[](size_type i) -> reference {
                                         ^~~~~~~~~
                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:468:60: error: 'reference' does not name a type
 inline auto xview<CT, S...>::element(It first, It last) -> reference {
                                                            ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:485:64: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
 inline auto xview<CT, S...>::operator()(Args... args) const -> const_reference {
                                                                ^~~~~~~~~~~~~~~
                                                                xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:500:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: error: declaration of 'operator[]' as non-function
 inline auto xview<CT, S...>::operator[](size_type i) const -> const_reference {
                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:505:41: note: suggested alternative: 'size_t'
 inline auto xview<CT, S...>::operator[](size_type i) const -> const_reference {
                                         ^~~~~~~~~
                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:512:6: error: 'const_reference' does not name a type; did you mean 'xconst_iterable'?
   -> const_reference {
      ^~~~~~~~~~~~~~~
      xconst_iterable
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:527:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value,
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value,
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:538:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value,
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:567:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, const value_type*> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:574:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, value_type*> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:11: error: 'enable_if_t' in namespace 'std' does not name a template type
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
           ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:6: note: suggested alternative: 'enable_if'
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
      ^~~
      enable_if
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:585:22: error: expected initializer before '<' token
   -> std::enable_if_t<has_raw_data_interface<T>::value, const std::size_t> {
                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::underlying_size(size_type dim) const -> size_type {
                                              ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: 'auto xt::xview<CT, S>::underlying_size' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: template definition of non-template 'auto xt::xview<CT, S>::underlying_size'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:598:46: note: suggested alternative: 'slice_type'
 inline auto xview<CT, S...>::underlying_size(size_type dim) const -> size_type {
                                              ^~~~~~~~~
                                              slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:630:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: 'auto xt::xview<CT, S>::access_impl' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: template definition of non-template 'auto xt::xview<CT, S>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:47: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:631:62: error: 'I' was not declared in this scope
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:632:42: error: 'Args' was not declared in this scope
                                          Args... args) -> reference {
                                          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:637:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type... I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                               ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: 'auto xt::xview<CT, S>::access_impl' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: template definition of non-template 'auto xt::xview<CT, S>::access_impl'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:47: error: 'index_sequence' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:638:62: error: 'I' was not declared in this scope
 inline auto xview<CT, S...>::access_impl(std::index_sequence<I...>,
                                                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:639:42: error: 'Args' was not declared in this scope
                                          Args... args) const
                                          ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:645:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::index(Args... args) const
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: 'auto xt::xview<CT, S>::index' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: template definition of non-template 'auto xt::xview<CT, S>::index'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:646:36: error: 'Args' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:654:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: warning: inline variables are only available with -std=c++17 or -std=gnu++17
 inline auto xview<CT, S...>::index(Args... args) const
                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: 'auto xt::xview<CT, S>::index' is not a static data member of 'class xt::xview<CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: template definition of non-template 'auto xt::xview<CT, S>::index'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:655:36: error: 'Args' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class T>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class T>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:661:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class T>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:662:57: error: 'T' was not declared in this scope
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice) const
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:662:58: error: template argument 1 is invalid
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice) const
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:663:6: error: 'size_type' does not name a type; did you mean 'slice_type'?
   -> size_type {
      ^~~~~~~~~
      slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I,
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I,
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:668:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I,
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:672:57: error: 'T' was not declared in this scope
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice,
                                                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:672:58: error: template argument 1 is invalid
 inline auto xview<CT, S...>::sliced_access(const xslice<T>& slice,
                                                          ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:673:44: error: 'Arg' has not been declared
                                            Arg arg,
                                            ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:44: error: 'Args' has not been declared
                                            Args... args) const -> size_type {
                                            ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:52: error: expansion pattern 'int' contains no argument packs
                                            Args... args) const -> size_type {
                                                    ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:674:67: error: 'size_type' does not name a type; did you mean 'slice_type'?
                                            Args... args) const -> size_type {
                                                                   ^~~~~~~~~
                                                                   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:25: error: 'decay_t' in namespace 'std' does not name a template type
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                         ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:25: note: suggested alternative: 'decay'
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                         ^~~~~~~
                         decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:681:32: error: expected '>' before '<' token
 template <typename std::decay_t<CT>::size_type I, class T, class... Args>
                                ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:682:50: error: 'T' does not name a type
 inline auto xview<CT, S...>::sliced_access(const T& squeeze, Args...) const
                                                  ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:682:62: error: 'Args' has not been declared
 inline auto xview<CT, S...>::sliced_access(const T& squeeze, Args...) const
                                                              ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:21: error: 'T' was not declared in this scope
   -> disable_xslice<T, size_type> {
                     ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:24: error: 'size_type' was not declared in this scope
   -> disable_xslice<T, size_type> {
                        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:24: note: suggested alternative: 'slice_type'
   -> disable_xslice<T, size_type> {
                        ^~~~~~~~~
                        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:33: error: template argument 1 is invalid
   -> disable_xslice<T, size_type> {
                                 ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:683:33: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::base_index_type xt::xview<CT, S>::make_index(It, It) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:692:5: error: parse error in template argument list
     make_sequence<typename xexpression_type::shape_type>(m_e.dimension(), 0);
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:693:31: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func1 = [&first](const auto& s) { return get_slice_value(s, first); };
                               ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:694:25: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func2 = [](const auto& s) { return xt::value(s, 0); };
                         ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i != m_e.dimension(); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:8: note: suggested alternative: 'slice_type'
   for (size_type i = 0; i != m_e.dimension(); ++i) {
        ^~~~~~~~~
        slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:695:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i != m_e.dimension(); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:696:14: error: expected ';' before 'k'
     size_type k = newaxis_skip<S...>(i);
              ^~
              ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:697:25: error: 'k' was not declared in this scope
     std::advance(first, k - i);
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'std::size_t xt::detail::get_underlying_shape_index(std::size_t)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:35: error: 'get_slice_type' was not declared in this scope
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                   ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:35: note: suggested alternative: 'get_slice_value'
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                   ^~~~~~~~~~~~~~
                                   get_slice_value
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:14: error: parse error in template argument list
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:12: error: parameter packs not expanded with '...':
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:12: note:         'S'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:55: error: expected ';' before '...' token
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                                       ^~~
                                                       ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:716:55: error: expected primary-expression before '...' token
   return I - newaxis_count_before<get_slice_type<E, S>...>(I);
                                                       ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:40: error: 'std::index_sequence' has not been declared
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                        ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:54: error: expected ',' or '...' before '<' token
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:75: error: 'make_view_impl' function uses 'auto' type specifier without trailing return type
 inline auto make_view_impl(E&& e, std::index_sequence<I...>, S&&... slices) {
                                                                           ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:720:75: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'auto xt::detail::make_view_impl(E&&, int)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:41: error: 'get_slice_type' was not declared in this scope
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                         ^~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:41: note: suggested alternative: 'get_slice_value'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                         ^~~~~~~~~~~~~~
                                         get_slice_value
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:61: error: 'decay_t' is not a member of 'std'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                             ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:61: note: suggested alternative: 'decay'
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                             ^~~~~~~
                                                             decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:721:70: error: template argument 2 is invalid
   using view_type = xview<closure_t<E>, get_slice_type<std::decay_t<E>, S>...>;
                                                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:724:41: error: 'slices' was not declared in this scope
                      e, std::forward<S>(slices),
                                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:724:41: note: suggested alternative: 'xslice'
                      e, std::forward<S>(slices),
                                         ^~~~~~
                                         xslice
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: error: 'decay_t' is not a member of 'std'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: note: suggested alternative: 'decay'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: error: 'decay_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:54: note: suggested alternative: 'decay'
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                      ^~~~~~~
                                                      decay
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:22: error: parse error in template argument list
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:725:67: error: expected primary-expression before '...' token
                      get_underlying_shape_index<std::decay_t<E>, S...>(I))...);
                                                                   ^~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:738:38: error: 'view' function uses 'auto' type specifier without trailing return type
 inline auto view(E&& e, S&&... slices) {
                                      ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:738:38: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In function 'auto xt::view(E&&, S&& ...)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:740:38: error: 'make_index_sequence' is not a member of 'std'
                                 std::make_index_sequence<sizeof...(S)>(),
                                      ^~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:740:72: error: expected primary-expression before ')' token
                                 std::make_index_sequence<sizeof...(S)>(),
                                                                        ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::stepper xt::xview<CT, S>::stepper_begin(const ST&)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:751:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:751:3: note: suggested alternative: 'slice_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:752:56: error: 'offset' was not declared in this scope
   return stepper(this, m_e.stepper_begin(m_e.shape()), offset);
                                                        ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:752:56: note: suggested alternative: 'off_t'
   return stepper(this, m_e.stepper_begin(m_e.shape()), offset);
                                                        ^~~~~~
                                                        off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::stepper xt::xview<CT, S>::stepper_end(const ST&, xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:759:3: error: 'size_type' was not declared in this scope
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:759:3: note: suggested alternative: 'slice_type'
   size_type offset = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:760:57: error: 'offset' was not declared in this scope
   return stepper(this, m_e.stepper_end(m_e.shape(), l), offset, true);
                                                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:760:57: note: suggested alternative: 'off_t'
   return stepper(this, m_e.stepper_end(m_e.shape(), l), offset, true);
                                                         ^~~~~~
                                                         off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::const_stepper xt::xview<CT, S>::stepper_begin(const ST&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:767:3: error: 'size_type' was not declared in this scope
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:767:3: note: suggested alternative: 'slice_type'
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:768:9: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   const xexpression_type& e = m_e;
         ^~~~~~~~~~~~~~~~
         xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:30: error: 'e' was not declared in this scope
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:60: error: 'offset' was not declared in this scope
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                                                            ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:769:60: note: suggested alternative: 'off_t'
   return const_stepper(this, e.stepper_begin(m_e.shape()), offset);
                                                            ^~~~~~
                                                            off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'xt::xview<CT, S>::const_stepper xt::xview<CT, S>::stepper_end(const ST&, xt::layout_type) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:776:3: error: 'size_type' was not declared in this scope
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:776:3: note: suggested alternative: 'slice_type'
   size_type offset          = shape.size() - dimension();
   ^~~~~~~~~
   slice_type
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:777:9: error: 'xexpression_type' does not name a type; did you mean 'xexpression'?
   const xexpression_type& e = m_e;
         ^~~~~~~~~~~~~~~~
         xexpression
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:30: error: 'e' was not declared in this scope
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                              ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:61: error: 'offset' was not declared in this scope
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                                                             ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:778:61: note: suggested alternative: 'off_t'
   return const_stepper(this, e.stepper_end(m_e.shape(), l), offset, true);
                                                             ^~~~~~
                                                             off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: ISO C++ forbids declaration of 'xview_stepper' with no type [-fpermissive]
 inline xview_stepper<is_const, CT, S...>::xview_stepper(view_type* view,
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: warning: inline variables are only available with -std=c++17 or -std=gnu++17
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: 'int xt::xview_stepper<is_const, CT, S>::xview_stepper' is not a static data member of 'class xt::xview_stepper<is_const, CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: template definition of non-template 'int xt::xview_stepper<is_const, CT, S>::xview_stepper'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: error: 'view_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:786:57: note: suggested alternative: 'iswctype'
 inline xview_stepper<is_const, CT, S...>::xview_stepper(view_type* view,
                                                         ^~~~~~~~~
                                                         iswctype
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:787:57: error: 'substepper_type' was not declared in this scope
                                                         substepper_type it,
                                                         ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:787:57: note: suggested alternative: 'stepper_tools'
                                                         substepper_type it,
                                                         ^~~~~~~~~~~~~~~
                                                         stepper_tools
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:788:57: error: 'size_type' was not declared in this scope
                                                         size_type offset,
                                                         ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:788:57: note: suggested alternative: 'size_t'
                                                         size_type offset,
                                                         ^~~~~~~~~
                                                         size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:789:57: error: expected primary-expression before 'bool'
                                                         bool end)
                                                         ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:806:69: error: 'reference' does not name a type
 inline auto xview_stepper<is_const, CT, S...>::operator*() const -> reference {
                                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: error: variable or field 'step' declared void
 inline void xview_stepper<is_const, CT, S...>::step(size_type dim,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:811:53: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::step(size_type dim,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:812:53: error: 'size_type' was not declared in this scope
                                                     size_type n) {
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:812:53: note: suggested alternative: 'size_t'
                                                     size_type n) {
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: error: variable or field 'step_back' declared void
 inline void xview_stepper<is_const, CT, S...>::step_back(size_type dim,
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:820:58: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::step_back(size_type dim,
                                                          ^~~~~~~~~
                                                          size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:821:58: error: 'size_type' was not declared in this scope
                                                          size_type n) {
                                                          ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:821:58: note: suggested alternative: 'size_t'
                                                          size_type n) {
                                                          ^~~~~~~~~
                                                          size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: error: variable or field 'reset' declared void
 inline void xview_stepper<is_const, CT, S...>::reset(size_type dim) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:829:54: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::reset(size_type dim) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: error: variable or field 'reset_back' declared void
 inline void xview_stepper<is_const, CT, S...>::reset_back(size_type dim) {
                                                           ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:837:59: note: suggested alternative: 'size_t'
 inline void xview_stepper<is_const, CT, S...>::reset_back(size_type dim) {
                                                           ^~~~~~~~~
                                                           size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_begin()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:846:3: error: 'm_it' was not declared in this scope
   m_it.to_begin();
   ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:846:3: note: suggested alternative: 'u_int'
   m_it.to_begin();
   ^~~~
   u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_end(xt::layout_type)':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:851:3: error: 'm_it' was not declared in this scope
   m_it.to_end(l);
   ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:851:3: note: suggested alternative: 'u_int'
   m_it.to_end(l);
   ^~~~
   u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'bool xt::xview_stepper<is_const, CT, S>::equal(const xt::xview_stepper<is_const, CT, S>&) const':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:10: error: 'p_view' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
          ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:10: note: suggested alternative: 'view'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
          ^~~~~~
          view
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:34: error: 'm_it' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                  ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:34: note: suggested alternative: 'u_int'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                  ^~~~
                                  u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:54: error: 'm_offset' was not declared in this scope
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:858:54: note: suggested alternative: '_off_t'
   return p_view == rhs.p_view && m_it == rhs.m_it && m_offset == rhs.m_offset;
                                                      ^~~~~~~~
                                                      _off_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: warning: inline variables are only available with -std=c++17 or -std=gnu++17
   size_type index) const noexcept {
   ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: 'bool xt::xview_stepper<is_const, CT, S>::is_newaxis_slice' is not a static data member of 'class xt::xview_stepper<is_const, CT, S>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: template definition of non-template 'bool xt::xview_stepper<is_const, CT, S>::is_newaxis_slice'
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:863:3: note: suggested alternative: 'size_t'
   size_type index) const noexcept {
   ^~~~~~~~~
   size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: In member function 'void xt::xview_stepper<is_const, CT, S>::to_end_impl()':
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:871:24: error: use of 'auto' in lambda parameter declaration only available with -std=c++14 or -std=gnu++14
   auto func = [](const auto& s) { return xt::value(s, get_size(s) - 1); };
                        ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:8: error: 'size_type' was not declared in this scope
   for (size_type i = 0; i < sizeof...(S); ++i) {
        ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:8: note: suggested alternative: 'size_t'
   for (size_type i = 0; i < sizeof...(S); ++i) {
        ^~~~~~~~~
        size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:872:25: error: 'i' was not declared in this scope
   for (size_type i = 0; i < sizeof...(S); ++i) {
                         ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:874:16: error: expected ';' before 's'
       size_type s     = apply<size_type>(i, func, p_view->slices());
                ^~
                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:875:16: error: expected ';' before 'index'
       size_type index = i - newaxis_count_before<S...>(i);
                ^~~~~~
                ;
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:7: error: 's' was not declared in this scope
       s               = p_view->underlying_size(index) - 1 - s;
       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:25: error: 'p_view' was not declared in this scope
       s               = p_view->underlying_size(index) - 1 - s;
                         ^~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:876:25: note: suggested alternative: 'view'
       s               = p_view->underlying_size(index) - 1 - s;
                         ^~~~~~
                         view
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:877:7: error: 'm_it' was not declared in this scope
       m_it.step_back(index, s);
       ^~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:877:7: note: suggested alternative: 'u_int'
       m_it.step_back(index, s);
       ^~~~
       u_int
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp: At global scope:
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: error: variable or field 'common_step' declared void
 void xview_stepper<is_const, CT, S...>::common_step(size_type dim,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:884:53: note: suggested alternative: 'size_t'
 void xview_stepper<is_const, CT, S...>::common_step(size_type dim,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:885:53: error: 'size_type' was not declared in this scope
                                                     size_type n,
                                                     ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:885:53: note: suggested alternative: 'size_t'
                                                     size_type n,
                                                     ^~~~~~~~~
                                                     size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:886:55: error: expected primary-expression before 'f'
                                                     F f) {
                                                       ^
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: error: variable or field 'common_reset' declared void
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                      ^~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: error: 'size_type' was not declared in this scope
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:54: note: suggested alternative: 'size_t'
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                      ^~~~~~~~~
                                                      size_t
../components/tiny_dnn/include/tiny_dnn/xtensor/xview.hpp:902:71: error: expected primary-expression before 'f'
 void xview_stepper<is_const, CT, S...>::common_reset(size_type dim, F f) {
                                                                       ^
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xstorage.hpp:19,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xbuffer_adaptor.hpp:18,
                 from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:16,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp: In substitution of 'template<class S> using const_closure_t = typename xt::const_closure::type [with S = float]':
../components/tiny_dnn/include/tiny_dnn/xtensor/xexpression.hpp:134:34:   required from 'struct xt::const_xclosure<float, void>'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbroadcast.hpp:163:64:   required from 'auto xt::broadcast(E&&, const I (&)[L]) [with E = float; I = unsigned int; unsigned int L = 2]'
../components/tiny_dnn/include/tiny_dnn/xtensor/xbuilder.hpp:79:19:   required from 'auto xt::zeros(const I (&)[L]) [with T = float; I = unsigned int; unsigned int L = 2]'
../components/tiny_dnn/include/tiny_dnn/util/util.h:418:74:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xutils.hpp:588:56: error: no type named 'type' in 'struct xt::const_closure<float>'
 using const_closure_t = typename const_closure<S>::type;
                                                        ^
In file included from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/util/util.h: In function 'xt::xarray<float> tiny_dnn::to_xtensor(const tensor_t&)':
../components/tiny_dnn/include/tiny_dnn/util/util.h:418:50: error: conversion from 'void' to non-scalar type 'xt::xarray<float>' {aka 'xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >'} requested
   xt::xarray<float_t> result = xt::zeros<float_t>({t.size(), t[0].size()});
                                ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h: At global scope:
../components/tiny_dnn/include/tiny_dnn/util/util.h:437:8: error: 'enable_if_t' in namespace 'std' does not name a template type
   std::enable_if_t<std::is_same<T, typename ValType::value_type>::value>;
        ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h:437:3: note: suggested alternative: 'enable_if'
   std::enable_if_t<std::is_same<T, typename ValType::value_type>::value>;
   ^~~
   enable_if
../components/tiny_dnn/include/tiny_dnn/util/util.h:440:24: error: 'value_type_is' does not name a type
 using value_is_float = value_type_is<ValType, float>;
                        ^~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/util/util.h:443:25: error: 'value_type_is' does not name a type
 using value_is_double = value_type_is<ValType, double>;
                         ^~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:14,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:107:22: error: 'shape' function uses 'auto' type specifier without trailing return type
   const auto shape() const { return storage_.shape(); }
                      ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:107:22: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:113:20: error: 'dim' function uses 'auto' type specifier without trailing return type
   const auto dim() const { return storage_.dimension(); }
                    ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:113:20: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:119:3: warning: type qualifiers ignored on function return type [-Wignored-qualifiers]
   const size_t size() const { return storage_.size(); }
   ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:145:19: error: 'host_begin' function uses 'auto' type specifier without trailing return type
   auto host_begin() { return storage_.begin(); }
                   ^
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:145:19: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:147:27: error: 'host_begin' function uses 'auto' type specifier without trailing return type
   const auto host_begin() const { return storage_.cbegin(); }
                           ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:147:27: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:149:17: error: 'host_end' function uses 'auto' type specifier without trailing return type
   auto host_end() { return storage_.end(); }
                 ^
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:149:17: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:151:25: error: 'host_end' function uses 'auto' type specifier without trailing return type
   const auto host_end() const { return storage_.cend(); }
                         ^~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:151:25: note: deduced return type only available with -std=c++14 or -std=gnu++14
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: error: 'make_unsigned_t' is not a member of 'std'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: note: suggested alternative: 'make_unsigned'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
                                                  make_unsigned
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: error: 'make_unsigned_t' is not a member of 'std'
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:50: note: suggested alternative: 'make_unsigned'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                  ^~~~~~~~~~~~~~~
                                                  make_unsigned
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:66: error: template argument 1 is invalid
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                  ^~~~~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:72: error: template argument 2 is invalid
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                        ^~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:74: error: expected parameter pack before '...'
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                          ^~~
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:74: error: template argument 2 is invalid
../components/tiny_dnn/include/tiny_dnn/core/framework/tensor.h:242:77: error: expected unqualified-id before '>' token
   Tensor<U, xt::xview<Storage &, xt::xrange<std::make_unsigned_t<Values>>...>>
                                                                             ^~
In file included from ../components/tiny_dnn/include/tiny_dnn/layers/cells.h:11,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:35,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h: In member function 'void tiny_dnn::rnn_cell::set_params(size_t, size_t, bool)':
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:32: error: 'make_unique' is not a member of 'std'
     params_.activation_ = std::make_unique<tanh_layer>(tanh_layer());
                                ^~~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:32: note: 'std::make_unique' is only available from C++14 onwards
../components/tiny_dnn/include/tiny_dnn/layers/rnn_cell.h:150:54: error: expected primary-expression before '>' token
     params_.activation_ = std::make_unique<tanh_layer>(tanh_layer());
                                                      ^
In file included from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:43,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h: In member function 'virtual void tiny_dnn::l2_normalization_layer::back_propagation(const std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, const std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&, std::vector<std::vector<std::vector<float, tiny_dnn::aligned_allocator<float, 64> > >*>&)':
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:109:15: warning: unused variable 'prev_delta' [-Wunused-variable]
     tensor_t &prev_delta     = *in_grad[0];
               ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:110:15: warning: unused variable 'curr_delta' [-Wunused-variable]
     tensor_t &curr_delta     = *out_grad[0];
               ^~~~~~~~~~
../components/tiny_dnn/include/tiny_dnn/layers/l2_normalization_layer.h:112:18: warning: unused variable 'num_samples' [-Wunused-variable]
     const size_t num_samples = curr_out.size();
                  ^~~~~~~~~~~
In file included from ../main/main.cpp:3:
../main/ota.cpp: In function 'void initialise_wifi()':
../main/ota.cpp:84:24: warning: 'void tcpip_adapter_init()' is deprecated [-Wdeprecated-declarations]
     tcpip_adapter_init();
                        ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include/esp_netif.h:35,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:22,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include/tcpip_adapter.h:34:6: note: declared here
 void tcpip_adapter_init(void)  __attribute__ ((deprecated));
      ^~~~~~~~~~~~~~~~~~
In file included from ../main/main.cpp:3:
../main/ota.cpp:84:24: warning: 'void tcpip_adapter_init()' is deprecated [-Wdeprecated-declarations]
     tcpip_adapter_init();
                        ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_netif/include/esp_netif.h:35,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:22,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/tcpip_adapter/include/tcpip_adapter.h:34:6: note: declared here
 void tcpip_adapter_init(void)  __attribute__ ((deprecated));
      ^~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include/esp_timer.h:44,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include/freertos/portmacro.h:84,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/portable.h:95,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/FreeRTOS.h:107,
                 from ../main/main.cpp:1:
../main/ota.cpp:86:61: warning: 'esp_err_t esp_event_loop_init(system_event_cb_t, void*)' is deprecated [-Wdeprecated-declarations]
     ESP_ERROR_CHECK( esp_event_loop_init(event_handler, NULL) );
                                                             ^
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include/esp_err.h:118:31: note: in definition of macro 'ESP_ERROR_CHECK'
         esp_err_t __err_rc = (x);                                       \
                               ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:231:11: note: declared here
 esp_err_t esp_event_loop_init(system_event_cb_t cb, void *ctx) __attribute__ ((deprecated));
           ^~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_timer/include/esp_timer.h:44,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/xtensa/include/freertos/portmacro.h:84,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/portable.h:95,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/freertos/include/freertos/FreeRTOS.h:107,
                 from ../main/main.cpp:1:
../main/ota.cpp:86:61: warning: 'esp_err_t esp_event_loop_init(system_event_cb_t, void*)' is deprecated [-Wdeprecated-declarations]
     ESP_ERROR_CHECK( esp_event_loop_init(event_handler, NULL) );
                                                             ^
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_common/include/esp_err.h:118:31: note: in definition of macro 'ESP_ERROR_CHECK'
         esp_err_t __err_rc = (x);                                       \
                               ^
In file included from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event.h:26,
                 from /mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_wifi/include/esp_wifi.h:64,
                 from ../main/ota.cpp:9,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/research/onolab/esp/esp-idf/components/esp_event/include/esp_event_legacy.h:231:11: note: declared here
 esp_err_t esp_event_loop_init(system_event_cb_t cb, void *ctx) __attribute__ ((deprecated));
           ^~~~~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp: In instantiation of 'xt::xarray_container<EC, L, SC>::xarray_container(xt::nested_initializer_list_t<typename xt::xstrided_container<xt::xarray_container<EC, L, SC> >::value_type, 1>) [with EC = xt::uvector<float, std::allocator<float> >; xt::layout_type L = (xt::layout_type)1; SC = std::vector<unsigned int>; xt::nested_initializer_list_t<typename xt::xstrided_container<xt::xarray_container<EC, L, SC> >::value_type, 1> = std::initializer_list<float>]':
../components/tiny_dnn/include/tiny_dnn/util/util.h:417:55:   required from here
../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:323:18: error: no matching function for call to 'xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >::begin<row_major>()'
     : nested_copy(this->template begin<layout_type::row_major>(), t);
       ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/tiny_dnn/include/tiny_dnn/xtensor/xarray.hpp:17,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:24,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:233:28: note: candidate: 'template<class S, xt::layout_type L> xt::xcontainer<D>::broadcast_iterator<S, L> xt::xcontainer<D>::begin(const S&) [with S = S; xt::layout_type L = L; D = xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >]'
   broadcast_iterator<S, L> begin(const S& shape) noexcept;
                            ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:233:28: note:   template argument deduction/substitution failed:
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:238:34: note: candidate: 'template<class S, xt::layout_type L> xt::xcontainer<D>::const_broadcast_iterator<S, L> xt::xcontainer<D>::begin(const S&) const [with S = S; xt::layout_type L = L; D = xt::xarray_container<xt::uvector<float, std::allocator<float> >, (xt::layout_type)1, std::vector<unsigned int> >]'
   const_broadcast_iterator<S, L> begin(const S& shape) const noexcept;
                                  ^~~~~
../components/tiny_dnn/include/tiny_dnn/xtensor/xcontainer.hpp:238:34: note:   template argument deduction/substitution failed:
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/external/rapidjson/document.h: In instantiation of 'void rapidjson::GenericValue<Encoding, Allocator>::SetObjectRaw(rapidjson::GenericValue<Encoding, Allocator>::Member*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]':
../components/cereal/include/cereal/external/rapidjson/document.h:789:3:   required from 'void rapidjson::GenericDocument<Encoding, Allocator>::EndObject(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]'
../components/cereal/include/cereal/external/rapidjson/reader.h:276:4:   required from 'void rapidjson::GenericReader<Encoding, Allocator>::ParseObject(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/reader.h:248:38:   required from 'bool rapidjson::GenericReader<Encoding, Allocator>::Parse(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/document.h:712:3:   required from 'rapidjson::GenericDocument<Encoding, Allocator>& rapidjson::GenericDocument<Encoding, Allocator>::ParseStream(Stream&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/archives/json.hpp:412:49:   required from here
../components/cereal/include/cereal/external/rapidjson/document.h:645:9: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'struct rapidjson::GenericValue<rapidjson::UTF8<> >::Member' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Werror=class-memaccess]
   memcpy(data_.o.members, members, count * sizeof(Member));
   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/external/rapidjson/document.h:33:9: note: 'struct rapidjson::GenericValue<rapidjson::UTF8<> >::Member' declared here
  struct Member {
         ^~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/external/rapidjson/document.h: In instantiation of 'void rapidjson::GenericValue<Encoding, Allocator>::SetArrayRaw(rapidjson::GenericValue<Encoding, Allocator>*, rapidjson::SizeType, Allocator&) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]':
../components/cereal/include/cereal/external/rapidjson/document.h:796:3:   required from 'void rapidjson::GenericDocument<Encoding, Allocator>::EndArray(rapidjson::SizeType) [with Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>; rapidjson::SizeType = unsigned int]'
../components/cereal/include/cereal/external/rapidjson/reader.h:318:4:   required from 'void rapidjson::GenericReader<Encoding, Allocator>::ParseArray(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/reader.h:249:37:   required from 'bool rapidjson::GenericReader<Encoding, Allocator>::Parse(Stream&, Handler&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Handler = rapidjson::GenericDocument<rapidjson::UTF8<> >; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/external/rapidjson/document.h:712:3:   required from 'rapidjson::GenericDocument<Encoding, Allocator>& rapidjson::GenericDocument<Encoding, Allocator>::ParseStream(Stream&) [with unsigned int parseFlags = 0; Stream = rapidjson::GenericReadStream; Encoding = rapidjson::UTF8<>; Allocator = rapidjson::MemoryPoolAllocator<>]'
../components/cereal/include/cereal/archives/json.hpp:412:49:   required from here
../components/cereal/include/cereal/external/rapidjson/document.h:637:9: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'class rapidjson::GenericValue<rapidjson::UTF8<> >' with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Werror=class-memaccess]
   memcpy(data_.a.elements, values, count * sizeof(GenericValue));
   ~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/archives/json.hpp:52,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/external/rapidjson/document.h:30:7: note: 'class rapidjson::GenericValue<rapidjson::UTF8<> >' declared here
 class GenericValue {
       ^~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::elu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::leaky_relu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::relu_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::sigmoid_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softmax_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softplus_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::softsign_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::tanh_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'cereal::memory_detail::EnableSharedStateHelper<T>::~EnableSharedStateHelper() [with T = tiny_dnn::tanh_p1m2_layer]':
../components/cereal/include/cereal/details/polymorphic_impl.hpp:259:61:   required from 'static void cereal::detail::OutputBindingCreator<Archive, T>::savePolymorphicSharedPtr(Archive&, const void*, std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:300:37:   required from 'cereal::detail::OutputBindingCreator<Archive, T>::OutputBindingCreator() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   required from 'static T& cereal::detail::StaticObject<T>::getInstance() [with T = cereal::detail::OutputBindingCreator<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:341:91:   required from 'static const cereal::detail::OutputBindingCreator<Archive, T>& cereal::detail::create_bindings<Archive, T>::save(std::true_type) [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer; std::true_type = std::integral_constant<bool, true>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:377:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryOutputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:239:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryOutputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryOutputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:137:22: error: 'void* memcpy(void*, const void*, size_t)' writing to an object of type 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} with no trivial copy-assignment [-Werror=class-memaccess]
           std::memcpy( itsPtr, &itsState, sizeof(ParentType) );
           ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/memory:81,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:19,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
/mnt/c/Users/popura/linux_home/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf/xtensa-esp32-elf/include/c++/8.4.0/bits/shared_ptr.h:639:11: note: 'using ParentType = class std::enable_shared_from_this<tiny_dnn::node>' {aka 'class std::enable_shared_from_this<tiny_dnn::node>'} declared here
     class enable_shared_from_this
           ^~~~~~~~~~~~~~~~~~~~~~~
In file included from ../components/cereal/include/cereal/types/polymorphic.hpp:34,
                 from ../components/tiny_dnn/include/tiny_dnn/util/util.h:35,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::elu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::relu_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:168:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>}; ArchiveType = cereal::BinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:179:15:   required from 'cereal::detail::InputBindingCreator<Archive, T>::InputBindingCreator() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/static_object.hpp:69:20:   required from 'static T& cereal::detail::StaticObject<T>::create() [with T = cereal::detail::InputBindingCreator<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>]'
../components/cereal/include/cereal/details/static_object.hpp:79:24:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::BinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/binary.hpp:160:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::BinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::BinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::elu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer; D = std::default_delete<tiny_dnn::elu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::elu_layer, std::default_delete<tiny_dnn::elu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::elu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::elu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::elu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::elu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:81:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::leaky_relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer; D = std::default_delete<tiny_dnn::leaky_relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::leaky_relu_layer, std::default_delete<tiny_dnn::leaky_relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::leaky_relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::leaky_relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::leaky_relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::leaky_relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:82:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<208, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::relu_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer; D = std::default_delete<tiny_dnn::relu_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::relu_layer, std::default_delete<tiny_dnn::relu_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::relu_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::relu_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::relu_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::relu_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:83:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::sigmoid_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer; D = std::default_delete<tiny_dnn::sigmoid_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::sigmoid_layer, std::default_delete<tiny_dnn::sigmoid_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::sigmoid_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::sigmoid_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::sigmoid_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::sigmoid_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:84:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softmax_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer; D = std::default_delete<tiny_dnn::softmax_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softmax_layer, std::default_delete<tiny_dnn::softmax_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softmax_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softmax_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softmax_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softmax_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:85:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softplus_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer; D = std::default_delete<tiny_dnn::softplus_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softplus_layer, std::default_delete<tiny_dnn::softplus_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softplus_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softplus_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softplus_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softplus_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:86:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<212, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::softsign_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer; D = std::default_delete<tiny_dnn::softsign_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::softsign_layer, std::default_delete<tiny_dnn::softsign_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::softsign_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::softsign_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::softsign_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::softsign_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:87:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer; D = std::default_delete<tiny_dnn::tanh_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_layer, std::default_delete<tiny_dnn::tanh_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:88:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&}; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/archives/portable_binary.hpp:202:7:   required from 'typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type cereal::serialize(Archive&, cereal::NameValuePair<T>&) [with Archive = cereal::PortableBinaryInputArchive; T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename std::enable_if<(cereal::traits::is_same_archive<Archive, cereal::PortableBinaryInputArchive>::value || cereal::traits::is_same_archive<Archive, cereal::PortableBinaryOutputArchive>::value), void>::type = void]'
../components/cereal/include/cereal/cereal.hpp:762:39:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_serialize<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_serialize<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::PortableBinaryInputArchive; unsigned int Flags = 1]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::PortableBinaryInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/portable_binary.hpp:240:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::PortableBinaryInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::PortableBinaryInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::shared_ptr<_Tp>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::shared_ptr<tiny_dnn::tanh_p1m2_layer>&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:271:41: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       ptr.reset( reinterpret_cast<T *>( new ST() ),
                                         ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:271:41: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:271:41: note: use '-faligned-new' to enable C++17 over-aligned new support
../components/cereal/include/cereal/types/memory.hpp: In instantiation of 'typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type cereal::load(Archive&, cereal::memory_detail::PtrWrapper<std::unique_ptr<T, D>&>&) [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer; D = std::default_delete<tiny_dnn::tanh_p1m2_layer>; typename std::enable_if<cereal::traits::has_load_and_construct<T, Archive>::value, void>::type = void]':
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   required from 'void cereal::InputArchive<ArchiveType, Flags>::process(T&&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:604:9:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::operator()(Types&& ...) [with Types = {cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>&}; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/archives/json.hpp:858:7:   required from 'void cereal::load(cereal::JSONInputArchive&, cereal::NameValuePair<T>&) [with T = cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&>]'
../components/cereal/include/cereal/cereal.hpp:778:34:   required from 'ArchiveType& cereal::InputArchive<ArchiveType, Flags>::processImpl(T&) [with T = cereal::NameValuePair<cereal::memory_detail::PtrWrapper<std::unique_ptr<tiny_dnn::tanh_p1m2_layer, std::default_delete<tiny_dnn::tanh_p1m2_layer> >&> >; typename cereal::traits::detail::EnableIfHelper<cereal::traits::has_non_member_load<T, ArchiveType>::value, (! cereal::traits::has_invalid_input_versioning<T, ArchiveType>::value), (cereal::traits::is_input_serializable<T, ArchiveType>::value && (cereal::traits::is_specialized_non_member_load<T, ArchiveType>::value || (! cereal::traits::is_specialized<T, ArchiveType>::value)))>::type <anonymous> = (cereal::traits::detail::type)0; ArchiveType = cereal::JSONInputArchive; unsigned int Flags = 0]'
../components/cereal/include/cereal/cereal.hpp:701:9:   [ skipping 6 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
../components/cereal/include/cereal/details/polymorphic_impl.hpp:381:39:   required from 'static void cereal::detail::polymorphic_serialization_support<Archive, T>::instantiate() [with Archive = cereal::JSONInputArchive; T = tiny_dnn::tanh_p1m2_layer]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:359:5:   required from 'struct cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, tiny_dnn::tanh_p1m2_layer>'
../components/cereal/include/cereal/archives/json.hpp:906:1:   required by substitution of 'template<class T, class BindingTag> typename cereal::detail::polymorphic_serialization_support<cereal::JSONInputArchive, T>::type cereal::detail::instantiate_polymorphic_binding(T*, cereal::JSONInputArchive*, BindingTag, cereal::detail::adl_tag) [with T = tiny_dnn::tanh_p1m2_layer; BindingTag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:397:38:   required from 'void cereal::detail::bind_to_archives<T, Tag>::bind(std::false_type) const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag; std::false_type = std::integral_constant<bool, false>]'
../components/cereal/include/cereal/details/polymorphic_impl.hpp:411:9:   required from 'const cereal::detail::bind_to_archives<T, Tag>& cereal::detail::bind_to_archives<T, Tag>::bind() const [with T = tiny_dnn::tanh_p1m2_layer; Tag = cereal::detail::{anonymous}::polymorphic_binding_tag]'
../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:89:1:   required from here
../components/cereal/include/cereal/types/memory.hpp:354:34: error: 'new' of type 'ST' {aka 'std::aligned_storage<204, 16>::type'} with extended alignment 16 [-Werror=aligned-new=]
       std::unique_ptr<ST> stPtr( new ST() );
                                  ^~~~~~~~
../components/cereal/include/cereal/types/memory.hpp:354:34: note: uses 'void* operator new(std::size_t)', which does not have an alignment parameter
../components/cereal/include/cereal/types/memory.hpp:354:34: note: use '-faligned-new' to enable C++17 over-aligned new support
In file included from ../components/tiny_dnn/include/tiny_dnn/util/util.h:31,
                 from ../components/tiny_dnn/include/tiny_dnn/lossfunctions/loss_function.h:12,
                 from ../components/tiny_dnn/include/tiny_dnn/network.h:26,
                 from ../components/tiny_dnn/include/tiny_dnn/tiny_dnn.h:11,
                 from ../main/otohikari.cpp:12,
                 from ../main/ota.cpp:15,
                 from ../main/main.cpp:3:
../components/cereal/include/cereal/archives/json.hpp: In member function 'void cereal::JSONOutputArchive::finishNode()':
../components/cereal/include/cereal/archives/json.hpp:201:34: warning: this statement may fall through [-Wimplicit-fallthrough=]
             itsWriter.StartArray();
                                  ^
../components/cereal/include/cereal/archives/json.hpp:202:11: note: here
           case NodeType::InArray:
           ^~~~
../components/cereal/include/cereal/archives/json.hpp:206:35: warning: this statement may fall through [-Wimplicit-fallthrough=]
             itsWriter.StartObject();
                                   ^
../components/cereal/include/cereal/archives/json.hpp:207:11: note: here
           case NodeType::InObject:
           ^~~~
cc1plus: some warnings being treated as errors
ninja: build stopped: subcommand failed.
Executing action: all (aliases: build)
Running ninja in directory /mnt/c/Users/popura/linux_home/research/onolab/blinky/firmware/blinky_ota/build
Executing "ninja all"...
ninja failed with exit code 1
